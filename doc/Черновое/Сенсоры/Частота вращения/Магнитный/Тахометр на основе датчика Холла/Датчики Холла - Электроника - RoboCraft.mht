From: <Сохранено Windows Internet Explorer 8>
Subject: =?windows-1251?B?xODy9+jq6CDV7uvr4CAvIN3r5ery8O7t6OrgIC8gUm9ib0NyYWZ0?=
Date: Thu, 7 Mar 2013 12:45:26 +0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CE1B31.A44E5EB0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.6157

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/blog/electronics/594.html

77u/PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMCBUcmFuc2l0aW9u
YWwvL0VOIj4NCjxIVE1MIGxhbmc9cnUgeG1sOmxhbmc9InJ1IiB4bWxucz0iaHR0cDovL3d3dy53
My5vcmcvMTk5OS94aHRtbCI+PEhFQUQ+PFRJVExFPtCU0LDRgtGH0LjQutC4INCl0L7Qu9C70LAg
LyDQrdC70LXQutGC0YDQvtC90LjQutCwIC8gUm9ib0NyYWZ0PC9USVRMRT4NCjxNRVRBIGNvbnRl
bnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIgaHR0cC1lcXVpdj1jb250ZW50LXR5cGU+DQo8
TUVUQSBuYW1lPURFU0NSSVBUSU9OIA0KY29udGVudD0i0JTQsNGC0YfQuNC6INCl0L7Qu9C70LAg
4oCUINGN0YLQviDQtNCw0YLRh9C40Log0LzQsNCz0L3QuNGC0L3QvtCz0L4g0L/QvtC70Y8uINCe
0L0g0LHRi9C7INGC0LDQuiDQvdCw0LfQstCw0L0g0LjQty3Qt9CwINC/0YDQuNC90YbQuNC/0LAg
0YHQstC+0LXQuSDRgNCw0LHQvtGC0Ysg4oCUINGN0YTRhNC10LrRgtCwINCl0L7Qu9C70LAgOiDQ
tdGB0LvQuCI+DQo8TUVUQSBuYW1lPUtFWVdPUkRTIA0KY29udGVudD0i0LTQsNGC0YfQuNC6INCl
0L7Qu9C70LAs0LzQsNCz0L3QuNGCLEFyZHVpbm8s0Y3QvdC60L7QtNC10YAsSGFsbCBzZW5zb3Is
bWFnbmV0LGVuY29kZXIiPjxMSU5LIA0KcmVsPXN0eWxlc2hlZXQgdHlwZT10ZXh0L2NzcyANCmhy
ZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2Nzcy9zdHlsZS5jc3M/
dj0xIj48IS0tW2lmIElFIDZdPjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3Mi
IGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2Nzcy9pZTYuY3Nz
P3Y9MSIgLz48IVtlbmRpZl0tLT48IS0tW2lmIGd0ZSBJRSA3XT48TElOSyANCnJlbD1zdHlsZXNo
ZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9z
a2luL25ldy9jc3MvaWU3LmNzcz92PTEiPjwhW2VuZGlmXS0tPjxMSU5LIA0KcmVsPXN0eWxlc2hl
ZXQgdHlwZT10ZXh0L2NzcyANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3Nr
aW4vbmV3L2Nzcy9Sb2FyLmNzcyI+PExJTksgcmVsPXN0eWxlc2hlZXQgDQp0eXBlPXRleHQvY3Nz
IA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvY3NzL3BpZWNo
YXJ0LmNzcyI+PExJTksgDQpyZWw9c3R5bGVzaGVldCB0eXBlPXRleHQvY3NzIA0KaHJlZj0iaHR0
cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvY3NzL0F1dG9jb21wbGV0ZXIuY3Nz
Ij48TElOSyANCnJlbD1zdHlsZXNoZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9jc3MvcHJldHRpZnkuY3NzIj48IS0tW2lmIGd0
IElFIDZdPjxMSU5LIA0KcmVsPXN0eWxlc2hlZXQgdHlwZT10ZXh0L2NzcyANCmhyZWY9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2Nzcy9zaW1wbGVfY29tbWVudHMuY3Nz
Ij48IVtlbmRpZl0tLT48TElOSyANCnJlbD0ic2hvcnRjdXQgaWNvbiIgDQpocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9pbWFnZXMvZmF2aWNvbi5pY28iPjxMSU5L
IA0KdGl0bGU9Um9ib0NyYWZ0IHJlbD1zZWFyY2ggdHlwZT1hcHBsaWNhdGlvbi9vcGVuc2VhcmNo
ZGVzY3JpcHRpb24reG1sIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9zZWFyY2gvb3BlbnNl
YXJjaC8iPjxMSU5LIHRpdGxlPSLQlNCw0YLRh9C40LrQuCDQpdC+0LvQu9CwIiANCnJlbD1hbHRl
cm5hdGUgdHlwZT1hcHBsaWNhdGlvbi9yc3MreG1sIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9yc3MvY29tbWVudHMvNTk0LyI+DQo8U0NSSVBUIGxhbmd1YWdlPUphdmFTY3JpcHQgdHlwZT10
ZXh0L2phdmFzY3JpcHQ+CnZhciBESVJfV0VCX1JPT1Q9J2h0dHA6Ly9yb2JvY3JhZnQucnUnOwp2
YXIgRElSX1NUQVRJQ19TS0lOPSdodHRwOi8vcm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25l
dyc7CnZhciBCTE9HX1VTRV9USU5ZTUNFPScnOwo8L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRl
eHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS9jbGFzc2VzL2xpYi9leHRl
cm5hbC9Kc0h0dHBSZXF1ZXN0L0pzSHR0cFJlcXVlc3QuanMiPjwvU0NSSVBUPg0KDQo8U0NSSVBU
IHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2NsYXNzZXMv
bGliL2V4dGVybmFsL01vb1Rvb2xzXzEuMi9tb290b29scy0xLjIuanM/dj0xLjIuMiI+PC9TQ1JJ
UFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvY2xhc3Nlcy9saWIvZXh0ZXJuYWwvTW9vVG9vbHNfMS4yL3BsdWdzL1JvYWwvUm9hci5q
cyI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQgDQpzcmM9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvY2xhc3Nlcy9saWIvZXh0ZXJuYWwvTW9vVG9vbHNfMS4yL3BsdWdzL0F1
dG9jb21wbGV0ZXIvT2JzZXJ2ZXIuanMiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9q
YXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2NsYXNzZXMvbGliL2V4dGVybmFs
L01vb1Rvb2xzXzEuMi9wbHVncy9BdXRvY29tcGxldGVyL0F1dG9jb21wbGV0ZXIuanMiPjwvU0NS
SVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L2NsYXNzZXMvbGliL2V4dGVybmFsL01vb1Rvb2xzXzEuMi9wbHVncy9BdXRvY29tcGxl
dGVyL0F1dG9jb21wbGV0ZXIuUmVxdWVzdC5qcyI+PC9TQ1JJUFQ+DQo8IS0tW2lmIElFXT4NCjxT
Q1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvY2xh
c3Nlcy9saWIvZXh0ZXJuYWwvTW9vVG9vbHNfMS4yL3BsdWdzL1BpZWNoYXJ0L21vb2NhbnZhcy5q
cyI+PC9TQ1JJUFQ+DQo8IVtlbmRpZl0tLT4NCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQg
DQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvY2xhc3Nlcy9saWIvZXh0ZXJuYWwvTW9vVG9vbHNf
MS4yL3BsdWdzL1BpZWNoYXJ0L3BpZWNoYXJ0LmpzIj48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBl
PXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS9jbGFzc2VzL2xpYi9l
eHRlcm5hbC9wcmV0dGlmeS9wcmV0dGlmeS5qcyI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10
ZXh0L2phdmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4v
bmV3L2pzL3ZvdGUuanMiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0
IA0Kc3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9qcy9mYXZvdXJp
dGVzLmpzIj48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0i
aHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvanMvcXVlc3Rpb25zLmpzIj48
L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvanMvYmxvY2tfbG9hZGVyLmpzIj48L1NDUklQ
VD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3JvYm9jcmFm
dC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvanMvZnJpZW5kLmpzIj48L1NDUklQVD4NCg0KPFNDUklQ
VCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0
ZXMvc2tpbi9uZXcvanMvYmxvZy5qcyI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2ph
dmFzY3JpcHQgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2pz
L290aGVyLmpzIj48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNy
Yz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvanMvbG9naW4uanMiPjwv
U0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9qcy9wYW5lbC5qcyI+PC9TQ1JJUFQ+DQoNCjxT
Q1JJUFQgbGFuZ3VhZ2U9SmF2YVNjcmlwdCB0eXBlPXRleHQvamF2YXNjcmlwdD4KdmFyIHRpbnlN
Q0U9ZmFsc2U7CnZhciBtc2dFcnJvckJveD1uZXcgUm9hcih7CgkJCXBvc2l0aW9uOiAndXBwZXJS
aWdodCcsCgkJCWNsYXNzTmFtZTogJ3JvYXItZXJyb3InLAoJCQltYXJnaW46IHt4OiAzMCwgeTog
MTB9CgkJfSk7CQp2YXIgbXNnTm90aWNlQm94PW5ldyBSb2FyKHsKCQkJcG9zaXRpb246ICd1cHBl
clJpZ2h0JywKCQkJY2xhc3NOYW1lOiAncm9hci1ub3RpY2UnLAoJCQltYXJnaW46IHt4OiAzMCwg
eTogMTB9CgkJfSk7CQo8L1NDUklQVD4NCg0KPE1FVEEgbmFtZT1HRU5FUkFUT1IgY29udGVudD0i
TVNIVE1MIDguMDAuNjAwMS4xOTE1NCI+PC9IRUFEPg0KPEJPRFkgb25sb2FkPXByZXR0eVByaW50
KCk+DQo8RElWIA0Kc3R5bGU9IkJPUkRFUi1CT1RUT006ICNkZDAwMDAgMnB4IHNvbGlkOyBCT1JE
RVItTEVGVDogI2RkMDAwMCAycHggc29saWQ7IERJU1BMQVk6IG5vbmU7IEJPUkRFUi1UT1A6ICNk
ZDAwMDAgMnB4IHNvbGlkOyBCT1JERVItUklHSFQ6ICNkZDAwMDAgMnB4IHNvbGlkIiANCmlkPWRl
YnVnPjwvRElWPg0KPERJViBpZD1jb250YWluZXI+PCEtLSBIZWFkZXIgLS0+DQo8RElWIHN0eWxl
PSJESVNQTEFZOiBub25lIj4NCjxESVYgaWQ9bG9naW4tZm9ybSBjbGFzcz1sb2dpbi1wb3B1cD4N
CjxESVYgY2xhc3M9bG9naW4tcG9wdXAtdG9wPjxBIGNsYXNzPWNsb3NlLWJsb2NrIG9uY2xpY2s9
InJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9u
aWNzLzU5NC5odG1sIyI+PC9BPjwvRElWPg0KPERJViBjbGFzcz1jb250ZW50Pg0KPEZPUk0gbWV0
aG9kPXBvc3QgYWN0aW9uPWh0dHA6Ly9yb2JvY3JhZnQucnUvbG9naW4vPg0KPEgzPtCQ0LLRgtC+
0YDQuNC30LDRhtC40Y88L0gzPg0KPERJViBjbGFzcz1saXRlLW5vdGU+PEEgDQpocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L3JlZ2lzdHJhdGlvbi8iPtCX0LDRgNC10LPQuNGB0YLRgNC40YDQvtCy
0LDRgtGM0YHRjzwvQT48TEFCRUwgDQpmb3I9IiI+0JvQvtCz0LjQvSDQuNC70Lgg0Y3Quy4g0L/Q
vtGH0YLQsDwvTEFCRUw+PC9ESVY+DQo8UD48SU5QVVQgaWQ9bG9naW4taW5wdXQgY2xhc3M9aW5w
dXQtdGV4dCB0YWJJbmRleD0xIHR5cGU9dGV4dCBuYW1lPWxvZ2luPjwvUD4NCjxESVYgY2xhc3M9
bGl0ZS1ub3RlPjxBIHRhYkluZGV4PS0xIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9sb2dp
bi9yZW1pbmRlci8iPtCd0LDQv9C+0LzQvdC40YLRjCDQv9Cw0YDQvtC70Yw8L0E+PExBQkVMIA0K
Zm9yPSIiPtCf0LDRgNC+0LvRjDwvTEFCRUw+PC9ESVY+DQo8UD48SU5QVVQgY2xhc3M9aW5wdXQt
dGV4dCB0YWJJbmRleD0yIHR5cGU9cGFzc3dvcmQgbmFtZT1wYXNzd29yZD48L1A+DQo8RElWIGNs
YXNzPWxpdGUtbm90ZT48QlVUVE9OIG9uZm9jdXM9Ymx1cigpIA0KdHlwZT1zdWJtaXQ+PFNQQU4+
PEVNPtCS0L7QudGC0Lg8L0VNPjwvU1BBTj48L0JVVFRPTj48TEFCRUwgY2xhc3M9aW5wdXQtY2hl
Y2tib3ggDQpmb3I9IiI+PElOUFVUIHRhYkluZGV4PTMgQ0hFQ0tFRCB0eXBlPWNoZWNrYm94IG5h
bWU9cmVtZW1iZXI+0JfQsNC/0L7QvNC90LjRgtGMIA0K0LzQtdC90Y88L0xBQkVMPjwvRElWPjxJ
TlBVVCB0eXBlPWhpZGRlbiBuYW1lPXN1Ym1pdF9sb2dpbj4gPC9GT1JNPjwvRElWPg0KPERJViBj
bGFzcz1sb2dpbi1wb3B1cC1ib3R0b20+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGlkPWhlYWRl
cj4NCjxIMSANCnN0eWxlPSJQQURESU5HLUJPVFRPTTogMHB4OyBQQURESU5HLUxFRlQ6IDBweDsg
UEFERElORy1SSUdIVDogMHB4OyBQQURESU5HLVRPUDogMHB4Ij48QSANCnN0eWxlPSJQQURESU5H
LUxFRlQ6IDgwcHg7IERJU1BMQVk6IGJsb2NrOyBCQUNLR1JPVU5EOiB1cmwoaHR0cDovL3JvYm9j
cmFmdC5ydS9yYzgwLnBuZykgbm8tcmVwZWF0IDBweCAtMXB4OyBIRUlHSFQ6IDgwcHg7IFBBRERJ
TkctVE9QOiAyNXB4IiANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvIj48U1RST05HPlJvYm88
L1NUUk9ORz5DcmFmdDwvQT48L0gxPg0KPFVMIGNsYXNzPW5hdi1tYWluPg0KICA8TEkgY2xhc3M9
YWN0aXZlPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy8iPtCR0LvQvtCz0Lg8L0E+
PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcGVvcGxlLyI+0JvRjtC0
0Lg8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcGFnZS9hYm91
dC8iPtCeINC/0YDQvtC10LrRgtC1PC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3BhZ2Uvc3VtbWFyeS8iPjxGT05UIA0KICBjb2xvcj13aGl0ZT7QodGC0LDRgtGM
0Lg8L0ZPTlQ+PC9BPjwvTEk+DQogIDxMST48QSBzdHlsZT0iRk9OVC1TSVpFOiAyMHB4OyBURVhU
LURFQ09SQVRJT046IG5vbmUiIHRpdGxlPSLQndCw0Ygg0JzQsNCz0LDQt9C40L0iIA0KICBocmVm
PSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Nob3AvIj48Rk9OVCBjb2xvcj1vcmFuZ2U+0J3QsNGIIA0K
0JzQsNCz0LDQt9C40L08L0ZPTlQ+PC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3BhZ2UvZmFxLyI+RkFRPC9BPiA8L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDov
L3JvYm9jcmFmdC5ydS9mb3J1bS8iPtCk0L7RgNGD0Lw8L0E+IDwvTEk+DQogIDxMST48QSBzdHls
ZT0iQ09MT1I6IHJnYigxMTksMjA5LDIxKSIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUv
YmxvZy9Sb2JvQ3JhZnQvMjg4MS5odG1sIj7QmtC40LHQtdGA0JLQtdGB0L3QsDwvQT4gPC9MST48
IS0tPGxpPgoJCQkJPGEgc3R5bGU9ImNvbG9yOiByZ2IoMTE5LCAyMDksIDIxKTsiIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9Sb2JvQ3JhZnQvOTQ2Lmh0bWwiPtCa0LjQsdC10YDQm9C1
0YLQvjwvYT4KCQkJPC9saT4tLT48L1VMPg0KPERJViBjbGFzcz0icHJvZmlsZSBndWVzdCI+PEEg
b25jbGljaz0icmV0dXJuIHNob3dMb2dpbkZvcm0oKTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9sb2dpbi8iPtCS0L7QudGC0Lg8L0E+INC40LvQuCA8QSBjbGFzcz1yZWcgDQpocmVmPSJo
dHRwOi8vcm9ib2NyYWZ0LnJ1L3JlZ2lzdHJhdGlvbi8iPtCX0LDRgNC10LPQuNGB0YLRgNC40YDQ
vtCy0LDRgtGM0YHRjzwvQT4gPC9ESVY+PC9ESVY+PCEtLSAvSGVhZGVyIC0tPu+7vyA8IS0tIE5h
dmlnYXRpb24gLS0+DQo8RElWIGlkPW5hdj4NCjxESVYgY2xhc3M9bGVmdD48L0RJVj4NCjxVTCBj
bGFzcz1tZW51Pg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS8iPtCS0YHQtTwv
QT4gKzEgPC9MST4NCiAgPExJIGNsYXNzPWFjdGl2ZT48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L2Jsb2cvIj7QmtC+0LvQu9C10LrRgtC40LLQvdGL0LU8L0E+ICsxIA0KICA8VUwgY2xhc3M9
c3ViLW1lbnU+DQogICAgPExJPg0KICAgIDxESVY+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9ibG9nLyI+0KXQvtGA0L7RiNC40LU8L0E+PC9ESVY+PC9MST4NCiAgICA8TEk+DQogICAgPERJ
Vj48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvbmV3LyI+0J3QvtCy0YvQtTwvQT4g
KzE8L0RJVj48L0xJPg0KICAgIDxMST4NCiAgICA8RElWPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvYmxvZy9iYWQvIj7Qn9C70L7RhdC40LU8L0E+PC9ESVY+PC9MST48L1VMPjwvTEk+DQog
IDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2xvZy8iPtCf0LXRgNGB0L7QvdCw0LvR
jNC90YvQtTwvQT4gPC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdG9w
LyI+VE9QPC9BPiA8L0xJPjwvVUw+DQo8RElWIGNsYXNzPXJpZ2h0PjwvRElWPjwhLS08YSBocmVm
PSIjIiBjbGFzcz0icnNzIiBvbmNsaWNrPSJyZXR1cm4gZmFsc2U7Ij48L2E+LS0+DQo8RElWIGNs
YXNzPXNlYXJjaD4NCjxGT1JNIG1ldGhvZD1nZXQgYWN0aW9uPWh0dHA6Ly9yb2JvY3JhZnQucnUv
c2VhcmNoLz48SU5QVVQgDQpvbmJsdXI9Y2xvc2VfZmFzdF9zZWFyY2goKTsgaWQ9c3JjaCBjbGFz
cz10ZXh0IG9uZm9jdXM9dGhpcy5zZWxlY3QoKTsgDQpvbmtleXVwPWZhc3Rfc2VhcmNoKCk7IHZh
bHVlPdCf0L7QuNGB0LogbWF4TGVuZ3RoPTMyIHR5cGU9dGV4dCBuYW1lPXNlYXJjaGZvciANCmF1
dG9jb21wbGV0ZT0ib2ZmIj4gPElOUFVUIGNsYXNzPWJ1dHRvbiB0eXBlPXN1Ym1pdD4gPC9GT1JN
PjwvRElWPjwvRElWPjwhLS0gL05hdmlnYXRpb24gLS0+PExJTksgcmVsPXN0eWxlc2hlZXQgdHlw
ZT10ZXh0L2NzcyANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3
L2Nzcy9iYW5uZXItc2xpZGVyLmNzcyI+DQo8U0NSSVBUIGxhbmd1YWdlPUphdmFTY3JpcHQgdHlw
ZT10ZXh0L2phdmFzY3JpcHQ+Cgp3aW5kb3cuYWRkRXZlbnQoJ2RvbXJlYWR5JywgZnVuY3Rpb24o
KXsJCgl2YXIgb2JqPSQoJ215LXNsaWRlLWJhbm5lcicpOwoJdmFyIGFycm93ID0gJCgnc2xpZGUt
YmFubmVyLWFycm93Jyk7CglpZihvYmogJiYgYXJyb3cpCgl7CgkJdmFyIGJPcGVuID0gcmVhZF9j
b29raWUoKTsKCQlpZihiT3Blbj09JzEnKQoJCXsKCQkJb2JqLnNldFN0eWxlKCdkaXNwbGF5Jywg
J2Jsb2NrJyk7CgkJCWFycm93LnJlbW92ZUNsYXNzKCdvcGVuZWQnKTsKCQl9CgkJZWxzZQoJCXsK
CQkJb2JqLnNldFN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTsKCQkJYXJyb3cucmVtb3ZlQ2xhc3Mo
J29wZW5lZCcpOwoJCQlhcnJvdy50b2dnbGVDbGFzcygnb3BlbmVkJyk7CgkJfQoJCWlmIChvYmou
Z2V0U3R5bGUoJ2Rpc3BsYXknKT09J25vbmUnKSAKCQkJYXJyb3cuc2V0KCd0aXRsZScsJ9Ce0YLQ
utGA0YvRgtGMJyk7CgkJZWxzZQoJCQlhcnJvdy5zZXQoJ3RpdGxlJywn0JfQsNC60YDRi9GC0Ywn
KTsKCX0KfSk7CgpmdW5jdGlvbiByZWFkX2Nvb2tpZSgpCnsKCXZhciBhbGxjb29raWVzID0gZG9j
dW1lbnQuY29va2llOwoJLy9hbGVydChhbGxjb29raWVzKTsKCQoJLy8g0L/QvtC70YPRh9Cw0LXQ
vCDQt9C90LDRh9C10L3QuNGPINC40Lcg0LrRg9C60LjRgdCwIDopCgl2YXIgcG9zID0gYWxsY29v
a2llcy5pbmRleE9mKCJzbGlkZWJhbm5lcj0iKTsKCXZhciBzbGlkZWJhbm5lcj0xOwoJaWYgKHBv
cyAhPSAtMSkKCXsKCQl2YXIgc3RhcnQgPSBwb3MgKyAxMjsgLy8g0J3QsNGH0LDQu9C+INC30L3Q
sNGH0LXQvdC40Y8gY29va2llCgkJdmFyIGVuZCA9IGFsbGNvb2tpZXMuaW5kZXhPZigiOyIsIHN0
YXJ0KTsKCQlpZiAoZW5kID09IC0xKSBlbmQgPSBhbGxjb29raWVzLmxlbmd0aDsKCQkKCQlzbGlk
ZWJhbm5lciA9IGFsbGNvb2tpZXMuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpOyAKCQkvL2FsZXJ0KHNs
aWRlYmFubmVyKTsKCQlyZXR1cm4gc2xpZGViYW5uZXI7Cgl9CglyZXR1cm4gc2xpZGViYW5uZXI7
Cn0KCmZ1bmN0aW9uIHdyaXRlX2Nvb2tpZSh2YWwpCnsKCWRvY3VtZW50LmNvb2tpZSA9ICJzbGlk
ZWJhbm5lcj0iK3ZhbCsiO3BhdGg9LzsgbWF4LWFnZT0iICsgKDYwKjYwKjI0KjMxKTsKfQoKZnVu
Y3Rpb24gdG9nZ2xlU2xpZGVCQW5uZXJJbmZvKGxpbmspIHsKCWxpbms9JChsaW5rKTsKCXZhciBv
Ymo9JCgnbXktc2xpZGUtYmFubmVyJyk7CQoJdmFyIHNsaWRlT2JqID0gbmV3IEZ4LlNsaWRlKG9i
aiwgewoJCW9uQ29tcGxldGU6IGZ1bmN0aW9uKCl7CgkJCWlmKGxpbmsuZ2V0KCd0aXRsZScpPT0n
0J7RgtC60YDRi9GC0YwnKQoJCQl7CgkJCQlsaW5rLnNldCgndGl0bGUnLCfQl9Cw0LrRgNGL0YLR
jCcpOwoJCQkJd3JpdGVfY29va2llKDEpOwoJCQl9CgkJCWVsc2UKCQkJewoJCQkJbGluay5zZXQo
J3RpdGxlJywn0J7RgtC60YDRi9GC0YwnKTsKCQkJCXdyaXRlX2Nvb2tpZSgwKTsKCQkJfQoJICAg
IH0KCX0pOwoJaWYgKG9iai5nZXRTdHlsZSgnZGlzcGxheScpPT0nbm9uZScpIHsKCQlzbGlkZU9i
ai5oaWRlKCk7CgkJb2JqLnNldFN0eWxlKCdkaXNwbGF5JywnYmxvY2snKTsJCQoJfQkKCWxpbmsu
dG9nZ2xlQ2xhc3MoJ29wZW5lZCcpOwoJc2xpZGVPYmoudG9nZ2xlKCk7Cn0KPC9TQ1JJUFQ+DQo8
QSBpZD1zbGlkZS1iYW5uZXItYXJyb3cgY2xhc3M9c2xpZGUtYmFubmVyLWFycm93IA0Kb25jbGlj
az0idG9nZ2xlU2xpZGVCQW5uZXJJbmZvKHRoaXMpOyByZXR1cm4gZmFsc2U7IiANCmhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT4NCjxESVYg
aWQ9bXktc2xpZGUtYmFubmVyIGNsYXNzPSJibG9jayBzdHJlYW0iPg0KPERJViBjbGFzcz10bD4N
CjxESVYgY2xhc3M9dHI+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWNsPg0KPERJViBjbGFzcz1j
cj4NCjxESVY+DQo8RElWIHN0eWxlPSJNQVJHSU46IDBweDsgRElTUExBWTogYmxvY2siIGlkPW55
LWV4cGFuZC1jb250ZW50IA0KY2xhc3M9bnktZXhwYW5kLWNvbnRlbnQ+DQo8VEFCTEUgd2lkdGg9
IjEwMCUiPg0KICA8VEJPRFk+DQogIDxUUj4NCiAgICA8VEQgc3R5bGU9IlZFUlRJQ0FMLUFMSUdO
OiB0b3AiIHdpZHRoPSIyMCUiPjxBIA0KICAgICAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9z
aG9wL2luZGV4LnBocD9yb3V0ZT1wcm9kdWN0L3Byb2R1Y3QmYW1wO3Byb2R1Y3RfaWQ9NDkiPjxJ
TUcgDQogICAgICB0aXRsZT1DcmFmdER1aW5vIGFsdD0iIiANCiAgICAgIHNyYz0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS91cGxvYWRzL2ltYWdlcy9zdG9yZS80MC8wOC9mYy8xL2QwZjVlYl9wcmV2aWV3
LmpwZyI+PC9BPiANCiAgICA8L1REPg0KICAgIDxURCBzdHlsZT0iVkVSVElDQUwtQUxJR046IHRv
cCIgY2xhc3M9c2xpZGUtYmFubmVyLXRleHQ+DQogICAgICA8VUw+DQogICAgICAgIDxMST4tINGN
0YLQviA8U1BBTiBzdHlsZT0iQ09MT1I6IGJsYWNrIiANCiAgICAgICAgY2xhc3M9c2xpZGUtYmFu
bmVyLWJpZz5DcmFmdER1aW5vPC9TUEFOPiAtINC90LDRiCDQstCw0YDQuNCw0L3RgiDQv9C+0LvQ
vdC+0YHRgtGM0Y4gDQogICAgICAgIEFyZHVpbm8t0YHQvtCy0LzQtdGB0YLQuNC80L7QuSDQv9C7
0LDRgtGLLiA8L0xJPg0KICAgICAgICA8TEk+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9i
bG9nL1JvYm9DcmFmdC85Ny5odG1sIj5DcmFmdER1aW5vPC9BPiANCiAgICAgICAgLSDQvdCw0YHR
gtC+0Y/RidC40Lkg0LrQvtC90YHRgtGA0YPQutGC0L7RgCwg0LTQu9GPINC+0YfQtdC90Ywg0LHR
i9GB0YLRgNC+0LPQviDQv9GA0L7RgtC+0YLQuNC/0LjRgNC+0LLQsNC90LjRjyDQuCANCiAgICAg
ICAg0YDQtdCw0LvQuNC30LDRhtC40Lgg0LjQtNC10LkuIDwvTEk+DQogICAgICAgIDxMST7Qm9GO
0LHQsNGPINCy0L7Qt9C80L7QttC90L7RgdGC0Ywg0LDQstGC0L7QvNCw0YLQuNC30LjRgNC+0LLQ
sNGC0Ywg0YfRgtC+LdGC0L4g0YEg0LvRkdCz0LrQvtGB0YLRjNGOINGA0LXQsNC70LjQt9GD0LXR
gtGB0Y8g0YEgDQogICAgICAgIDxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9Sb2Jv
Q3JhZnQvOTcuaHRtbCI+Q3JhZnREdWlubzwvQT4hIA0KICAgICAgICA8L0xJPjwvVUw+DQogICAg
ICA8VUw+DQogICAgICAgIDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvYXJk
dWluby8xNC5odG1sIj48U1BBTiANCiAgICAgICAgc3R5bGU9IkNPTE9SOiAjNjI5M2MxIiBjbGFz
cz1zbGlkZS1iYW5uZXItYXZlcmFnZT7Qp9GC0L4g0YLQsNC60L7QtSANCiAgICAgICAgQXJkdWlu
bz88L1NQQU4+PC9BPiA8L0xJPg0KICAgICAgICA8TEk+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9ibG9nL2FyZHVpbm8vMTguaHRtbCI+PFNQQU4gDQogICAgICAgIHN0eWxlPSJDT0xPUjog
IzYyOTNjMSIgY2xhc3M9c2xpZGUtYmFubmVyLWF2ZXJhZ2U+0JfQsNGH0LXQvCDQvNC90LUgDQog
ICAgICAgIEFyZHVpbm8vQ3JhZnREdWlubz88L1NQQU4+PC9BPiA8L0xJPg0KICAgICAgICA8TEk+
PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2FyZHVpbm8vOTguaHRtbCI+PFNQQU4g
DQogICAgICAgIHN0eWxlPSJDT0xPUjogIzYyOTNjMSIgY2xhc3M9c2xpZGUtYmFubmVyLWF2ZXJh
Z2U+0JrQsNC6INC90LDRh9Cw0YLRjCDRgNCw0LHQvtGC0LDRgtGMINGBIA0KICAgICAgICBBcmR1
aW5vL0NyYWZ0RHVpbm8/PC9TUEFOPjwvQT4gPC9MST4NCiAgICAgICAgPExJPjxBIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9hcmR1aW5vLzUzLmh0bWwiPjxTUEFOIA0KICAgICAgICBz
dHlsZT0iQ09MT1I6ICM2MjkzYzEiIGNsYXNzPXNsaWRlLWJhbm5lci1hdmVyYWdlPtCf0LXRgNCy
0LDRjyANCiAgICAgICAg0L/RgNC+0LPRgNCw0LzQvNCwLjwvU1BBTj48L0E+IDwvTEk+DQogICAg
ICAgIDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3BhZ2Uvc3VtbWFyeS8jUHJhY3Rp
Y2FsQXJkdWlubyI+PFNQQU4gDQogICAgICAgIHN0eWxlPSJDT0xPUjogIzYyOTNjMSIgY2xhc3M9
c2xpZGUtYmFubmVyLWF2ZXJhZ2U+0KfRgtC+INC00LDQu9GM0YjQtT88L1NQQU4+PC9BPiANCiAg
ICAgICAgPEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL3Byb2plY3RzLyI+PFNQQU4g
DQogICAgICAgIHN0eWxlPSJDT0xPUjogIzYyOTNjMSIgY2xhc3M9c2xpZGUtYmFubmVyLWF2ZXJh
Z2U+QXJkdWlubyANCiAgICAgICAg0L/RgNC+0LXQutGC0YshPC9TUEFOPjwvQT4gPC9MST48L1VM
PjwvVEQ+PC9UUj48L1RCT0RZPjwvVEFCTEU+DQo8RElWIHN0eWxlPSJURVhULUFMSUdOOiBjZW50
ZXIiIGNsYXNzPXNsaWRlLWJhbm5lci10ZXh0PjxTUEFOIA0Kc3R5bGU9IkNPTE9SOiBibGFjazsg
Rk9OVC1TSVpFOiAyMHB4IiBjbGFzcz1zbGlkZS1iYW5uZXItYmlnPtCf0YDQvtGB0YLQviDQtNC+
0LHQsNCy0YzRgtC1IA0KQ3JhZnREdWlubyE8L1NQQU4+IA0KPC9ESVY+PCEtLQk8aW1nIHNyYz0i
aHR0cDovL2lkZWEyLnJ1L2JhbmVyLmpwZyIgYWx0PSIiLz4gLS0+PEEgDQpocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L3Jzcy9ibG9nL2FyZHVpbm8vIj7Qv9C+0LTQv9C40YHQsNGC0YzRgdGPINC9
0LAgUlNTLdC70LXQvdGC0YM8L0E+IA0KPC9ESVY+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNs
YXNzPWJsPg0KPERJViBjbGFzcz1icj48L0RJVj48L0RJVj48L0RJVj48IS0tCgk8ZGl2IGlkPSJl
eHRyYSI+CgkJPGEgaHJlZj0iIyI+0Jog0YHQv9C40YHQutGDINC/0L7RgdGC0L7QsjwvYT4KCTwv
ZGl2PgoJLS0+DQo8RElWIGlkPXdyYXBwZXIgY2xhc3M9InVwZGF0ZS1oaWRlICI+PCEtLSBDb250
ZW50IC0tPg0KPERJViBpZD1jb250ZW50PjwhLS0gVG9waWMgLS0+DQo8RElWIGNsYXNzPXRvcGlj
Pg0KPERJViBjbGFzcz0iZmF2b3JpdGUgZmF2LWd1ZXN0Ij48QSANCm9uY2xpY2s9ImxzRmF2b3Vy
aXRlLnRvZ2dsZSg1OTQsdGhpcywndG9waWMnKTsgcmV0dXJuIGZhbHNlOyIgDQpocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj48L0E+PC9ESVY+DQo8
SDEgY2xhc3M9dGl0bGU+0JTQsNGC0YfQuNC60Lgg0KXQvtC70LvQsCA8L0gxPg0KPFVMIGNsYXNz
PWFjdGlvbj4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxl
Y3Ryb25pY3MvIj7QrdC70LXQutGC0YDQvtC90LjQutCwPC9BPiZuYnNwOyZuYnNwOzwvTEk+PC9V
TD4NCjxESVYgY2xhc3M9Y29udGVudD7QlNCw0YLRh9C40Log0KXQvtC70LvQsCDigJQg0Y3RgtC+
INC00LDRgtGH0LjQuiDQvNCw0LPQvdC40YLQvdC+0LPQviDQv9C+0LvRjy4g0J7QvSDQsdGL0Lsg
0YLQsNC6INC90LDQt9Cy0LDQvSANCtC40Lct0LfQsCDQv9GA0LjQvdGG0LjQv9CwINGB0LLQvtC1
0Lkg0YDQsNCx0L7RgtGLIOKAlCA8Tk9JTkRFWD48QSANCmhyZWY9Imh0dHA6Ly9ydS53aWtpcGVk
aWEub3JnL3dpa2kv0K3RhNGE0LXQutGCX9Cl0L7Qu9C70LAiIHJlbD1ub2ZvbGxvdz7RjdGE0YTQ
tdC60YLQsCANCtCl0L7Qu9C70LA8L0E+PC9OT0lOREVYPjog0LXRgdC70Lgg0LIg0LzQsNCz0L3Q
uNGC0L3QvtC1INC/0L7Qu9C1INC/0L7QvNC10YHRgtC40YLRjCDQv9C70LDRgdGC0LjQvdGDINGB
INC/0YDQvtGC0LXQutCw0Y7RidC40LwgDQrRh9C10YDQtdC3INC90LXRkSDRgtC+0LrQvtC8LCDR
gtC+INGN0LvQtdC60YLRgNC+0L3RiyDQsiDQv9C70LDRgdGC0LjQvdC1INCx0YPQtNGD0YIg0L7R
gtC60LvQvtC90Y/RgtGM0YHRjyDQsiDQvdCw0L/RgNCw0LLQu9C10L3QuNC4LCANCtC/0LXRgNC/
0LXQvdC00LjQutGD0LvRj9GA0L3QvtC8INC90LDQv9GA0LDQstC70LXQvdC40Y4g0YLQvtC60LAu
INCSINC60LDQutGD0Y4g0LjQvNC10L3QvdC+INGB0YLQvtGA0L7QvdGDINCx0YPQtNGD0YIg0L7R
gtC60LvQvtC90Y/RgtGM0YHRjyANCtGN0LvQtdC60YLRgNC+0L3Riywg0LfQsNCy0LjRgdC40YIg
0L7RgiDQv9C+0LvRj9GA0L3QvtGB0YLQuCDQvNCw0LPQvdC40YLQvdC+0LPQviDQv9C+0LvRjzo8
QlI+PEJSPjxOT0lOREVYPjxBIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9maWxlcy9oYWxs
X3NlbnNvcnMvSGFsbF9lZmZlY3QucG5nIiByZWw9bm9mb2xsb3c+PElNRyANCnNyYz0iaHR0cDov
L3JvYm9jcmFmdC5ydS9maWxlcy9oYWxsX3NlbnNvcnMvSGFsbF9lZmZlY3RfcHJldmlldy5qcGci
PjwvQT48L05PSU5ERVg+IA0KPEJSPg0KPE9MPg0KICA8TEk+0K3Qu9C10LrRgtGA0L7QvdGLPC9M
ST4NCiAgPExJPtCf0LvQsNGB0YLQuNC90LA8L0xJPg0KICA8TEk+0JzQsNCz0L3QuNGC0Ys8L0xJ
Pg0KICA8TEk+0JzQsNCz0L3QuNGC0L3QvtC1INC/0L7Qu9C1PC9MST4NCiAgPExJPtCY0YHRgtC+
0YfQvdC40Log0YLQvtC60LA8L0xJPjwvT0w+0KDQsNC30LvQuNGH0L3QsNGPINC/0LvQvtGC0L3Q
vtGB0YLRjCDRjdC70LXQutGC0YDQvtC90L7QsiDQvdCwINGB0YLQvtGA0L7QvdCw0YUg0L/Qu9Cw
0YHRgtC40L3RiyANCtGB0L7Qt9C00LDRkdGCINGA0LDQt9C90L7RgdGC0Ywg0L/QvtGC0LXQvdGG
0LjQsNC70L7Qsiwg0LrQvtGC0L7RgNGD0Y4g0LzQvtC20L3QviDRg9GB0LjQu9C40YLRjCDQuCDQ
uNC30LzQtdGA0LjRgtGMLCDRh9GC0L4g0LTQsNGC0YfQuNC60LggDQrQpdC+0LvQu9CwINC4INC0
0LXQu9Cw0Y7Rgi48QlI+PEJSPtCU0LDRgtGH0LjQutC4INCl0L7Qu9C70LAgKNC00LDQu9C10LUg
0L/RgNC+0YHRgtC+INCU0KUpINCx0YvQstCw0Y7RgiDQsNC90LDQu9C+0LPQvtCy0YvQvNC4INC4
IA0K0YbQuNGE0YDQvtCy0YvQvNC4LiDQkNC90LDQu9C+0LPQvtCy0YvQuSDQv9GA0LXQvtCx0YDQ
sNC30YPQtdGCINC40L3QtNGD0LrRhtC40Y4g0LzQsNCz0L3QuNGC0L3QvtCz0L4g0L/QvtC70Y8g
0LIg0L3QsNC/0YDRj9C20LXQvdC40LUsINC30L3QsNC6INC4IA0K0LLQtdC70LjRh9C40L3QsCDQ
utC+0YLQvtGA0L7Qs9C+INCx0YPQtNGD0YIg0LfQsNCy0LjRgdC10YLRjCDQvtGCINC/0L7Qu9GP
0YDQvdC+0YHRgtC4INC4INGB0LjQu9GLINC/0L7Qu9GPLiDQptC40YTRgNC+0LLQvtC5INC20LUg
0LLRi9C00LDRkdGCIA0K0LvQuNGI0Ywg0YTQsNC60YIg0L3QsNC70LjRh9C40Y8v0L7RgtGB0YPR
gtGB0YLQstC40Y8g0L/QvtC70Y8sINC4INC+0LHRi9GH0L3QviDQuNC80LXQtdGCINC00LLQsCDQ
v9C+0YDQvtCz0LA6INCy0LrQu9GO0YfQtdC90LjRjyDigJQg0LrQvtCz0LTQsCANCtC30L3QsNGH
0LXQvdC40LUg0LjQvdC00YPQutGG0LjQuCDQstGL0YjQtSDQv9C+0YDQvtCz0LAsINC00LDRgtGH
0LjQuiDQstGL0LTQsNC10YIg0LvQvtCz0LjRh9C10YHQutGD0Y4g0LXQtNC40L3QuNGG0YM7INC4
INCy0YvQutC70Y7Rh9C10L3QuNGPIOKAlCANCtC60L7Qs9C00LAg0LfQvdCw0YfQtdC90LjQtSDQ
vdC40LbQtSDQv9C+0YDQvtCz0LAsINC00LDRgtGH0LjQuiDQstGL0LTQsNGR0YIg0LvQvtCz0LjR
h9C10YHQutC40Lkg0L3QvtC70YwuINCd0LDQu9C40YfQuNC1INC30L7QvdGLIA0K0L3QtdGH0YPQ
stGB0YLQstC40YLQtdC70YzQvdC+0YHRgtC4INC80LXQttC00YMg0L/QvtGA0L7Qs9Cw0LzQuCDQ
vdCw0LfRi9Cy0LDQtdGC0YHRjyA8Tk9JTkRFWD48QSANCmhyZWY9Imh0dHA6Ly9ydS53aWtpcGVk
aWEub3JnL3dpa2kvJUQwJTkzJUQwJUI4JUQxJTgxJUQxJTgyJUQwJUI1JUQxJTgwJUQwJUI1JUQw
JUI3JUQwJUI4JUQxJTgxIiANCnJlbD1ub2ZvbGxvdz7Qs9C40YHRgtC10YDQtdC30LjRgdC+0Lw8
L0E+PC9OT0lOREVYPiDQuCDRgdC70YPQttC40YIg0LTQu9GPINC40YHQutC70Y7Rh9C10L3QuNGP
INC70L7QttC90L7Qs9C+IA0K0YHRgNCw0LHQsNGC0YvQstCw0L3QuNGPINC00LDRgtGH0LjQutCw
INC90LAg0LLRgdGP0YfQtdGB0LrQuNC1INC/0L7QvNC10YXQuCDigJQg0LDQvdCw0LvQvtCz0LjR
h9C90L4g0YDQsNCx0L7RgtCw0LXRgiDRhtC40YTRgNC+0LLQsNGPIA0K0Y3Qu9C10LrRgtGA0L7Q
vdC40LrQsCDRgSDQu9C+0LPQuNGH0LXRgdC60LjQvNC4INGD0YDQvtCy0L3Rj9C80Lgg0L3QsNC/
0YDRj9C20LXQvdC40Y8uINCm0LjRhNGA0L7QstGL0LUg0JTQpSDQtNC10LvRj9GC0YHRjyDQtdGJ
0ZEg0L3QsCANCtGD0L3QuNC/0L7Qu9GP0YDQvdGL0LUg0Lgg0LHQuNC/0L7Qu9GP0YDQvdGL0LU6
INC/0LXRgNCy0YvQtSDQstC60LvRjtGH0LDRjtGC0YHRjyDQvNCw0LPQvdC40YLQvdGL0Lwg0L/Q
vtC70LXQvCDQvtC/0YDQtdC00LXQu9GR0L3QvdC+0LkgDQrQv9C+0LvRj9GA0L3QvtGB0YLQuCDQ
uCDQstGL0LrQu9GO0YfQsNGO0YLRgdGPINC/0YDQuCDRgdC90LjQttC10L3QuNC4INC40L3QtNGD
0LrRhtC40Lgg0L/QvtC70Y87INCx0LjQv9C+0LvRj9GA0L3Ri9C1INC20LUg0LLQutC70Y7Rh9Cw
0Y7RgtGB0Y8gDQrQv9C+0LvQtdC8INC+0LTQvdC+0Lkg0L/QvtC70Y/RgNC90L7RgdGC0LgsINCw
INCy0YvQutC70Y7Rh9Cw0Y7RgtGB0Y8g0L/QvtC70LXQvCDQv9GA0L7RgtC40LLQvtC/0L7Qu9C+
0LbQvdC+0LkgDQrQv9C+0LvRj9GA0L3QvtGB0YLQuC48QlI+PEJSPjxCPtCQ0L3QsNC70L7Qs9C+
0LLRi9C5INCU0KUgPE5PSU5ERVg+PEEgDQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Nob3Av
aW5kZXgucGhwP3JvdXRlPXByb2R1Y3QvcHJvZHVjdCZhbXA7cGF0aD00NSZhbXA7cHJvZHVjdF9p
ZD0xMzkiIA0KcmVsPW5vZm9sbG93PlNTNDlFPC9BPjwvTk9JTkRFWD48L0I+PEJSPjxCUj7QldCz
0L4g0YDQsNC30LzQtdGAIOKAlCDQstGB0LXQs9C+IDR4MyDQvNC8LCDQuCDQvtC9IA0K0LjQvNC1
0LXRgiDRgtGA0Lgg0LLRi9Cy0L7QtNCwOjxCUj48QlI+PElNRyANCnNyYz0iaHR0cDovL3JvYm9j
cmFmdC5ydS9maWxlcy9oYWxsX3NlbnNvcnMvYW5hbG9nX3NlbnNvci5qcGciPjxCUj48QlI+0JrQ
sNC6IA0K0LLQuNC00L3Qviwg0L/QuNGC0LDQvdC40LUg0LTQsNGC0YfQuNC60YMg0L3Rg9C20L3Q
viDQsdC40L/QvtC70Y/RgNC90L7QtSDigJQg0YLQvtCz0LTQsCDQvdCwINGO0LbQvdGL0Lkg0L/Q
vtC70Y7RgSDQvNCw0LPQvdC40YLQsCDQtNCw0YLRh9C40LogDQrQsdGD0LTQtdGCINGA0LXQsNCz
0LjRgNC+0LLQsNGC0Ywg0L/QvtC70L7QttC40YLQtdC70YzQvdGL0Lwg0YPRgNC+0LLQvdC10Lwg
0L3QsCDQstGL0YXQvtC00LUsINC90LAg0YHQtdCy0LXRgNC90YvQuSDigJQg0L7RgtGA0LjRhtCw
0YLQtdC70YzQvdGL0LwsIA0K0LAg0L3QsCDQvtGC0YHRg9GC0YHRgtCy0LjQtSDQv9C+0LvRjyDi
gJQg0L3Rg9C70LXQstGL0LwuINCe0LTQvdCw0LrQviDQvNC+0LbQvdC+INC+0LHQvtC50YLQuNGB
0Ywg0L7QtNC90L7Qv9C+0LvRj9GA0L3Ri9C8INC/0LjRgtCw0L3QuNC10Lwg4oCUINCyIA0K0Y3R
gtC+0Lwg0YHQu9GD0YfQsNC1INGD0YDQvtCy0LXQvdGMINC90LAg0LLRi9GF0L7QtNC1IChWbykg
0LIg0L/QvtC70L7QstC40L3RgyDQvdCw0L/RgNGP0LbQtdC90LjRjyDQv9C40YLQsNC90LjRjyAo
VmRjLzIpINCx0YPQtNC10YIgDQrQvtC30L3QsNGH0LDRgtGMINC+0YLRgdGD0YLRgdGC0LLQuNC1
INC80LDQs9C90LjRgtC90L7Qs9C+INC/0L7Qu9GPLCBWbyAmZ3Q7IFZkYy8yIOKAlCDRjtC20L3R
i9C5INC/0L7Qu9GO0YEsIFZvICZsdDsgVmRjLzIgDQrigJQg0YHQtdCy0LXRgNC90YvQuS48QlI+
PEJSPtCl0LDRgNCw0LrRgtC10YDQuNGB0YLQuNC60Lgg0L/RgNC4INC+0LTQvdC+0L/QvtC70Y/R
gNC90L7QvCDQv9C40YLQsNC90LjQuCA1INCSINC4INGC0LXQvNC/0LXRgNCw0YLRg9GA0LUg0L7R
giANCi00MCDQtNC+IDg1IMKwQzoNCjxVTD4NCiAgPExJPtCf0L7RgtGA0LXQsdC70Y/QtdC80YvQ
uSDRgtC+0Lo6INC+0YIgNiDQtNC+IDEwINC80JA8L0xJPg0KICA8TEk+0JLRi9GF0L7QtNC90L7Q
uSDRgtC+0Lo6INC+0YIgMS4wINC00L4gMS41INC80JA8L0xJPg0KICA8TEk+0JLRi9GF0L7QtNC9
0L7QtSDQvdCw0L/RgNGP0LbQtdC90LjQtTog0L7RgiAxLjAg0LTQviAxLjc1INC80JIv0JPRgSwg
0LIg0YHRgNC10LTQvdC10LwgMS40INC80JIv0JPRgSAo0LzQuNC70LvQuNCy0L7Qu9GM0YIgDQog
INC90LAgPE5PSU5ERVg+PEEgDQogIGhyZWY9Imh0dHA6Ly9ydS53aWtpcGVkaWEub3JnL3dpa2kv
JUQwJTkzJUQwJUIwJUQxJTgzJUQxJTgxJUQxJTgxXyUyOCVEMCVCNSVEMCVCNCVEMCVCOCVEMCVC
RCVEMCVCOCVEMSU4NiVEMCVCMF8lRDAlQjglRDAlQjclRDAlQkMlRDAlQjUlRDElODAlRDAlQjUl
RDAlQkQlRDAlQjglRDElOEYlMjkiIA0KICByZWw9bm9mb2xsb3c+0LPQsNGD0YHRgTwvQT48L05P
SU5ERVg+KTwvTEk+DQogIDxMST7QndGD0LvQtdCy0LDRjyDRgtC+0YfQutCwOiDQvtGCIDIuMjUg
0LTQviAyLjc1INCSLCDQsiDRgdGA0LXQtNC90LXQvCAyLjUg0JI8L0xJPg0KICA8TEk+0JzQsNCz
0L3QuNGC0L3Ri9C5INC00LjQsNC/0LDQt9C+0L06INC+0YIgwrE2NTAg0JPRgSDQtNC+IMKxMTAw
MNCT0YE8L0xJPg0KICA8TEk+0JLRgNC10LzRjyDQvtGC0LrQu9C40LrQsDogMyDQvNGBPC9MST48
L1VMPtCY0Lcg0Y3RgtC40YUg0LTQsNC90L3Ri9GFINGB0LvQtdC00YPQtdGCLCDRh9GC0L4g0L/R
gNC4INGB0YLQsNC90LTQsNGA0YLQvdC+0LwgDQrQv9C40YLQsNC90LjQuCDQvtGCIEFyZHVpbm8g
KCs1ViwgR05EKSDQv9GA0LggMjUgwrBDINC00LDRgtGH0LjQuiDQsiDQvtGC0YHRg9GC0YHRgtCy
0LjQtSDQvNCw0LPQvdC40YLQvdC+0LPQviDQv9C+0LvRjyANCtCx0YPQtNC10YIg0LLRi9C00LDQ
stCw0YLRjCAyLjUg0JIsINCwINC90LAg0L/QvtC70LUg0YHQuNC70L7QuSAxMDAwINCT0YEg4oCU
IDIuNSDCsSAxLjQg0JIuINCh0L7QvtGC0LLQtdGC0YHRgtCy0LXQvdC90L4sIA0K0LXRgdC70Lgg
0LLQvtGB0L/QvtC70YzQt9C+0LLQsNGC0YzRgdGPINCQ0KbQnywg0YDQsNC30LHRgNC+0YEg0LfQ
vdCw0YfQtdC90LjQuSDQsdGD0LTQtdGCINC/0YDQuNC80LXRgNC90L4g0LIg0LTQuNCw0L/QsNC3
0L7QvdC1INC+0YIgMjgwINC00L4gDQo4MDAg0YHQviDQvdGD0LvQtdCy0L7QuSDRgtC+0YfQutC+
0Lkg0LIgNTEyLjxCUj48QlI+0J/RgNC40YHRgtGD0L/QuNC8INC6INGN0LrRgdC/0LXRgNC40LzQ
tdC90YLQsNC8LiDQn9C+0LTQutC70Y7Rh9Cw0LXQvCDQstGL0LLQvtC0IA0K4oCcK+KAnSDQuiA1
ViBBcmR1aW5vLCDQstGL0LLQvtC0IOKAnC3igJ0g0LogR05ELCDQvtGB0YLQsNCy0YjQuNC50YHR
jyDigJQg0LogQW5hbG9nIDA6PEJSPjxCUj48Tk9JTkRFWD48QSANCmhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvZmlsZXMvaGFsbF9zZW5zb3JzL2FuYWxvZ19zZW5zb3JfY29ubmVjdGVkLmpwZyIg
DQpyZWw9bm9mb2xsb3c+PElNRyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS9maWxlcy9oYWxs
X3NlbnNvcnMvYW5hbG9nX3NlbnNvcl9jb25uZWN0ZWRfcHJldmlldy5qcGciPjwvQT48L05PSU5E
RVg+PEJSPjxCUj7Ql9Cw0LvQuNCy0LDQtdC8IA0K0LIgQXJkdWlubyDRgdC70LXQtNGD0Y7RidC4
0Lkg0YHQutC10YLRhzo8QlI+PEJSPjxQUkUgY2xhc3M9cHJldHR5cHJpbnQ+PENPREU+dm9pZCBz
ZXR1cCgpDQp7DQogIFNlcmlhbC5iZWdpbig5NjAwKTsNCn0NCg0Kdm9pZCBsb29wKCkNCnsNCiAg
U2VyaWFsLnByaW50bG4oYW5hbG9nUmVhZCgwKSk7DQogIGRlbGF5KDUwMCk7DQp9PC9DT0RFPjwv
UFJFPjxCUj7QndC1INGB0L/QtdGI0LAg0L/QvtC00L3QvtGB0LjQvCDQvNCw0LPQvdC40YIg0LLQ
v9C70L7RgtC90YPRjiDRgdC90LDRh9Cw0LvQsCDQvtC00L3QuNC8INC/0L7Qu9GO0YHQvtC8LCDQ
v9C+0YLQvtC8IA0K0LTRgNGD0LPQuNC8LCDQs9C70Y/QtNGPINCyIFNlcmlhbCBtb25pdG9yOjxC
Uj48QlI+PElNRyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS9maWxlcy9oYWxsX3NlbnNvcnMv
YW5hbG9nX3NlbnNvcl9sb2cucG5nIj48QlI+PEJSPjxCPtCm0LjRhNGA0L7QstC+0LkgDQrQsdC4
0L/QvtC70Y/RgNC90YvQuSDQlNClIDxOT0lOREVYPjxBIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9zaG9wL2luZGV4LnBocD9yb3V0ZT1wcm9kdWN0L3Byb2R1Y3QmYW1wO3BhdGg9NDUmYW1w
O3Byb2R1Y3RfaWQ9MTAzIiANCnJlbD1ub2ZvbGxvdz5UTEU0OTQ1TDwvQT48L05PSU5ERVg+PC9C
PjxCUj48QlI+0JLRi9Cz0LvRj9C00LjRgiDQvtC9INGC0L7Rh9C90L4g0YLQsNC6INC20LUsINC6
0LDQuiDQuCANCtCw0L3QsNC70L7Qs9C+0LLRi9C5LCDQtNCw0LbQtSDQstGL0LLQvtC00Ysg0YDQ
sNGB0L/QvtC70L7QttC10L3RiyDRgtCw0Log0LbQtTo8QlI+PEJSPjxJTUcgDQpzcmM9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvZmlsZXMvaGFsbF9zZW5zb3JzL2RpZ2l0YWxfc2Vuc29yLmpwZyI+PEJS
PjxCUj7QotGD0YIgDQrQvNC+0LbQvdC+INC90LUg0LHQvtGP0YLRjNGB0Y8sINCx0LjQv9C+0LvR
j9GA0L3Ri9C5INC+0L0g0YLQvtC70YzQutC+INCyINC80LDQs9C90LjRgtC90L7QvCDRgdC80YvR
gdC70LUsINCwINC/0LjRgtCw0L3QuNC1INC10LzRgyDQvNC+0LbQvdC+IA0K0L/QvtC00LDQstCw
0YLRjCDQstC/0L7Qu9C90LUg0YHQtdCx0LUg0L7QsdGL0YfQvdC+0LUsINC+0LTQvdC+0L/QvtC7
0Y/RgNC90L7QtS4g0Jog0YHQu9C+0LLRgywg0L/QuNGC0LDQvdC40LUg0Y3RgtC+0YIg0LTQsNGC
0YfQuNC6IA0K0L/RgNC40L3QuNC80LDQtdGCINCyINC00L7QstC+0LvRjNC90L4g0YjQuNGA0L7Q
utC+0Lwg0LTQuNCw0L/QsNC30L7QvdC1IOKAlCDQvtGCIDMuOCDQtNC+IDI0INCSLCDQsCDRgtC+
0Log0LzQvtC20LXRgiDQvtGC0LTQsNCy0LDRgtGMINC00L4gDQoxMDAg0LzQkCwg0YfRgtC+INC/
0L7Qt9Cy0L7Qu9GP0LXRgiDQvdC10L/QvtGB0YDQtdC00YHRgtCy0LXQvdC90L4g0L7RgiDQvdC1
0LPQviDQt9Cw0L/QuNGC0YvQstCw0YLRjCDRg9C/0YDQsNCy0LvRj9C10LzRi9C1INC40LwgDQrR
g9GB0YLRgNC+0LnRgdGC0LLQsCAo0L3QsNC/0YDQuNC80LXRgCwg0YDQtdC70LUpLiDQp9GD0LLR
gdGC0LLQuNGC0LXQu9GM0L3QvtGB0YLRjCDRgyDQvdC10LPQviDQv9C+0YfRgtC4INGC0L7Rh9GM
LdCyLdGC0L7Rh9GMINC60LDQuiDRgyANCtCw0L3QsNC70L7Qs9C+0LLQvtCz0L4gU1M0OUU6INC+
0YIgLTYwMCDQk9GBINC00L4gLTEwMDAg0JPRgSAo0YHQtdCy0LXRgNC90YvQuSDQv9C+0LvRjtGB
INC80LDQs9C90LjRgtCwKSDQuCDQvtGCIDYwMCDQk9GBIA0K0LTQviAxMDAwINCT0YEuPEJSPjxC
Uj7Qn9C+0LTQutC70Y7Rh9Cw0LXRgtGB0Y8g0L7QvSDRh9GD0YLRjCDQv9C+0YHQu9C+0LbQvdC1
0LUsINGH0LXQvCDQsNC90LDQu9C+0LPQvtCy0YvQuTog0LLRi9GF0L7QtCDQtNCw0YLRh9C40LrQ
sCANClEg0L3Rg9C20L3QviDQv9C+0LTRgtGP0L3Rg9GC0Ywg0Log0L/QuNGC0LDQvdC40Y4g0YDQ
tdC30LjRgdGC0L7RgNC+0Lwg0LIgMTAg0LrQntC8LCDRgtCw0Log0LrQsNC6INCy0YvRhdC+0LQg
0YMg0L3QtdCz0L4g0YEg0L7RgtC60YDRi9GC0YvQvCANCtC60L7Qu9C70LXQutGC0L7RgNC+0Lw6
PEJSPjxCUj48Tk9JTkRFWD48QSANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvZmlsZXMvaGFs
bF9zZW5zb3JzL2RpZ2l0YWxfc2Vuc29yX3NjaGVtYXRpY3MucG5nIiANCnJlbD1ub2ZvbGxvdz48
SU1HIA0Kc3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2ZpbGVzL2hhbGxfc2Vuc29ycy9kaWdpdGFs
X3NlbnNvcl9zY2hlbWF0aWNzX3ByZXZpZXcuanBnIj48L0E+PC9OT0lOREVYPjxCUj48QlI+0JAg
DQrQstC+0YIg0Lgg0YHRg9C/0LXRgNGB0LvQvtC20L3QvtC1INC/0L7QtNC60LvRjtGH0LXQvdC4
0LUsINCz0LTQtSDQstGL0YXQvtC0IFEg0L/QvtC00LrQu9GO0YfQtdC9INC6INGG0LjRhNGA0L7Q
stC+0LzRgyDQv9C40L3RgyANCjI6PEJSPjxCUj48Tk9JTkRFWD48QSANCmhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvZmlsZXMvaGFsbF9zZW5zb3JzL2RpZ2l0YWxfc2Vuc29yX2Nvbm5lY3RlZC5q
cGciIA0KcmVsPW5vZm9sbG93PjxJTUcgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvZmlsZXMv
aGFsbF9zZW5zb3JzL2RpZ2l0YWxfc2Vuc29yX2Nvbm5lY3RlZF9wcmV2aWV3LmpwZyI+PC9BPjwv
Tk9JTkRFWD48QlI+PEJSPtCX0LDQu9GM0ZHQvCANCtCyIEFyZHVpbm8g0LXRidGRINC+0LTQuNC9
INC60YDRg9GC0L7QuSDRgdC60LXRgtGHOjxCUj48QlI+PFBSRSBjbGFzcz1wcmV0dHlwcmludD48
Q09ERT52b2lkIHNldHVwKCkNCnsNCiBTZXJpYWwuYmVnaW4oOTYwMCk7DQp9DQoNCnZvaWQgbG9v
cCgpDQp7DQogc3RhdGljIHVpbnQ4X3QgcHJldl9zdGF0ZSA9IExPVzsNCg0KIHVpbnQ4X3Qgc3Rh
dGUgPSBkaWdpdGFsUmVhZCgyKTsNCg0KIGlmIChzdGF0ZSAhPSBwcmV2X3N0YXRlKQ0KIHsNCiAg
ICBwcmV2X3N0YXRlID0gc3RhdGU7DQogICAgU2VyaWFsLnByaW50bG4oc3RhdGUgPT0gTE9XID8g
Ik9GRiIgOiAiT04iKTsNCiB9DQp9PC9DT0RFPjwvUFJFPjxCUj7QotC10L/QtdGA0Ywg0L/QvtC0
0L3QvtGB0LjQvCDQvNCw0LPQvdC40YIg0YLQviDQvtC00L3QuNC8INC/0L7Qu9GO0YHQvtC8LCDR
gtC+INC00YDRg9Cz0LjQvCDQuCDRgdC80L7RgtGA0LjQvCDQsiANClNlcmlhbCBtb25pdG9yOjxC
Uj48QlI+PElNRyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS9maWxlcy9oYWxsX3NlbnNvcnMv
ZGlnaXRhbF9zZW5zb3JfbG9nLnBuZyI+PEJSPjxCUj7QntCx0YDQsNGC0LjRgtC1IA0K0LLQvdC4
0LzQsNC90LjQtSDigJQg0LTQsNGC0YfQuNC6INC90LUg0L/QtdGA0LXQutC70Y7Rh9Cw0LXRgtGB
0Y8sINC/0L7QutCwINC90LUg0L/QvtC00L3QtdGB0ZHRiNGMINC80LDQs9C90LjRgiDQtNGA0YPQ
s9C40Lwg0L/QvtC70Y7RgdC+0LwsINCwIA0K0LXRidGRINC+0L0g0L7Rh9C10L3RjCDRh9GD0LLR
gdGC0LLQuNGC0LXQu9GM0L3Ri9C5INC4INC/0LXRgNC10LrQu9GO0YfQsNC10YLRgdGPINC80LDQ
s9C90LjRgtC+0LwsINCy0YvRgtCw0YnQtdC90L3Ri9C8INC40Lcg0LTQvtGF0LvQvtCz0L4gDQpD
RC1ST03igJnQsCwg0L3QsCDRgNCw0YHRgdGC0L7Rj9C90LjQuCDQvtC60L7Qu9C+IDIg0YHQvCE8
QlI+PEJSPjxCPtCf0YDQuNC80LXQvdC10L3QuNC1PC9CPjxCUj48QlI+0JTQsNGC0YfQuNC60Lgg
DQrQpdC+0LvQu9CwINC40YHQv9C+0LvRjNC30YPRjtGC0YHRjyDQsiDQutCw0YfQtdGB0YLQstC1
INCx0LXRgdC60L7QvdGC0LDQutGC0L3Ri9GFINCy0YvQutC70Y7Rh9Cw0YLQtdC70LXQuSwg0LrQ
sNC6INC30LDQvNC10L3QsCDQs9C10YDQutC+0L3QsNC8LCANCtC00LvRjyDQsdC10YHQutC+0L3R
gtCw0LrRgtC90YvRhSDQt9Cw0LzQtdGA0L7QsiDRgtC+0LrQsCDQsiDQv9GA0L7QstC+0LTQvdC4
0LrQsNGFLCDRg9C/0YDQsNCy0LvQtdC90LjRjyDQvNC+0YLQvtGA0LDQvNC4LCDRh9GC0LXQvdC4
0Y8gDQrQvNCw0LPQvdC40YLQvdGL0YUg0LrQvtC00L7Qsiwg0LjQt9C80LXRgNC10L3QuNGPINGD
0YDQvtCy0L3RjyDQttC40LTQutC+0YHRgtC4ICjQvNCw0LPQvdC40YLQvdGL0Lkg0L/QvtC/0LvQ
sNCy0L7Quikg0Lgg0YIu0LQuPEJSPjxCUj7QndGDIA0K0LAg0Y8sINC40LzQtdGPINC00LLQsCDR
htC40YTRgNC+0LLRi9GFINCx0LjQv9C+0LvRj9GA0L3Ri9GFINCU0KUsINGB0LTQtdC70LDRjiDQ
sdC10YHQutC+0L3RgtCw0LrRgtC90YvQuSDQvNCw0LPQvdC40YLQvdGL0LkgPE5PSU5ERVg+PEEg
DQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTkwLmh0bWwiIA0K
cmVsPW5vZm9sbG93PtGN0L3QutC+0LTQtdGAPC9BPjwvTk9JTkRFWD4uINCf0YDQuNC90YbQuNC/
INC/0YDQvtGB0YI6INC90LAg0LLRgNCw0YnQsNGO0YnQuNC50YHRjyDQtNC40YHQuiDQu9C10L/Q
uNC8IA0K0YDRj9C00YvRiNC60L7QvCDQtNCy0LAg0LzQsNCz0L3QuNGC0LAg0YDQsNC30L3Ri9C8
0Lgg0L/QvtC70Y7RgdCw0LzQuCDQstCy0LXRgNGFICjQtNC70Y8g0YPQvdC40L/QvtC70Y/RgNC9
0YvRhSDQlNClINGF0LLQsNGC0LjRgiDQvtC00L3QvtCz0L4pLCANCtCwINC90LDQtCDQvdC40LzQ
uCDRgNCw0LfQvNC10YnQsNC10Lwg0YbQuNGE0YDQvtCy0YvQtSDQlNClINC4INGB0L3QuNC80LDQ
tdC8INC/0L7QutCw0LfQsNC90LjRjy4g0JzQvtC20L3QviDQuNGB0L/QvtC70YzQt9C+0LLQsNGC
0Ywg0YHQutC10YLRhyANCtC40Lcg0YHRgtCw0YLRjNC4INC/0YDQviDRjdC90LrQvtC00LXRgNGL
LCDQvdC+INGB0LzQvtGC0YDQtdGC0Ywg0L3QsCDRgdGC0YDQtdC70L7Rh9C60Lgg0YHQutGD0YfQ
vdC+LCDQstC10LTRjCDRhdC+0YfQtdGC0YHRjyDQtdGJ0ZEgDQrQv9C+0YHRh9C40YLQsNGC0Ywg
0L7QsdC+0YDQvtGC0YssINGC0LDQuiDRh9GC0L4g0L3QsNC/0LjRiNC10Lwg0L3QvtCy0YvQuTo8
QlI+PEJSPjxQUkUgY2xhc3M9cHJldHR5cHJpbnQ+PENPREU+I2luY2x1ZGUgJmx0O0xpcXVpZENy
eXN0YWwuaCZndDsNCg0KTGlxdWlkQ3J5c3RhbCBsY2QoMTMsIDEyLCAxMSwgMTAsIDksIDgpOw0K
DQovKiDQn9C40L3Riywg0Log0LrQvtGC0L7RgNGL0Lwg0L/QvtC00LrQu9GO0YfQtdC9INGN0L3Q
utC+0LTQtdGAICovDQplbnVtIHsgRU5DX1BJTjEgPSAyLCBFTkNfUElOMiA9IDMgfTsNCg0KZW51
bSB7IEZPUldBUkQgPSAxLCBCQUNLV0FSRCA9IC0xIH07DQoNCi8qINCV0YHQu9C4INGH0YLQviwg
cmV2b2x1dGlvbnMg0LfQtNC10YHRjCDQuCDQtNCw0LvQtdC1IC0g0L7QsdC+0YDQvtGC0YssINCw
INC90LUg0YDQtdCy0L7Qu9GO0YbQuNC4ICg6ICovDQpsb25nIHJldm9sdXRpb25zID0gMCwgcmV2
b2x1dGlvbnNfYXRfbGFzdF9kaXNwbGF5ID0gMDsNCmludCBkaXJlY3Rpb24gPSBGT1JXQVJEOw0K
dWludDhfdCBwcmV2aW91c19jb2RlID0gMDsNCg0KLyog0KDQtdCw0LrRhtC40Y8g0L3QsCDRgdC+
0LHRi9GC0LjQtSDQv9C+0LLQvtGA0L7RgtCwICovDQp2b2lkIHR1cm5lZChpbnQgbmV3X2RpcmVj
dGlvbikNCnsNCiAgaWYgKG5ld19kaXJlY3Rpb24gIT0gZGlyZWN0aW9uKQ0KICB7DQogICAgcmV2
b2x1dGlvbnMgPSAwOw0KICAgIHJldm9sdXRpb25zX2F0X2xhc3RfZGlzcGxheSA9IDA7DQogIH0N
CiAgZWxzZQ0KICAgICsrcmV2b2x1dGlvbnM7DQoNCiAgZGlyZWN0aW9uID0gbmV3X2RpcmVjdGlv
bjsNCn0NCg0KLyog0J7QsdGK0LXQtNC10L3QuNC7INGH0YLQtdC90LjQtSDQutC+0LTQsCDQk9GA
0LXRjyDRgSDRjdC90LrQvtC00LXRgNCwINGBINC10LPQviDQtNC10LrQvtC00LjRgNC+0LLQsNC9
0LjQtdC8ICovDQp1aW50OF90IHJlYWRFbmNvZGVyKHVpbnQ4X3QgcGluMSwgdWludDhfdCBwaW4y
KQ0Kew0KICB1aW50OF90IGdyYXlfY29kZSA9IGRpZ2l0YWxSZWFkKHBpbjEpIHwgKGRpZ2l0YWxS
ZWFkKHBpbjIpICZsdDsmbHQ7IDEpLCByZXN1bHQgPSAwOw0KDQogIGZvciAocmVzdWx0ID0gMDsg
Z3JheV9jb2RlOyBncmF5X2NvZGUgJmd0OyZndDs9IDEpDQogICAgcmVzdWx0IF49IGdyYXlfY29k
ZTsNCg0KICByZXR1cm4gcmVzdWx0Ow0KfQ0KDQp2b2lkIHNldHVwKCkNCnsNCiAgcGluTW9kZShF
TkNfUElOMSwgSU5QVVQpOw0KICBwaW5Nb2RlKEVOQ19QSU4yLCBJTlBVVCk7DQoNCiAgbGNkLmJl
Z2luKDgsIDIpOw0KfQ0KDQp2b2lkIGxvb3AoKQ0Kew0KICAvKiDQp9C40YLQsNC10Lwg0LfQvdCw
0YfQtdC90LjQtSDRgSDRjdC90LrQvtC00LXRgNCwICovDQogIHVpbnQ4X3QgY29kZSA9IHJlYWRF
bmNvZGVyKEVOQ19QSU4xLCBFTkNfUElOMik7DQoNCiAgLyog0J7QsdGA0LDQsdCw0YLRi9Cy0LDQ
tdC8INC10LPQviAqLw0KICBpZiAoY29kZSA9PSAwKQ0KICB7DQogICAgaWYgKHByZXZpb3VzX2Nv
ZGUgPT0gMykNCiAgICAgIHR1cm5lZChGT1JXQVJEKTsNCiAgICBlbHNlIGlmIChwcmV2aW91c19j
b2RlID09IDEpDQogICAgICB0dXJuZWQoQkFDS1dBUkQpOw0KICB9DQoNCiAgcHJldmlvdXNfY29k
ZSA9IGNvZGU7DQoNCiAgLyog0KDQsNC3INCyINGB0LXQutGD0L3QtNGDINCy0YvQstC+0LTQuNC8
INC90LDQutC+0L/Qu9C10L3QvdGD0Y4g0LjQvdGE0L7RgNC80LDRhtC40Y4gKi8NCg0KICBzdGF0
aWMgdW5zaWduZWQgbG9uZyBtaWxsaXNfYXRfbGFzdF9kaXNwbGF5ID0gMDsNCg0KICBpZiAobWls
bGlzKCkgLSBtaWxsaXNfYXRfbGFzdF9kaXNwbGF5ICZndDs9IDEwMDApDQogIHsNCiAgICAvKiDQ
ktGL0LLQvtC00LjQvCDQvdCwINGN0LrRgNCw0L0g0L3QsNC/0YDQsNCy0LvQtdC90LjQtSDQstGA
0LDRidC10L3QuNGPICovDQogICAgbGNkLmNsZWFyKCk7DQogICAgbGNkLnByaW50KGRpcmVjdGlv
biA9PSBGT1JXQVJEID8gIiZndDsmZ3Q7ICIgOiAiJmx0OyZsdDsgIik7DQogICAgLyogLi4uINGB
0LrQvtGA0L7RgdGC0Ywg0LLRgNCw0YnQtdC90LjRjyDQsiDQvtCx0L7RgNC+0YLQsNGFINCyINGB
0LXQutGD0L3QtNGDICovDQogICAgbGNkLnByaW50KHJldm9sdXRpb25zIC0gcmV2b2x1dGlvbnNf
YXRfbGFzdF9kaXNwbGF5KTsNCiAgICBsY2QucHJpbnQoIi9zIik7DQogICAgLyogLi4uINC4INC+
0LHRidC10LUg0YfQuNGB0LvQviDQvtCx0YDQvtGC0L7QsiDQsiDRgtC10LrRg9GJ0LXQvCDQvdCw
0L/RgNCw0LLQu9C10L3QuNC4ICovDQogICAgbGNkLnNldEN1cnNvcigwLCAxKTsNCiAgICBsY2Qu
cHJpbnQocmV2b2x1dGlvbnMpOw0KICAgIA0KICAgIG1pbGxpc19hdF9sYXN0X2Rpc3BsYXkgPSBt
aWxsaXMoKTsNCiAgICByZXZvbHV0aW9uc19hdF9sYXN0X2Rpc3BsYXkgPSByZXZvbHV0aW9uczsN
CiAgfQ0KfTwvQ09ERT48L1BSRT48QlI+0JLRi9Cz0LvRj9C00LXRgtGMINC60L7QvdC10YfQvdCw
0Y8g0YPRgdGC0LDQvdC+0LLQutCwINC80L7QttC10YIg0YLQsNC6OjxCUj48QlI+PE5PSU5ERVg+
PEEgDQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2ZpbGVzL2hhbGxfc2Vuc29ycy93aG9sZV9l
bmNvZGVyLmpwZyIgDQpyZWw9bm9mb2xsb3c+PElNRyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5y
dS9maWxlcy9oYWxsX3NlbnNvcnMvd2hvbGVfZW5jb2Rlcl9wcmV2aWV3LmpwZyI+PC9BPjwvTk9J
TkRFWD48QlI+PEJSPjxOT0lOREVYPjxBIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9maWxl
cy9oYWxsX3NlbnNvcnMvZW5jb2Rlcl9jbG9zZS5qcGciIA0KcmVsPW5vZm9sbG93PjxJTUcgDQpz
cmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvZmlsZXMvaGFsbF9zZW5zb3JzL2VuY29kZXJfY2xvc2Vf
cHJldmlldy5qcGciPjwvQT48L05PSU5ERVg+PEJSPjxCUj7QryANCtGA0LDQt9C+0LHRgNCw0Lsg
0YHRgtCw0YDRi9C5INC90LXRgNCw0LHQvtGH0LjQuSDQttGR0YHRgtC60LjQuSDQtNC40YHQuiDQ
uCDRg9GB0YLQsNC90L7QstC40Lsg0L3QsCDQtdCz0L4g0L/Qu9Cw0YHRgtC40L3RgyDQtNCy0LAg
0LzQsNCz0L3QuNGC0LAgDQrQvtGCINGB0LjRgdGC0LXQvNGLINC/0L7Qt9C40YbQuNC+0L3QuNGA
0L7QstCw0L3QuNGPINCz0L7Qu9C+0LLQutC4IENELVJPTdCwINC90LAg0YDQsNGB0YHRgtC+0Y/Q
vdC40LggfjUg0LzQvCDQtNGA0YPQsyDQvtGCINC00YDRg9Cz0LAsINCwIA0K0LTQsNGC0YfQuNC6
0Lgg0YDQsNC30LzQtdGB0YLQuNC7INC90LAg0LrRgNC10L/Qu9C10L3QuNC4INC90LDQtCDQv9C7
0LDRgdGC0LjQvdC+0LksINC90LAg0YDQsNGB0YHRgtC+0Y/QvdC40LggfjE1INC80Lwg0LTRgNGD
0LMg0L7RgiANCtC00YDRg9Cz0LAuINCS0L7RgiDQutCw0Log0L7QvdC+INGA0LDQsdC+0YLQsNC1
0YI6PEJSPjxCUj4NCjxPQkpFQ1Qgd2lkdGg9NDI1IGhlaWdodD0zNDQ+PFBBUkFNIE5BTUU9Im1v
dmllIiBWQUxVRT0iaHR0cDovL3d3dy55b3V0dWJlLmNvbS92L18yOUtJRFUyUTAwJmFtcDtobD1l
biI+PFBBUkFNIE5BTUU9Indtb2RlIiBWQUxVRT0ib3BhcXVlIj4NCjxlbWJlZCBzcmM9Imh0dHA6
Ly93d3cueW91dHViZS5jb20vdi9fMjlLSURVMlEwMCZobD1lbiIgDQp0eXBlPSJhcHBsaWNhdGlv
bi94LXNob2Nrd2F2ZS1mbGFzaCIgd21vZGU9Im9wYXF1ZSIgd2lkdGg9IjQyNSIgDQpoZWlnaHQ9
IjM0NCI+PC9lbWJlZD48L09CSkVDVD48QlI+PEJSPtCV0YHQu9C4INC90LUg0L3Rg9C20L3QviDQ
t9C90LDRgtGMINC90LDQv9GA0LDQstC70LXQvdC40LUg0LLRgNCw0YnQtdC90LjRjywgDQrQsCDR
hdC+0YfQtdGC0YHRjyDQv9GA0L7RgdGC0L4g0YHRh9C40YLQsNGC0Ywg0L7QsdC+0YDQvtGC0Yss
INGC0L4g0LzQvtC20L3QviDQvtCx0L7QudGC0LjRgdGMINCy0L7QvtCx0YnQtSDQvtC00L3QuNC8
INGD0L3QuNC/0L7Qu9GP0YDQvdGL0LwgDQrQtNCw0YLRh9C40LrQvtC8INC4INC+0LTQvdC40Lwg
0LzQsNCz0L3QuNGC0L7QvCAoOiA8L0RJVj4NCjxVTCBjbGFzcz10YWdzPg0KICA8TEk+PEEgaHJl
Zj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0LTQsNGC0YfQuNC6JTIw0KXQvtC70LvQsC8iPtC0
0LDRgtGH0LjQuiDQpdC+0LvQu9CwPC9BPiwgPC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvdGFnL9C80LDQs9C90LjRgi8iPtC80LDQs9C90LjRgjwvQT4sIDwvTEk+DQog
IDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9BcmR1aW5vLyI+QXJkdWlubzwv
QT4sIDwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/RjdC90LrQ
vtC00LXRgC8iPtGN0L3QutC+0LTQtdGAPC9BPiwgPC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvdGFnL0hhbGwlMjBzZW5zb3IvIj5IYWxsIHNlbnNvcjwvQT4sIDwvTEk+
DQogIDxMST48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9tYWduZXQvIj5tYWduZXQ8
L0E+LCA8L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcvZW5jb2Rl
ci8iPmVuY29kZXI8L0E+PC9MST48L1VMPg0KPFVMIGNsYXNzPSJ2b3RpbmcgcG9zaXRpdmUgZ3Vl
c3QgIj4NCiAgPExJIGNsYXNzPXBsdXM+PEEgb25jbGljaz0ibHNWb3RlLnZvdGUoNTk0LHRoaXMs
MSwndG9waWMnKTsgcmV0dXJuIGZhbHNlOyIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUv
YmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT48L0xJPg0KICA8TEkgY2xhc3M9dG90YWwg
dGl0bGU9ItCy0YHQtdCz0L4g0L/RgNC+0LPQvtC70L7RgdC+0LLQsNC70L46IDMiPiszIDwvTEk+
DQogIDxMSSBjbGFzcz1taW51cz48QSBvbmNsaWNrPSJsc1ZvdGUudm90ZSg1OTQsdGhpcywtMSwn
dG9waWMnKTsgcmV0dXJuIGZhbHNlOyIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxv
Zy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT48L0xJPg0KICA8TEkgY2xhc3M9ZGF0ZT45INGB
0LXQvdGC0Y/QsdGA0Y8gMjAxMSwgMTY6NTk8L0xJPg0KICA8TEkgY2xhc3M9YXV0aG9yPjxBIA0K
aHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL2J1cmp1aS8iPmJ1cmp1aTwvQT48L0xJ
PjwvVUw+PCEtLSDvv73vv73vv73vv73vv73vv70u77+977+977+977+977+977+9IC0tPg0KPFND
UklQVCB0eXBlPXRleHQvamF2YXNjcmlwdD4KLy88IVtDREFUQVsKeWFuZGV4X3BhcnRuZXJfaWQg
PSA2MTY0NTsKeWFuZGV4X3NpdGVfYmdfY29sb3IgPSAnRkZGRkZGJzsKeWFuZGV4X3NpdGVfY2hh
cnNldCA9ICd1dGYtOCc7CnlhbmRleF9hZF9mb3JtYXQgPSAnZGlyZWN0JzsKeWFuZGV4X2ZvbnRf
c2l6ZSA9IDE7CnlhbmRleF9kaXJlY3RfdHlwZSA9ICdob3Jpem9udGFsJzsKeWFuZGV4X2RpcmVj
dF9ib3JkZXJfdHlwZSA9ICdibG9jayc7CnlhbmRleF9kaXJlY3RfbGltaXQgPSAzOwp5YW5kZXhf
ZGlyZWN0X2JnX2NvbG9yID0gJ0ZGRkZGRic7CnlhbmRleF9kaXJlY3RfYm9yZGVyX2NvbG9yID0g
J0ZGRkZGRic7CnlhbmRleF9kaXJlY3RfdGl0bGVfY29sb3IgPSAnMDAwMENDJzsKeWFuZGV4X2Rp
cmVjdF91cmxfY29sb3IgPSAnMDA2NjAwJzsKeWFuZGV4X2RpcmVjdF9hbGxfY29sb3IgPSAnMDAw
MENDJzsKeWFuZGV4X2RpcmVjdF90ZXh0X2NvbG9yID0gJzAwMDAwMCc7CnlhbmRleF9kaXJlY3Rf
aG92ZXJfY29sb3IgPSAnMDA2NkZGJzsKeWFuZGV4X2RpcmVjdF9mYXZpY29uID0gZmFsc2U7CmRv
Y3VtZW50LndyaXRlKCc8c2MnKydyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRw
Oi8vYW4ueWFuZGV4LnJ1L3N5c3RlbS9jb250ZXh0LmpzIj48L3NjJysncmlwdD4nKTsKLy9dXT4K
PC9TQ1JJUFQ+DQo8L0RJVj48IS0tIC9Ub3BpYyAtLT4NCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFz
Y3JpcHQgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2pzL2Nv
bW1lbnRzLmpzIj48L1NDUklQVD4NCjwhLS0gQ29tbWVudHMgLS0+DQo8RElWIGNsYXNzPWNvbW1l
bnRzPjwhLS0gQ29tbWVudHMgSGVhZGVyIC0tPg0KPERJViBjbGFzcz1oZWFkZXI+DQo8SDM+0JrQ
vtC80LzQtdC90YLQsNGA0LjQuCAoPFNQQU4gaWQ9Y291bnQtY29tbWVudHM+ODwvU1BBTj4pPC9I
Mz48QSBuYW1lPWNvbW1lbnRzPjwvQT48QSANCmNsYXNzPXJzcyBocmVmPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L3Jzcy9jb21tZW50cy81OTQvIj5SU1M8L0E+IDxBIA0Kb25mb2N1cz1ibHVyKCk7IG9u
Y2xpY2s9ImxzQ210VHJlZS5jb2xsYXBzZU5vZGVBbGwoKTsgcmV0dXJuIGZhbHNlOyIgDQpocmVm
PSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj7RgdCy0LXR
gNC90YPRgtGMPC9BPiAvIDxBIA0Kb25mb2N1cz1ibHVyKCk7IG9uY2xpY2s9ImxzQ210VHJlZS5l
eHBhbmROb2RlQWxsKCk7IHJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+0YDQsNC30LLQtdGA0L3Rg9GC0Yw8L0E+IDwv
RElWPjwhLS0gL0NvbW1lbnRzIEhlYWRlciAtLT4NCjxTQ1JJUFQgbGFuZ3VhZ2U9SmF2YVNjcmlw
dCB0eXBlPXRleHQvamF2YXNjcmlwdD4KCQkJCQl3aW5kb3cuYWRkRXZlbnQoJ2RvbXJlYWR5Jywg
ZnVuY3Rpb24oKSB7CgkJCQkJCQoJCQkJCQlsc0NtdFRyZWUuc2V0SWRDb21tZW50TGFzdCgyMDI2
KTsKCQkJCQkJCgkJCQkJfSk7CQkJCQkKCQkJCTwvU0NSSVBUPg0KDQo8RElWIGlkPWNvbW1lbnRf
aWRfMTYyMSBjbGFzcz1jb21tZW50PjxJTUcgY2xhc3M9Zm9sZGluZyANCnRpdGxlPdGB0LLQtdGA
0L3Rg9GC0Ywv0YDQsNC30LLQtdGA0L3Rg9GC0YwgYWx0PSsgDQpzcmM9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2ltYWdlcy9jbG9zZS5naWYiPiA8QSANCm5hbWU9Y29t
bWVudDE2MjE+PC9BPg0KPERJViBjbGFzcz0idm90aW5nIHBvc2l0aXZlIGd1ZXN0ICAgICAiPg0K
PERJViBjbGFzcz10b3RhbD4rMTwvRElWPjxBIGNsYXNzPXBsdXMgDQpvbmNsaWNrPSJsc1ZvdGUu
dm90ZSgxNjIxLHRoaXMsMSwndG9waWNfY29tbWVudCcpOyByZXR1cm4gZmFsc2U7IiANCmhyZWY9
Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT48QSBj
bGFzcz1taW51cyANCm9uY2xpY2s9ImxzVm90ZS52b3RlKDE2MjEsdGhpcywtMSwndG9waWNfY29t
bWVudCcpOyByZXR1cm4gZmFsc2U7IiANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9l
bGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT48L0RJVj4NCjxESVYgaWQ9Y29tbWVudF9jb250ZW50
X2lkXzE2MjEgY2xhc3M9ImNvbnRlbnQgIj4NCjxESVYgY2xhc3M9dGI+DQo8RElWIGNsYXNzPXRs
Pg0KPERJViBjbGFzcz10cj48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9dGV4dD7QodC/
0LDRgdC40LHQviDQt9CwINGB0YLQsNGC0YzRji4g0JrQsNC6INGA0LDQtyDRgtC+INGH0YLQviDQ
vdGD0LbQvdC+INC40LzQtdC90L3QviDRgdC10LnRh9Cw0YEuIDwvRElWPg0KPERJViBjbGFzcz1i
bD4NCjxESVYgY2xhc3M9YmI+DQo8RElWIGNsYXNzPWJyPjwvRElWPjwvRElWPjwvRElWPjwvRElW
Pg0KPERJViBjbGFzcz1pbmZvPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9U
b3hhLyI+PElNRyBjbGFzcz1hdmF0YXIgDQphbHQ9YXZhdGFyIHNyYz0iaHR0cDovL3JvYm9jcmFm
dC5ydS91cGxvYWRzL2ltYWdlcy8xNTEvYXZhdGFyXzI0eDI0LmpwZyI+PC9BPiANCjxQPjxBIGNs
YXNzPWF1dGhvciBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvVG94YS8iPlRveGE8
L0E+PC9QPg0KPFVMPg0KICA8TEkgY2xhc3M9ZGF0ZT4xMCDRgdC10L3RgtGP0LHRgNGPIDIwMTEs
IDIzOjI3PC9MST4NCiAgPExJPjxBIGNsYXNzPSJpbWdsaW5rIGxpbmsiIA0KICBocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjY29tbWVudDE2MjEiPjwv
QT48L0xJPg0KICA8TEkgY2xhc3M9ImdvdG8tY29tbWVudC1jaGlsZCBoaWRkZW4iPjxBIHRpdGxl
PSLQntCx0YDQsNGC0L3QviDQuiDQvtGC0LLQtdGC0YMiIA0KICBvbmNsaWNrPSJyZXR1cm4gbHND
bXRUcmVlLmdvVG9DaGlsZENvbW1lbnQodGhpcyk7IiANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+4oaTPC9BPjwvTEk+PC9VTD48L0RJVj4N
CjxESVYgY2xhc3M9Y29tbWVudD4NCjxESVYgY2xhc3M9Y29udGVudD4NCjxESVYgc3R5bGU9IkRJ
U1BMQVk6IG5vbmUiIGlkPWNvbW1lbnRfcHJldmlld18xNjIxIGNsYXNzPXRleHQ+PC9ESVY+PC9E
SVY+PC9ESVY+DQo8RElWIHN0eWxlPSJESVNQTEFZOiBub25lIiBpZD1yZXBseV8xNjIxIGNsYXNz
PXJlcGx5PjwvRElWPg0KPERJViBpZD1jb21tZW50LWNoaWxkcmVuLTE2MjEgY2xhc3M9Y29tbWVu
dC1jaGlsZHJlbj48L0RJVj48L0RJVj4NCjxESVYgaWQ9Y29tbWVudF9pZF8xNjkxIGNsYXNzPWNv
bW1lbnQ+PElNRyBjbGFzcz1mb2xkaW5nIA0KdGl0bGU90YHQstC10YDQvdGD0YLRjC/RgNCw0LfQ
stC10YDQvdGD0YLRjCBhbHQ9KyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMv
c2tpbi9uZXcvaW1hZ2VzL2Nsb3NlLmdpZiI+IDxBIA0KbmFtZT1jb21tZW50MTY5MT48L0E+DQo8
RElWIGNsYXNzPSJ2b3RpbmcgIGd1ZXN0ICAgICAiPg0KPERJViBjbGFzcz10b3RhbD4wPC9ESVY+
PEEgY2xhc3M9cGx1cyANCm9uY2xpY2s9ImxzVm90ZS52b3RlKDE2OTEsdGhpcywxLCd0b3BpY19j
b21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9n
L2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9BPjxBIGNsYXNzPW1pbnVzIA0Kb25jbGljaz0ibHNW
b3RlLnZvdGUoMTY5MSx0aGlzLC0xLCd0b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0K
aHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9B
PjwvRElWPg0KPERJViBpZD1jb21tZW50X2NvbnRlbnRfaWRfMTY5MSBjbGFzcz0iY29udGVudCAi
Pg0KPERJViBjbGFzcz10Yj4NCjxESVYgY2xhc3M9dGw+DQo8RElWIGNsYXNzPXRyPjwvRElWPjwv
RElWPjwvRElWPg0KPERJViBjbGFzcz10ZXh0PtCh0L/QsNGB0LjQsdC+INC30LAg0YHRgtCw0YLR
jNGOLjxCUj7QkCDQutCw0Log0L/QvtC00YHRh9C40YLQsNGC0Ywg0LrQvtC7LdCy0L4g0L7QsdC+
0YDQvtGC0L7QsiDQsiDQtdC00LjQvdC40YbRgyANCtCy0YDQtdC80LXQvdC4LCDRgi7QtS4g0YHQ
utC+0YDQvtGB0YLRjCDQstGA0LDRidC10L3QuNGPPyA8L0RJVj4NCjxESVYgY2xhc3M9Ymw+DQo8
RElWIGNsYXNzPWJiPg0KPERJViBjbGFzcz1icj48L0RJVj48L0RJVj48L0RJVj48L0RJVj4NCjxE
SVYgY2xhc3M9aW5mbz48QSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvbGNjNy8i
PjxJTUcgY2xhc3M9YXZhdGFyIA0KYWx0PWF2YXRhciANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5y
dS90ZW1wbGF0ZXMvc2tpbi9uZXcvaW1hZ2VzL2F2YXRhcl8yNHgyNC5qcGciPjwvQT4gDQo8UD48
QSBjbGFzcz1hdXRob3IgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL2xjYzcvIj5s
Y2M3PC9BPjwvUD4NCjxVTD4NCiAgPExJIGNsYXNzPWRhdGU+MjEg0YHQtdC90YLRj9Cx0YDRjyAy
MDExLCAxODo1ODwvTEk+DQogIDxMST48QSBjbGFzcz0iaW1nbGluayBsaW5rIiANCiAgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sI2NvbW1lbnQxNjkx
Ij48L0E+PC9MST4NCiAgPExJIGNsYXNzPSJnb3RvLWNvbW1lbnQtY2hpbGQgaGlkZGVuIj48QSB0
aXRsZT0i0J7QsdGA0LDRgtC90L4g0Log0L7RgtCy0LXRgtGDIiANCiAgb25jbGljaz0icmV0dXJu
IGxzQ210VHJlZS5nb1RvQ2hpbGRDb21tZW50KHRoaXMpOyIgDQogIGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPuKGkzwvQT48L0xJPjwvVUw+PC9E
SVY+DQo8RElWIGNsYXNzPWNvbW1lbnQ+DQo8RElWIGNsYXNzPWNvbnRlbnQ+DQo8RElWIHN0eWxl
PSJESVNQTEFZOiBub25lIiBpZD1jb21tZW50X3ByZXZpZXdfMTY5MSBjbGFzcz10ZXh0PjwvRElW
PjwvRElWPjwvRElWPg0KPERJViBzdHlsZT0iRElTUExBWTogbm9uZSIgaWQ9cmVwbHlfMTY5MSBj
bGFzcz1yZXBseT48L0RJVj4NCjxESVYgaWQ9Y29tbWVudC1jaGlsZHJlbi0xNjkxIGNsYXNzPWNv
bW1lbnQtY2hpbGRyZW4+DQo8RElWIGlkPWNvbW1lbnRfaWRfMTY5MiBjbGFzcz1jb21tZW50PjxJ
TUcgY2xhc3M9Zm9sZGluZyANCnRpdGxlPdGB0LLQtdGA0L3Rg9GC0Ywv0YDQsNC30LLQtdGA0L3R
g9GC0YwgYWx0PSsgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3
L2ltYWdlcy9jbG9zZS5naWYiPiA8QSANCm5hbWU9Y29tbWVudDE2OTI+PC9BPg0KPERJViBjbGFz
cz0idm90aW5nIHBvc2l0aXZlIGd1ZXN0ICAgICAiPg0KPERJViBjbGFzcz10b3RhbD4rMTwvRElW
PjxBIGNsYXNzPXBsdXMgDQpvbmNsaWNrPSJsc1ZvdGUudm90ZSgxNjkyLHRoaXMsMSwndG9waWNf
Y29tbWVudCcpOyByZXR1cm4gZmFsc2U7IiANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxv
Zy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwvQT48QSBjbGFzcz1taW51cyANCm9uY2xpY2s9Imxz
Vm90ZS52b3RlKDE2OTIsdGhpcywtMSwndG9waWNfY29tbWVudCcpOyByZXR1cm4gZmFsc2U7IiAN
CmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPjwv
QT48L0RJVj4NCjxESVYgaWQ9Y29tbWVudF9jb250ZW50X2lkXzE2OTIgY2xhc3M9ImNvbnRlbnQg
Ij4NCjxESVYgY2xhc3M9dGI+DQo8RElWIGNsYXNzPXRsPg0KPERJViBjbGFzcz10cj48L0RJVj48
L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9dGV4dD7QotCw0Log0YMg0LzQtdC90Y8g0LbQtSDQsiDR
gdC60LXRgtGH0LUg0L3QsNC/0LjRgdCw0L3Qvjo8QlI+PEJSPmxjZC5wcmludCg8Qj5yZXZvbHV0
aW9ucyANCuKAlCByZXZvbHV0aW9uc19hdF9sYXN0X2Rpc3BsYXk8L0I+KTs8QlI+PEJSPtCvINGB
0LTQtdC70LDQuyDQv9GA0L7RgdGC0L4g4oCUINC60LDQttC00YPRjiDRgdC10LrRg9C90LTRgyAN
CtC+0YLQvdC40LzQsNGOINC+0YIg0YLQtdC60YPRidC10LPQviDRh9C40YHQu9CwINC+0LHQvtGA
0L7RgtC+0LIg0LfQsNC/0L7QvNC90LXQvdC90L7QtSDRgdC10LrRg9C90LTQvtC5INGA0LDQvdC1
0LUuINCc0L7QttC10YLQtSDRgdGH0LjRgtCw0YLRjCANCtC+0LHRidC10LUg0LrQvtC70LjRh9C1
0YHRgtCy0L4g0L7QsdC+0YDQvtGC0L7QsiDQtNC10LvQuNGC0Ywg0L3QsCDQstGA0LXQvNGPLCDQ
v9GA0L7RiNC10LTRiNC10LUg0YEg0L/QvtGB0LvQtdC00L3QtdCz0L4g0LzQvtC80LXQvdGC0LAg
0YHQvNC10L3RiyANCtC90LDQv9GA0LDQstC70LXQvdC40Y8g4oCUINGC0L7Qs9C00LAg0L/QvtC7
0YPRh9C40YLQtSDRgdGA0LXQtNC90Y7RjiDRgdC60L7RgNC+0YHRgtGMINCy0YDQsNGJ0LXQvdC4
0Y8uINCd0LDQv9GA0LjQvNC10YAsINC80L7QttC10YLQtSANCtC30LDRgdC10LrQsNGC0Ywg0LLR
gNC10LzRjyDQsiDRhNGD0LrRhtC40LggPEk+dHVybmVkKCk8L0k+INCyINGD0YHQu9C+0LLQuNC4
IDxJPmlmIChuZXdfZGlyZWN0aW9uICE9IA0KZGlyZWN0aW9uKTwvST4uPEJSPjwvRElWPg0KPERJ
ViBjbGFzcz1ibD4NCjxESVYgY2xhc3M9YmI+DQo8RElWIGNsYXNzPWJyPjwvRElWPjwvRElWPjwv
RElWPjwvRElWPg0KPERJViBjbGFzcz1pbmZvPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUv
cHJvZmlsZS9idXJqdWkvIj48SU1HIGNsYXNzPWF2YXRhciANCmFsdD1hdmF0YXIgc3JjPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L3VwbG9hZHMvaW1hZ2VzLzE1Mi9hdmF0YXJfMjR4MjQucG5nIj48L0E+
IA0KPFA+PEEgY2xhc3M9YXV0aG9yIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9i
dXJqdWkvIj5idXJqdWk8L0E+PC9QPg0KPFVMPg0KICA8TEkgY2xhc3M9ZGF0ZT4yMSDRgdC10L3R
gtGP0LHRgNGPIDIwMTEsIDIwOjMwPC9MST4NCiAgPExJPjxBIGNsYXNzPSJpbWdsaW5rIGxpbmsi
IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwj
Y29tbWVudDE2OTIiPjwvQT48L0xJPg0KICA8TEkgY2xhc3M9Z290by1jb21tZW50LXBhcmVudD48
QSB0aXRsZT0i0J7RgtCy0LXRgiDQvdCwIiANCiAgb25jbGljaz0icmV0dXJuIGxzQ210VHJlZS5n
b1RvUGFyZW50Q29tbWVudCgkKHRoaXMpKTsiIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1
L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjY29tbWVudDE2OTEiPuKGkTwvQT48L0xJPg0KICA8
TEkgY2xhc3M9ImdvdG8tY29tbWVudC1jaGlsZCBoaWRkZW4iPjxBIHRpdGxlPSLQntCx0YDQsNGC
0L3QviDQuiDQvtGC0LLQtdGC0YMiIA0KICBvbmNsaWNrPSJyZXR1cm4gbHNDbXRUcmVlLmdvVG9D
aGlsZENvbW1lbnQodGhpcyk7IiANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2Vs
ZWN0cm9uaWNzLzU5NC5odG1sIyI+4oaTPC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYgY2xhc3M9
Y29tbWVudD4NCjxESVYgY2xhc3M9Y29udGVudD4NCjxESVYgc3R5bGU9IkRJU1BMQVk6IG5vbmUi
IGlkPWNvbW1lbnRfcHJldmlld18xNjkyIGNsYXNzPXRleHQ+PC9ESVY+PC9ESVY+PC9ESVY+DQo8
RElWIHN0eWxlPSJESVNQTEFZOiBub25lIiBpZD1yZXBseV8xNjkyIGNsYXNzPXJlcGx5PjwvRElW
Pg0KPERJViBpZD1jb21tZW50LWNoaWxkcmVuLTE2OTIgY2xhc3M9Y29tbWVudC1jaGlsZHJlbj48
L0RJVj48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgaWQ9Y29tbWVudF9pZF8xNjk4IGNsYXNzPWNv
bW1lbnQ+PElNRyBjbGFzcz1mb2xkaW5nIA0KdGl0bGU90YHQstC10YDQvdGD0YLRjC/RgNCw0LfQ
stC10YDQvdGD0YLRjCBhbHQ9KyANCnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMv
c2tpbi9uZXcvaW1hZ2VzL2Nsb3NlLmdpZiI+IDxBIA0KbmFtZT1jb21tZW50MTY5OD48L0E+DQo8
RElWIGNsYXNzPSJ2b3RpbmcgIGd1ZXN0ICAgICAiPg0KPERJViBjbGFzcz10b3RhbD4wPC9ESVY+
PEEgY2xhc3M9cGx1cyANCm9uY2xpY2s9ImxzVm90ZS52b3RlKDE2OTgsdGhpcywxLCd0b3BpY19j
b21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9n
L2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9BPjxBIGNsYXNzPW1pbnVzIA0Kb25jbGljaz0ibHNW
b3RlLnZvdGUoMTY5OCx0aGlzLC0xLCd0b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0K
aHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9B
PjwvRElWPg0KPERJViBpZD1jb21tZW50X2NvbnRlbnRfaWRfMTY5OCBjbGFzcz0iY29udGVudCAi
Pg0KPERJViBjbGFzcz10Yj4NCjxESVYgY2xhc3M9dGw+DQo8RElWIGNsYXNzPXRyPjwvRElWPjwv
RElWPjwvRElWPg0KPERJViBjbGFzcz10ZXh0PtCh0L/QsNGB0LjQsdC+INC30LAg0YHRgtCw0YLR
jNGOLiDQn9C+0LTRgdC60LDQttC40YLQtSwg0LAg0Y3RgtC4INC00LDRgtGH0LjQutC4INC80L7Q
s9GD0YIg0L3QtSDRgtC+0LvRjNC60L4gDQrQv9C10YDQtdC60LvRjtGH0LDRgtGM0YHRjyDQv9GA
0Lgg0LjQt9C80LXQvdC10L3QuNC4INC80LDQs9C90LjRgtC90L7Qs9C+INC/0L7Qu9GPLCDQvdC+
INC4INGA0LXQs9C40YHRgtGA0LjRgNC+0LLQsNGC0Ywg0L/RgNC+0LzQtdC20YPRgtC+0YfQvdGL
0LUgDQrQt9C90LDRh9C10L3QuNGPPyDQoi7QtS4g0L3QsNC/0YDQuNC80LXRgCwg0L7Qv9GA0LXQ
tNC10LvRj9GC0Ywg0YDQsNGB0YHRgtC+0Y/QvdC40LUg0LTQviDQvNCw0LPQvdC40YLQsC4gPC9E
SVY+DQo8RElWIGNsYXNzPWJsPg0KPERJViBjbGFzcz1iYj4NCjxESVYgY2xhc3M9YnI+PC9ESVY+
PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWluZm8+PEEgaHJlZj0iaHR0cDovL3JvYm9j
cmFmdC5ydS9wcm9maWxlL0hvbWVyLyI+PElNRyBjbGFzcz1hdmF0YXIgDQphbHQ9YXZhdGFyIA0K
c3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9pbWFnZXMvYXZhdGFy
XzI0eDI0LmpwZyI+PC9BPiANCjxQPjxBIGNsYXNzPWF1dGhvciBocmVmPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L3Byb2ZpbGUvSG9tZXIvIj5Ib21lcjwvQT48L1A+DQo8VUw+DQogIDxMSSBjbGFzcz1k
YXRlPjIzINGB0LXQvdGC0Y/QsdGA0Y8gMjAxMSwgMTk6Mzc8L0xJPg0KICA8TEk+PEEgY2xhc3M9
ImltZ2xpbmsgbGluayIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJv
bmljcy81OTQuaHRtbCNjb21tZW50MTY5OCI+PC9BPjwvTEk+DQogIDxMSSBjbGFzcz0iZ290by1j
b21tZW50LWNoaWxkIGhpZGRlbiI+PEEgdGl0bGU9ItCe0LHRgNCw0YLQvdC+INC6INC+0YLQstC1
0YLRgyIgDQogIG9uY2xpY2s9InJldHVybiBsc0NtdFRyZWUuZ29Ub0NoaWxkQ29tbWVudCh0aGlz
KTsiIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0
bWwjIj7ihpM8L0E+PC9MST48L1VMPjwvRElWPg0KPERJViBjbGFzcz1jb21tZW50Pg0KPERJViBj
bGFzcz1jb250ZW50Pg0KPERJViBzdHlsZT0iRElTUExBWTogbm9uZSIgaWQ9Y29tbWVudF9wcmV2
aWV3XzE2OTggY2xhc3M9dGV4dD48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgc3R5bGU9IkRJU1BM
QVk6IG5vbmUiIGlkPXJlcGx5XzE2OTggY2xhc3M9cmVwbHk+PC9ESVY+DQo8RElWIGlkPWNvbW1l
bnQtY2hpbGRyZW4tMTY5OCBjbGFzcz1jb21tZW50LWNoaWxkcmVuPg0KPERJViBpZD1jb21tZW50
X2lkXzE3MDUgY2xhc3M9Y29tbWVudD48SU1HIGNsYXNzPWZvbGRpbmcgDQp0aXRsZT3RgdCy0LXR
gNC90YPRgtGML9GA0LDQt9Cy0LXRgNC90YPRgtGMIGFsdD0rIA0Kc3JjPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9pbWFnZXMvY2xvc2UuZ2lmIj4gPEEgDQpuYW1lPWNv
bW1lbnQxNzA1PjwvQT4NCjxESVYgY2xhc3M9InZvdGluZyBwb3NpdGl2ZSBndWVzdCAgICAgIj4N
CjxESVYgY2xhc3M9dG90YWw+KzE8L0RJVj48QSBjbGFzcz1wbHVzIA0Kb25jbGljaz0ibHNWb3Rl
LnZvdGUoMTcwNSx0aGlzLDEsJ3RvcGljX2NvbW1lbnQnKTsgcmV0dXJuIGZhbHNlOyIgDQpocmVm
PSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj48L0E+PEEg
Y2xhc3M9bWludXMgDQpvbmNsaWNrPSJsc1ZvdGUudm90ZSgxNzA1LHRoaXMsLTEsJ3RvcGljX2Nv
bW1lbnQnKTsgcmV0dXJuIGZhbHNlOyIgDQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cv
ZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj48L0E+PC9ESVY+DQo8RElWIGlkPWNvbW1lbnRfY29udGVu
dF9pZF8xNzA1IGNsYXNzPSJjb250ZW50ICI+DQo8RElWIGNsYXNzPXRiPg0KPERJViBjbGFzcz10
bD4NCjxESVYgY2xhc3M9dHI+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPXRleHQ+0JDQ
vdCw0LvQvtCz0L7QstGL0LUg0YLQsNC6INC80L7Qs9GD0YIsINC4INGC0LUsINGH0YLQviDQtNC+
0YHRgtGD0L/QvdGLINC80L3QtSAoU1M0OUUpLCDRgNC10LDQs9C40YDRg9GO0YIgDQrQvdCwINC0
0L7RgdGC0LDRgtC+0YfQvdC+INGB0LjQu9GM0L3Ri9C5INC80LDQs9C90LjRgiDQvdCw0YfQuNC9
0LDRjyDRgSDRgNCw0YHRgdGC0L7Rj9C90LjRjyDQsiAyINGB0LwuINCi0LDQuiDRh9GC0L4g0YHQ
uNC70YzQvdC+INGC0L7Rh9C90L4g0LggDQrQtNCw0LvQtdC60L4g0YEg0L3QuNC80Lgg0L3QtSDQ
v9C+0LzQtdGA0LjRiNGMLiDQn9C10YDQtdGH0LjRgtCw0LnRgtC1INGB0YLQsNGC0YzRjiwg0YLQ
sNC8INC90LAg0YHQutGA0LjQvdGI0L7RgtC1INCyINC+0L/QuNGB0LDQvdC40LggDQrQsNC90LDQ
u9C+0LPQvtCy0L7Qs9C+INC00LDRgtGH0LjQutCwINC/0YDQtdC60YDQsNGB0L3QviDQstC40LTQ
vdC+LCDRh9GC0L4g0LfQvdCw0YfQtdC90LjRjyDQvNC10L3Rj9GO0YLRgdGPINC/0LvQsNCy0L3Q
viDQsiDQt9Cw0LLQuNGB0LjQvNC+0YHRgtC4IA0K0L7RgiDRgNCw0YHRgdGC0L7Rj9C90LjRjyDQ
tNC+INC80LDQs9C90LjRgtCwLjxCUj7QndGDLCDQsCDQsiDRhtC40YTRgNC+0LLRi9GFINC00LDR
gtGH0LjQutCw0YUg0L/RgNC+0LzQtdC20YPRgtC+0YfQvdGL0LUg0LfQvdCw0YfQtdC90LjRjyAN
CtC40LPQvdC+0YDQuNGA0YPRjtGC0YHRjyDRg9C80YvRiNC70LXQvdC90L4sINC40LHQviDRgdC4
0LUg0LXRgdGC0Ywg0YHRg9GC0Ywg0YbQuNGE0YDQvtCy0YvRhSDRg9GB0YLRgNC+0LnRgdGC0LIg
KDogPC9ESVY+DQo8RElWIGNsYXNzPWJsPg0KPERJViBjbGFzcz1iYj4NCjxESVYgY2xhc3M9YnI+
PC9ESVY+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWluZm8+PEEgaHJlZj0iaHR0cDov
L3JvYm9jcmFmdC5ydS9wcm9maWxlL2J1cmp1aS8iPjxJTUcgY2xhc3M9YXZhdGFyIA0KYWx0PWF2
YXRhciBzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdXBsb2Fkcy9pbWFnZXMvMTUyL2F2YXRhcl8y
NHgyNC5wbmciPjwvQT4gDQo8UD48QSBjbGFzcz1hdXRob3IgaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9wcm9maWxlL2J1cmp1aS8iPmJ1cmp1aTwvQT48L1A+DQo8VUw+DQogIDxMSSBjbGFzcz1k
YXRlPjI0INGB0LXQvdGC0Y/QsdGA0Y8gMjAxMSwgMTc6Mjg8L0xJPg0KICA8TEk+PEEgY2xhc3M9
ImltZ2xpbmsgbGluayIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJv
bmljcy81OTQuaHRtbCNjb21tZW50MTcwNSI+PC9BPjwvTEk+DQogIDxMSSBjbGFzcz1nb3RvLWNv
bW1lbnQtcGFyZW50PjxBIHRpdGxlPSLQntGC0LLQtdGCINC90LAiIA0KICBvbmNsaWNrPSJyZXR1
cm4gbHNDbXRUcmVlLmdvVG9QYXJlbnRDb21tZW50KCQodGhpcykpOyIgDQogIGhyZWY9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCNjb21tZW50MTY5OCI+4oaR
PC9BPjwvTEk+DQogIDxMSSBjbGFzcz0iZ290by1jb21tZW50LWNoaWxkIGhpZGRlbiI+PEEgdGl0
bGU9ItCe0LHRgNCw0YLQvdC+INC6INC+0YLQstC10YLRgyIgDQogIG9uY2xpY2s9InJldHVybiBs
c0NtdFRyZWUuZ29Ub0NoaWxkQ29tbWVudCh0aGlzKTsiIA0KICBocmVmPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj7ihpM8L0E+PC9MST48L1VMPjwvRElW
Pg0KPERJViBjbGFzcz1jb21tZW50Pg0KPERJViBjbGFzcz1jb250ZW50Pg0KPERJViBzdHlsZT0i
RElTUExBWTogbm9uZSIgaWQ9Y29tbWVudF9wcmV2aWV3XzE3MDUgY2xhc3M9dGV4dD48L0RJVj48
L0RJVj48L0RJVj4NCjxESVYgc3R5bGU9IkRJU1BMQVk6IG5vbmUiIGlkPXJlcGx5XzE3MDUgY2xh
c3M9cmVwbHk+PC9ESVY+DQo8RElWIGlkPWNvbW1lbnQtY2hpbGRyZW4tMTcwNSBjbGFzcz1jb21t
ZW50LWNoaWxkcmVuPg0KPERJViBpZD1jb21tZW50X2lkXzE3MDYgY2xhc3M9Y29tbWVudD48SU1H
IGNsYXNzPWZvbGRpbmcgDQp0aXRsZT3RgdCy0LXRgNC90YPRgtGML9GA0LDQt9Cy0LXRgNC90YPR
gtGMIGFsdD0rIA0Kc3JjPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RlbXBsYXRlcy9za2luL25ldy9p
bWFnZXMvY2xvc2UuZ2lmIj4gPEEgDQpuYW1lPWNvbW1lbnQxNzA2PjwvQT4NCjxESVYgY2xhc3M9
InZvdGluZyAgZ3Vlc3QgICAgICI+DQo8RElWIGNsYXNzPXRvdGFsPjA8L0RJVj48QSBjbGFzcz1w
bHVzIA0Kb25jbGljaz0ibHNWb3RlLnZvdGUoMTcwNix0aGlzLDEsJ3RvcGljX2NvbW1lbnQnKTsg
cmV0dXJuIGZhbHNlOyIgDQpocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25p
Y3MvNTk0Lmh0bWwjIj48L0E+PEEgY2xhc3M9bWludXMgDQpvbmNsaWNrPSJsc1ZvdGUudm90ZSgx
NzA2LHRoaXMsLTEsJ3RvcGljX2NvbW1lbnQnKTsgcmV0dXJuIGZhbHNlOyIgDQpocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj48L0E+PC9ESVY+DQo8
RElWIGlkPWNvbW1lbnRfY29udGVudF9pZF8xNzA2IGNsYXNzPSJjb250ZW50ICI+DQo8RElWIGNs
YXNzPXRiPg0KPERJViBjbGFzcz10bD4NCjxESVYgY2xhc3M9dHI+PC9ESVY+PC9ESVY+PC9ESVY+
DQo8RElWIGNsYXNzPXRleHQ+0KHQv9Cw0YHQuNCx0L4g0LfQsCDQsdGL0YHRgtGA0YvQuSDQvtGC
0LLQtdGCLiDQkiDRgdGC0LDRgtGM0LUg0YPQstC40LTQtdC7LCDRh9GC0L4g0LzQtdC90Y/RjtGC
0YHRjywg0L3QviDQsdGL0LvQviANCtC90LXQsdC+0LvRjNGI0L7QtSDRgdC+0LzQvdC10L3QuNC1
LiA8L0RJVj4NCjxESVYgY2xhc3M9Ymw+DQo8RElWIGNsYXNzPWJiPg0KPERJViBjbGFzcz1icj48
L0RJVj48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9aW5mbz48QSBocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvSG9tZXIvIj48SU1HIGNsYXNzPWF2YXRhciANCmFsdD1hdmF0
YXIgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4vbmV3L2ltYWdlcy9h
dmF0YXJfMjR4MjQuanBnIj48L0E+IA0KPFA+PEEgY2xhc3M9YXV0aG9yIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvcHJvZmlsZS9Ib21lci8iPkhvbWVyPC9BPjwvUD4NCjxVTD4NCiAgPExJIGNs
YXNzPWRhdGU+MjQg0YHQtdC90YLRj9Cx0YDRjyAyMDExLCAxNzo0ODwvTEk+DQogIDxMST48QSBj
bGFzcz0iaW1nbGluayBsaW5rIiANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2Vs
ZWN0cm9uaWNzLzU5NC5odG1sI2NvbW1lbnQxNzA2Ij48L0E+PC9MST4NCiAgPExJIGNsYXNzPWdv
dG8tY29tbWVudC1wYXJlbnQ+PEEgdGl0bGU9ItCe0YLQstC10YIg0L3QsCIgDQogIG9uY2xpY2s9
InJldHVybiBsc0NtdFRyZWUuZ29Ub1BhcmVudENvbW1lbnQoJCh0aGlzKSk7IiANCiAgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sI2NvbW1lbnQxNzA1
Ij7ihpE8L0E+PC9MST4NCiAgPExJIGNsYXNzPSJnb3RvLWNvbW1lbnQtY2hpbGQgaGlkZGVuIj48
QSB0aXRsZT0i0J7QsdGA0LDRgtC90L4g0Log0L7RgtCy0LXRgtGDIiANCiAgb25jbGljaz0icmV0
dXJuIGxzQ210VHJlZS5nb1RvQ2hpbGRDb21tZW50KHRoaXMpOyIgDQogIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCMiPuKGkzwvQT48L0xJPjwvVUw+
PC9ESVY+DQo8RElWIGNsYXNzPWNvbW1lbnQ+DQo8RElWIGNsYXNzPWNvbnRlbnQ+DQo8RElWIHN0
eWxlPSJESVNQTEFZOiBub25lIiBpZD1jb21tZW50X3ByZXZpZXdfMTcwNiBjbGFzcz10ZXh0Pjwv
RElWPjwvRElWPjwvRElWPg0KPERJViBzdHlsZT0iRElTUExBWTogbm9uZSIgaWQ9cmVwbHlfMTcw
NiBjbGFzcz1yZXBseT48L0RJVj4NCjxESVYgaWQ9Y29tbWVudC1jaGlsZHJlbi0xNzA2IA0KY2xh
c3M9Y29tbWVudC1jaGlsZHJlbj48L0RJVj48L0RJVj48L0RJVj48L0RJVj48L0RJVj48L0RJVj4N
CjxESVYgaWQ9Y29tbWVudF9pZF8yMDI1IGNsYXNzPWNvbW1lbnQ+PElNRyBjbGFzcz1mb2xkaW5n
IA0KdGl0bGU90YHQstC10YDQvdGD0YLRjC/RgNCw0LfQstC10YDQvdGD0YLRjCBhbHQ9KyANCnNy
Yz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvaW1hZ2VzL2Nsb3NlLmdp
ZiI+IDxBIA0KbmFtZT1jb21tZW50MjAyNT48L0E+DQo8RElWIGNsYXNzPSJ2b3RpbmcgIGd1ZXN0
ICAgICAiPg0KPERJViBjbGFzcz10b3RhbD4wPC9ESVY+PEEgY2xhc3M9cGx1cyANCm9uY2xpY2s9
ImxzVm90ZS52b3RlKDIwMjUsdGhpcywxLCd0b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxzZTsi
IA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+
PC9BPjxBIGNsYXNzPW1pbnVzIA0Kb25jbGljaz0ibHNWb3RlLnZvdGUoMjAyNSx0aGlzLC0xLCd0
b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9BPjwvRElWPg0KPERJViBpZD1jb21tZW50
X2NvbnRlbnRfaWRfMjAyNSBjbGFzcz0iY29udGVudCAiPg0KPERJViBjbGFzcz10Yj4NCjxESVYg
Y2xhc3M9dGw+DQo8RElWIGNsYXNzPXRyPjwvRElWPjwvRElWPjwvRElWPg0KPERJViBjbGFzcz10
ZXh0PtCQINGH0YLQviDQtNC10LvQsNGC0Ywg0YEg0LTQsNGC0YfQuNC60LDQvNC4INCl0L7Qu9C7
0LAg0YMg0LrQvtGC0L7RgNGL0YUgNCDQstGL0LLQvtC00LA/IDxCUj7QotCw0LrQuNC1IA0K0LTQ
sNGC0YfQuNC60Lgg0YHRgtC+0Y/RgiDQv9C+0LQg0L7QsdC80L7RgtC60LDQvNC4INGDINC00LLQ
uNCz0LDRgtC10LvQtdC5IENELVJPTS4gPEJSPtCi0LDQvCAzINC00LDRgtGH0LjQutCwINC4INC6
0LDQuiDRg9C30L3QsNGC0YwsIA0K0LrQsNC60LjQtSDQuNC80LXQvdC90L4g0LTQsNGC0YfQuNC6
0Lgg0YLQsNC8INGB0YLQvtGP0YIsINGB0LjQu9GM0L3QviDQu9C4INC+0L3QuCDQvtGC0LvQuNGH
0LDRjtGC0YHRjz8gPC9ESVY+DQo8RElWIGNsYXNzPWJsPg0KPERJViBjbGFzcz1iYj4NCjxESVYg
Y2xhc3M9YnI+PC9ESVY+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWluZm8+PEEgaHJl
Zj0iaHR0cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL0JheHN0ZXIvIj48SU1HIGNsYXNzPWF2YXRh
ciANCmFsdD1hdmF0YXIgDQpzcmM9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGVtcGxhdGVzL3NraW4v
bmV3L2ltYWdlcy9hdmF0YXJfMjR4MjQuanBnIj48L0E+IA0KPFA+PEEgY2xhc3M9YXV0aG9yIGhy
ZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9CYXhzdGVyLyI+QmF4c3RlcjwvQT48L1A+
DQo8VUw+DQogIDxMSSBjbGFzcz1kYXRlPjEyINC00LXQutCw0LHRgNGPIDIwMTEsIDE0OjEwPC9M
ST4NCiAgPExJPjxBIGNsYXNzPSJpbWdsaW5rIGxpbmsiIA0KICBocmVmPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjY29tbWVudDIwMjUiPjwvQT48L0xJPg0K
ICA8TEkgY2xhc3M9ImdvdG8tY29tbWVudC1jaGlsZCBoaWRkZW4iPjxBIHRpdGxlPSLQntCx0YDQ
sNGC0L3QviDQuiDQvtGC0LLQtdGC0YMiIA0KICBvbmNsaWNrPSJyZXR1cm4gbHNDbXRUcmVlLmdv
VG9DaGlsZENvbW1lbnQodGhpcyk7IiANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9n
L2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+4oaTPC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYgY2xh
c3M9Y29tbWVudD4NCjxESVYgY2xhc3M9Y29udGVudD4NCjxESVYgc3R5bGU9IkRJU1BMQVk6IG5v
bmUiIGlkPWNvbW1lbnRfcHJldmlld18yMDI1IGNsYXNzPXRleHQ+PC9ESVY+PC9ESVY+PC9ESVY+
DQo8RElWIHN0eWxlPSJESVNQTEFZOiBub25lIiBpZD1yZXBseV8yMDI1IGNsYXNzPXJlcGx5Pjwv
RElWPg0KPERJViBpZD1jb21tZW50LWNoaWxkcmVuLTIwMjUgY2xhc3M9Y29tbWVudC1jaGlsZHJl
bj4NCjxESVYgaWQ9Y29tbWVudF9pZF8yMDI2IGNsYXNzPWNvbW1lbnQ+PElNRyBjbGFzcz1mb2xk
aW5nIA0KdGl0bGU90YHQstC10YDQvdGD0YLRjC/RgNCw0LfQstC10YDQvdGD0YLRjCBhbHQ9KyAN
CnNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS90ZW1wbGF0ZXMvc2tpbi9uZXcvaW1hZ2VzL2Nsb3Nl
LmdpZiI+IDxBIA0KbmFtZT1jb21tZW50MjAyNj48L0E+DQo8RElWIGNsYXNzPSJ2b3RpbmcgIGd1
ZXN0ICAgICAiPg0KPERJViBjbGFzcz10b3RhbD4wPC9ESVY+PEEgY2xhc3M9cGx1cyANCm9uY2xp
Y2s9ImxzVm90ZS52b3RlKDIwMjYsdGhpcywxLCd0b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxz
ZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1s
IyI+PC9BPjxBIGNsYXNzPW1pbnVzIA0Kb25jbGljaz0ibHNWb3RlLnZvdGUoMjAyNix0aGlzLC0x
LCd0b3BpY19jb21tZW50Jyk7IHJldHVybiBmYWxzZTsiIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9ibG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+PC9BPjwvRElWPg0KPERJViBpZD1jb21t
ZW50X2NvbnRlbnRfaWRfMjAyNiBjbGFzcz0iY29udGVudCAiPg0KPERJViBjbGFzcz10Yj4NCjxE
SVYgY2xhc3M9dGw+DQo8RElWIGNsYXNzPXRyPjwvRElWPjwvRElWPjwvRElWPg0KPERJViBjbGFz
cz10ZXh0PtCa0LDQuiDQstGB0LXQs9C00LAg4oCUINC/0L7Qu9GM0LfRg9GP0YHRjCBHb29nbGUg
0Lgg0LjQvdGC0YPQuNGG0LjQtdC5LiDQldGB0LvQuCDQtNCw0YLRh9C40LrQuCDQvdC1INC40LzQ
tdGO0YIgDQrQvdC40LrQsNC60L7QuSDQvNCw0YDQutC40YDQvtCy0LrQuCwg0YLQvtCz0LTQsCDQ
sdC+0LvRjNGI0LUg0LjQvdGC0YPQuNGG0LjRjyDQv9C+0LzQvtC20LXRgi4g0JzQvtCz0YMg0YLQ
vtC70YzQutC+INC/0L7RgdC+0LLQtdGC0L7QstCw0YLRjCANCtGB0L3QsNGH0LDQu9CwINGB0L3Q
uNC80LDRgtGMINGBINC90LjRhSDRgdC40LPQvdCw0LssINC60LDQuiDRgSDQsNC90LDQu9C+0LPQ
vtCy0YvRhSwg0LAg0YLQsNC8INGD0LYg0L/QviDQt9C90LDRh9C10L3QuNGP0LwgDQphbmFsb2dS
ZWFkKCkg0LHRg9C00LXRgiDRj9GB0L3Qviwg0LrQsNC60L7QuSDQtNCw0YLRh9C40Log0L3QsCDR
gdCw0LzQvtC8INC00LXQu9C1LiDQktGL0LvQvtC20LjRgtC1INGE0L7RgtC60YMg0Y3RgtC40YUg
DQrQtNCw0YLRh9C40LrQvtCyLCDQtdGB0LvQuCDQvdC1INGC0YDRg9C00L3QviDigJQg0YXQvtGC
0Ywg0L/QvtC70Y7QsdGD0LXQvNGB0Y8g0LLRgdC1INC90LAg0YLQsNC60L7QtSDRh9GD0LTQviAo
OiA8L0RJVj4NCjxESVYgY2xhc3M9Ymw+DQo8RElWIGNsYXNzPWJiPg0KPERJViBjbGFzcz1icj48
L0RJVj48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9aW5mbz48QSBocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvYnVyanVpLyI+PElNRyBjbGFzcz1hdmF0YXIgDQphbHQ9YXZh
dGFyIHNyYz0iaHR0cDovL3JvYm9jcmFmdC5ydS91cGxvYWRzL2ltYWdlcy8xNTIvYXZhdGFyXzI0
eDI0LnBuZyI+PC9BPiANCjxQPjxBIGNsYXNzPWF1dGhvciBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L3Byb2ZpbGUvYnVyanVpLyI+YnVyanVpPC9BPjwvUD4NCjxVTD4NCiAgPExJIGNsYXNzPWRh
dGU+MTIg0LTQtdC60LDQsdGA0Y8gMjAxMSwgMTQ6MzI8L0xJPg0KICA8TEk+PEEgY2xhc3M9Imlt
Z2xpbmsgbGluayIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmlj
cy81OTQuaHRtbCNjb21tZW50MjAyNiI+PC9BPjwvTEk+DQogIDxMSSBjbGFzcz1nb3RvLWNvbW1l
bnQtcGFyZW50PjxBIHRpdGxlPSLQntGC0LLQtdGCINC90LAiIA0KICBvbmNsaWNrPSJyZXR1cm4g
bHNDbXRUcmVlLmdvVG9QYXJlbnRDb21tZW50KCQodGhpcykpOyIgDQogIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQuaHRtbCNjb21tZW50MjAyNSI+4oaRPC9B
PjwvTEk+DQogIDxMSSBjbGFzcz0iZ290by1jb21tZW50LWNoaWxkIGhpZGRlbiI+PEEgdGl0bGU9
ItCe0LHRgNCw0YLQvdC+INC6INC+0YLQstC10YLRgyIgDQogIG9uY2xpY2s9InJldHVybiBsc0Nt
dFRyZWUuZ29Ub0NoaWxkQ29tbWVudCh0aGlzKTsiIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTk0Lmh0bWwjIj7ihpM8L0E+PC9MST48L1VMPjwvRElWPg0K
PERJViBjbGFzcz1jb21tZW50Pg0KPERJViBjbGFzcz1jb250ZW50Pg0KPERJViBzdHlsZT0iRElT
UExBWTogbm9uZSIgaWQ9Y29tbWVudF9wcmV2aWV3XzIwMjYgY2xhc3M9dGV4dD48L0RJVj48L0RJ
Vj48L0RJVj4NCjxESVYgc3R5bGU9IkRJU1BMQVk6IG5vbmUiIGlkPXJlcGx5XzIwMjYgY2xhc3M9
cmVwbHk+PC9ESVY+DQo8RElWIGlkPWNvbW1lbnQtY2hpbGRyZW4tMjAyNiANCmNsYXNzPWNvbW1l
bnQtY2hpbGRyZW4+PC9ESVY+PC9ESVY+PC9ESVY+PC9ESVY+PFNQQU4gDQppZD1jb21tZW50LWNo
aWxkcmVuLTA+PC9TUEFOPjxCUj7QotC+0LvRjNC60L4g0LfQsNGA0LXQs9C40YHRgtGA0LjRgNC+
0LLQsNC90L3Ri9C1INC4INCw0LLRgtC+0YDQuNC30L7QstCw0L3QvdGL0LUgDQrQv9C+0LvRjNC3
0L7QstCw0YLQtdC70Lgg0LzQvtCz0YPRgiDQvtGB0YLQsNCy0LvRj9GC0Ywg0LrQvtC80LzQtdC9
0YLQsNGA0LjQuC48QlI+PC9ESVY+PCEtLSAvQ29tbWVudHMgLS0+PEJSPjxCUj4NCjxTQ1JJUFQg
dHlwZT10ZXh0L2phdmFzY3JpcHQ+PCEtLQpnb29nbGVfYWRfY2xpZW50ID0gInB1Yi05Nzg4MDkx
ODU4NDI1OTcyIjsKLyogNDY4eDYwLCDvv73vv73vv73vv73vv73vv73vv70gMDguMDkuMDkgKi8K
Z29vZ2xlX2FkX3Nsb3QgPSAiMDQ3Nzk3NjYxOSI7Cmdvb2dsZV9hZF93aWR0aCA9IDQ2ODsKZ29v
Z2xlX2FkX2hlaWdodCA9IDYwOwovLy0tPgo8L1NDUklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQv
amF2YXNjcmlwdCANCnNyYz0iaHR0cDovL3BhZ2VhZDIuZ29vZ2xlc3luZGljYXRpb24uY29tL3Bh
Z2VhZC9zaG93X2Fkcy5qcyI+CjwvU0NSSVBUPg0KPC9ESVY+PCEtLSAvQ29udGVudCAtLT48IS0t
IFNpZGViYXIgLS0+DQo8RElWIGlkPXNpZGViYXI+DQo8RElWIGNsYXNzPSJibG9jayBibG9ncyI+
DQo8RElWIGNsYXNzPXRsPg0KPERJViBjbGFzcz10cj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9
Y2w+DQo8RElWIGNsYXNzPWNyPg0KPEgxPtCR0LvQvtCz0Lg8L0gxPg0KPFVMIGNsYXNzPWJsb2Nr
LW5hdj4NCiAgPExJIGNsYXNzPWFjdGl2ZT48U1RST05HPjwvU1RST05HPjxBIGlkPWJsb2NrX2Js
b2dzX3RvcCANCiAgb25jbGljaz0ibHNCbG9ja0Jsb2dzLnRvZ2dsZSh0aGlzLCdibG9nc190b3An
KTsgcmV0dXJuIGZhbHNlOyIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVj
dHJvbmljcy81OTQuaHRtbCMiPtCi0L7QvzwvQT48RU0+PC9FTT48L0xJPjwvVUw+DQo8RElWIGNs
YXNzPWJsb2NrLWNvbnRlbnQ+DQo8U0NSSVBUIGxhbmd1YWdlPUphdmFTY3JpcHQgdHlwZT10ZXh0
L2phdmFzY3JpcHQ+CgkJCQkJCXZhciBsc0Jsb2NrQmxvZ3M7CgkJCQkJCXdpbmRvdy5hZGRFdmVu
dCgnZG9tcmVhZHknLCBmdW5jdGlvbigpIHsgICAgICAgCgkJCQkJCQlsc0Jsb2NrQmxvZ3M9bmV3
IGxzQmxvY2tMb2FkZXJDbGFzcygpOwoJCQkJCQl9KTsKCQkJCQkJPC9TQ1JJUFQ+DQoNCjxVTCBj
bGFzcz1saXN0Pg0KICA8TEk+DQogIDxESVYgY2xhc3M9dG90YWw+MTMuNzA8L0RJVj48QSBjbGFz
cz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvYXJkdWlu
by8iPkFyZHVpbm8t0LzQsNC90LjRjyA6KTwvQT48L0xJPg0KICA8TEk+DQogIDxESVYgY2xhc3M9
dG90YWw+MTAuMzc8L0RJVj48QSBjbGFzcz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L2Jsb2cvY29tcHV0ZXJ2aXNpb24vIj7QmtC+0LzQv9GM0Y7RgtC10YDQvdC+
0LUg0LfRgNC10L3QuNC1PC9BPjwvTEk+DQogIDxMST4NCiAgPERJViBjbGFzcz10b3RhbD44LjAz
PC9ESVY+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9ibG9nL0FSTS8iPkFSTTwvQT48L0xJPg0KICA8TEk+DQogIDxESVYgY2xhc3M9dG90YWw+NS43
MzwvRElWPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQu
cnUvYmxvZy9hbGdvcml0aG0vIj7Qn9GA0L7Qs9GA0LDQvNC80LjRgNC+0LLQsNC90LjQtTwvQT48
L0xJPg0KICA8TEk+DQogIDxESVYgY2xhc3M9dG90YWw+NS4wNTwvRElWPjxBIGNsYXNzPXN0cmVh
bS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9wcm9qZWN0cy8iPtCf
0YDQvtC10LrRgtGLINC4INC40LTQtdC4PC9BPjwvTEk+DQogIDxMST4NCiAgPERJViBjbGFzcz10
b3RhbD4yLjM3PC9ESVY+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS9ibG9nL3RlY2hub2xvZ3kvIj7QotC10YXQvdC+0LvQvtCz0LjQuDwvQT48L0xJ
Pg0KICA8TEk+DQogIDxESVYgY2xhc3M9dG90YWw+Mi4yNzwvRElWPjxBIGNsYXNzPXN0cmVhbS1h
dXRob3IgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9tZWNoYW5pY3MvIj7QnNC1
0YXQsNC90LjQutCwPC9BPjwvTEk+DQogIDxMST4NCiAgPERJViBjbGFzcz10b3RhbD4yLjI2PC9E
SVY+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9i
bG9nL2VsZWN0cm9uaWNzLyI+0K3Qu9C10LrRgtGA0L7QvdC40LrQsDwvQT48L0xJPg0KICA8TEk+
DQogIDxESVYgY2xhc3M9dG90YWw+MS41NTwvRElWPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQog
IGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9uZXdzLyI+0J3QvtCy0L7RgdGC0Lg8L0E+
PC9MST4NCiAgPExJPg0KICA8RElWIGNsYXNzPXRvdGFsPjEuMTQ8L0RJVj48QSBjbGFzcz1zdHJl
YW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvUm9ib0NyYWZ0LyI+
Um9ib0NyYWZ0LnJ1PC9BPjwvTEk+DQogIDxMST4NCiAgPERJViBjbGFzcz10b3RhbD4xLjE0PC9E
SVY+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9i
bG9nL2NvbW11bmljYXRpb24vIj7QmtC+0LzQvNGD0L3QuNC60LDRhtC40Lg8L0E+PC9MST4NCiAg
PExJPg0KICA8RElWIGNsYXNzPXRvdGFsPjEuMTM8L0RJVj48QSBjbGFzcz1zdHJlYW0tYXV0aG9y
IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvYmVhbS8iPkJFQU0g0YDQvtCx0L7R
gtGLPC9BPjwvTEk+DQogIDxMST4NCiAgPERJViBjbGFzcz10b3RhbD4wLjAwPC9ESVY+PEEgY2xh
c3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL3NlbnNv
ci8iPtCh0LXQvdGB0L7RgNGLINC4INC00LDRgtGH0LjQutC4PC9BPjwvTEk+PC9VTD48L0RJVj4N
CjxESVYgY2xhc3M9cmlnaHQ+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9ncy8iPtCS
0YHQtSANCtCx0LvQvtCz0Lg8L0E+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWJsPg0K
PERJViBjbGFzcz1icj48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9ImJsb2NrIHN0cmVh
bSI+DQo8RElWIGNsYXNzPXRsPg0KPERJViBjbGFzcz10cj48L0RJVj48L0RJVj4NCjxESVYgY2xh
c3M9Y2w+DQo8RElWIGNsYXNzPWNyPg0KPEgxPtCf0YDRj9C80L7QuSDRjdGE0LjRgDwvSDE+DQo8
VUwgY2xhc3M9YmxvY2stbmF2Pg0KICA8TEk+PFNUUk9ORz48L1NUUk9ORz48QSBpZD1ibG9ja19z
dHJlYW1fdG9waWMgDQogIG9uY2xpY2s9ImxzQmxvY2tTdHJlYW0udG9nZ2xlKHRoaXMsJ3RvcGlj
X3N0cmVhbScpOyByZXR1cm4gZmFsc2U7IiANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9i
bG9nL2VsZWN0cm9uaWNzLzU5NC5odG1sIyI+0J/Rg9Cx0LvQuNC60LDRhtC40Lg8L0E+PC9MST4N
CiAgPExJIGNsYXNzPWFjdGl2ZT48QSBpZD1ibG9ja19zdHJlYW1fY29tbWVudCANCiAgb25jbGlj
az0ibHNCbG9ja1N0cmVhbS50b2dnbGUodGhpcywnY29tbWVudF9zdHJlYW0nKTsgcmV0dXJuIGZh
bHNlOyIgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVjdHJvbmljcy81OTQu
aHRtbCMiPtCa0L7QvNC80LXQvdGC0LDRgNC40Lg8L0E+PEVNPjwvRU0+PC9MST48L1VMPg0KPERJ
ViBjbGFzcz1ibG9jay1jb250ZW50Pg0KPFNDUklQVCBsYW5ndWFnZT1KYXZhU2NyaXB0IHR5cGU9
dGV4dC9qYXZhc2NyaXB0PgoJCQkJCQl2YXIgbHNCbG9ja1N0cmVhbTsKCQkJCQkJd2luZG93LmFk
ZEV2ZW50KCdkb21yZWFkeScsIGZ1bmN0aW9uKCkgeyAKCQkJCQkJCWxzQmxvY2tTdHJlYW09bmV3
IGxzQmxvY2tMb2FkZXJDbGFzcygpOyAgICAgIAkJCQkJCQoJCQkJCQl9KTsKCQkJCQkJPC9TQ1JJ
UFQ+DQoNCjxVTCBjbGFzcz1zdHJlYW0tY29udGVudD4NCiAgPExJIGNsYXNzPWV2ZW4+PEEgY2xh
c3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL05l
bW8vIj5OZW1vPC9BPiZuYnNwO+KGkiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNv
bj48L1NQQU4+PEEgY2xhc3M9c3RyZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvYmxvZy8yODg5Lmh0bWwjY29tbWVudDM4MTUiPtCj0YHQutC+0YDRj9C10Lwg0YHQstC+
0Y4gDQogIEFyZHVpbm88L0E+IDxTUEFOPjY8L1NQQU4+INCyIDxBIGNsYXNzPXN0cmVhbS1ibG9n
IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L215L05lbW8vIj7QkdC70L7QsyDQuNC8LiBO
ZW1vPC9BPiA8L0xJPg0KICA8TEk+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0
cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL2FkbWluLyI+YWRtaW48L0E+Jm5ic3A74oaSIDxTUEFO
IA0KICBjbGFzcz1zdHJlYW0tY29tbWVudC1pY29uPjwvU1BBTj48QSBjbGFzcz1zdHJlYW0tY29t
bWVudCANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL1JvYm9DcmFmdC8yODgxLmh0
bWwjY29tbWVudDM4MDkiPtCa0L7QvdC60YPRgNGBIC0gDQogINCa0LjQsdC10YDQktC10YHQvdCw
IDIwMTM8L0E+IDxTUEFOPjI4PC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0tYmxvZyANCiAgaHJl
Zj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL1JvYm9DcmFmdC8iPlJvYm9DcmFmdC5ydTwvQT4g
PC9MST4NCiAgPExJIGNsYXNzPWV2ZW4+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS9wcm9maWxlL3NvdXJjZS8iPnNvdXJjZTwvQT4mbmJzcDvihpIg
PFNQQU4gDQogIGNsYXNzPXN0cmVhbS1jb21tZW50LWljb24+PC9TUEFOPjxBIGNsYXNzPXN0cmVh
bS1jb21tZW50IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvcHJvamVjdHMvMjg4
My5odG1sI2NvbW1lbnQzODA3Ij7QoNC+0LHQvtGA0YvQsdCwINC90LAgDQogINCx0LDQt9C1IEFy
ZHVpbm88L0E+IDxTUEFOPjE8L1NQQU4+INCyIDxBIGNsYXNzPXN0cmVhbS1ibG9nIA0KICBocmVm
PSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvcHJvamVjdHMvIj7Qn9GA0L7QtdC60YLRiyDQuCDQ
uNC00LXQuDwvQT4gPC9MST4NCiAgPExJPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9
Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9lYXN5dGVjaC8iPmVhc3l0ZWNoPC9BPiZuYnNw
O+KGkiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNvbj48L1NQQU4+PEEgY2xhc3M9
c3RyZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy8yODg1Lmh0
bWwjY29tbWVudDM4MDAiPtCg0LXQsNC70LjQt9Cw0YbQuNGPIENSQzgg0L3QsCBBVlIgDQogINC8
0LjQutGA0L7RgdGF0LXQvNC1PC9BPiA8U1BBTj4zPC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0t
YmxvZyANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9teS9lYXN5dGVjaC8iPtCR0LvQvtCz
INC40LwuIGVhc3l0ZWNoPC9BPiA8L0xJPg0KICA8TEkgY2xhc3M9ZXZlbj48QSBjbGFzcz1zdHJl
YW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvcm91dGVyMzIv
Ij5yb3V0ZXIzMjwvQT4mbmJzcDvihpIgPFNQQU4gDQogIGNsYXNzPXN0cmVhbS1jb21tZW50LWlj
b24+PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21tZW50IA0KICBocmVmPSJodHRwOi8vcm9ib2Ny
YWZ0LnJ1L2Jsb2cvcHJvamVjdHMvMjg2OC5odG1sI2NvbW1lbnQzNzkxIj7QoNC+0LHQvtGCINC0
0LvRjyANCiAg0LzQvtC90LjRgtC+0YDQuNC90LPQsCDQtNCw0YLQsC3RhtC10L3RgtGA0LA8L0E+
IDxTUEFOPjI8L1NQQU4+INCyIDxBIGNsYXNzPXN0cmVhbS1ibG9nIA0KICBocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L2Jsb2cvcHJvamVjdHMvIj7Qn9GA0L7QtdC60YLRiyDQuCDQuNC00LXQuDwv
QT4gPC9MST4NCiAgPExJPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvcHJvZmlsZS9idXJqdWkvIj5idXJqdWk8L0E+Jm5ic3A74oaSIDxTUEFOIA0K
ICBjbGFzcz1zdHJlYW0tY29tbWVudC1pY29uPjwvU1BBTj48QSBjbGFzcz1zdHJlYW0tY29tbWVu
dCANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL0FSTS83MzkuaHRtbCNjb21tZW50
Mzc4OCI+U1RNMzI6INCj0YDQvtC6IDYuMiAtIA0KICDQotCw0LnQvNC10YDRiyDQvtCx0YnQtdCz
0L4g0L3QsNC30L3QsNGH0LXQvdC40Y8g0Lgg0L/RgNC+0LTQstC40L3Rg9GC0YvQtTwvQT4gPFNQ
QU4+Mjg8L1NQQU4+INCyIDxBIA0KICBjbGFzcz1zdHJlYW0tYmxvZyBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L2Jsb2cvQVJNLyI+QVJNPC9BPiA8L0xJPg0KICA8TEkgY2xhc3M9ZXZlbj48QSBj
bGFzcz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUv
TEVWVkFSUlIvIj5MRVZWQVJSUjwvQT4mbmJzcDvihpIgPFNQQU4gDQogIGNsYXNzPXN0cmVhbS1j
b21tZW50LWljb24+PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21tZW50IA0KICBocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNTg3Lmh0bWwjY29tbWVudDM3ODYiPkJs
dWV0b290aC3QvNC+0LTRg9C70YwgDQogIEhDLTA1PC9BPiA8U1BBTj45MjwvU1BBTj4g0LIgPEEg
Y2xhc3M9c3RyZWFtLWJsb2cgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9lbGVj
dHJvbmljcy8iPtCt0LvQtdC60YLRgNC+0L3QuNC60LA8L0E+IDwvTEk+DQogIDxMST48QSBjbGFz
cz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvZWFz
eXRlY2gvIj5lYXN5dGVjaDwvQT4mbmJzcDvihpIgPFNQQU4gDQogIGNsYXNzPXN0cmVhbS1jb21t
ZW50LWljb24+PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21tZW50IA0KICBocmVmPSJodHRwOi8v
cm9ib2NyYWZ0LnJ1L2Jsb2cvZWxlY3Ryb25pY3MvNjYwLmh0bWwjY29tbWVudDM3NzMiPtCi0LXQ
v9C10YDRjCDQutC70LXRiNC90Y8gDQogINC4INC/0L4gQmx1ZXRvb3RoPC9BPiA8U1BBTj4xODwv
U1BBTj4g0LIgPEEgY2xhc3M9c3RyZWFtLWJsb2cgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQu
cnUvYmxvZy9lbGVjdHJvbmljcy8iPtCt0LvQtdC60YLRgNC+0L3QuNC60LA8L0E+IDwvTEk+DQog
IDxMSSBjbGFzcz1ldmVuPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvcHJvZmlsZS9BdGFiZWsvIj5BdGFiZWs8L0E+Jm5ic3A74oaSIDxTUEFOIA0K
ICBjbGFzcz1zdHJlYW0tY29tbWVudC1pY29uPjwvU1BBTj48QSBjbGFzcz1zdHJlYW0tY29tbWVu
dCANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL2FyZHVpbm8vNTAuaHRtbCNjb21t
ZW50Mzc3MCI+0J/RgNC+0YjQuNCy0LrQsCANCiAg0LHRg9GC0LvQvtCw0LTQtdGA0LA8L0E+IDxT
UEFOPjY5PC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0tYmxvZyANCiAgaHJlZj0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS9ibG9nL2FyZHVpbm8vIj5BcmR1aW5vLdC80LDQvdC40Y8gOik8L0E+IDwvTEk+
DQogIDxMST48QSBjbGFzcz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L3Byb2ZpbGUvd293YS8iPndvd2E8L0E+Jm5ic3A74oaSIDxTUEFOIA0KICBjbGFzcz1zdHJl
YW0tY29tbWVudC1pY29uPjwvU1BBTj48QSBjbGFzcz1zdHJlYW0tY29tbWVudCANCiAgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL3JvYm9zb2Z0LzI4NzkuaHRtbCNjb21tZW50Mzc2NCI+
0J7QsdC70LDRh9C90YvQtSANCiAg0YLQtdGF0L3QvtC70L7Qs9C40Lgg0LTQu9GPINGA0L7QsdC+
0YLQvtCyIC0gUmFweXV0YTwvQT4gPFNQQU4+NjwvU1BBTj4g0LIgPEEgY2xhc3M9c3RyZWFtLWJs
b2cgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9yb2Jvc29mdC8iPtCg0L7QsdC+
0YHQvtGE0YI8L0E+IDwvTEk+DQogIDxMSSBjbGFzcz1ldmVuPjxBIGNsYXNzPXN0cmVhbS1hdXRo
b3IgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9CYXNpQy8iPkJhc2lDPC9B
PiZuYnNwO+KGkiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNvbj48L1NQQU4+PEEg
Y2xhc3M9c3RyZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9S
b2JvQ3JhZnQvMjg3Mi5odG1sI2NvbW1lbnQzNzU4Ij7QnNC40LrRgNC+LdC+0YLRh9GR0YIg0L4g
DQogINC/0L7Qv9GD0LvRj9GA0LjQt9Cw0YLQvtGA0YHQutC+0Lkg0LTQtdGP0YLQtdC70YzQvdC+
0YHRgtC4PC9BPiA8U1BBTj40PC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0tYmxvZyANCiAgaHJl
Zj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL1JvYm9DcmFmdC8iPlJvYm9DcmFmdC5ydTwvQT4g
PC9MST4NCiAgPExJPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvcHJvZmlsZS9Sb2JvWmVrYS8iPlJvYm9aZWthPC9BPiZuYnNwO+KGkiA8U1BBTiAN
CiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNvbj48L1NQQU4+PEEgY2xhc3M9c3RyZWFtLWNvbW1l
bnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9hcmR1aW5vLzI4NzMuaHRtbCNj
b21tZW50Mzc1NyI+0JrQnNCRINC00LvRjyANCiAg0L3QsNGH0LjQvdCw0Y7RidC40YUg0LDRgNC0
0YPQuNC90YnQuNC60L7QsjwvQT4gPFNQQU4+MjwvU1BBTj4g0LIgPEEgY2xhc3M9c3RyZWFtLWJs
b2cgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9hcmR1aW5vLyI+QXJkdWluby3Q
vNCw0L3QuNGPIDopPC9BPiA8L0xJPg0KICA8TEkgY2xhc3M9ZXZlbj48QSBjbGFzcz1zdHJlYW0t
YXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2ZpbGUvUm9ib1pla2EvIj5S
b2JvWmVrYTwvQT4mbmJzcDvihpIgPFNQQU4gDQogIGNsYXNzPXN0cmVhbS1jb21tZW50LWljb24+
PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21tZW50IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L2Jsb2cvMjg2NC5odG1sI2NvbW1lbnQzNzU2Ij7QndGD0LbQvdCwINC70Lgg0L7RgtC60YDR
i9GC0LDRjyANCiAg0L/Qu9Cw0YLRhNC+0YDQvNCwINC00LvRjyDRgNC+0LHQvtGC0L7Qsj88L0E+
IDxTUEFOPjE1PC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0tYmxvZyANCiAgaHJlZj0iaHR0cDov
L3JvYm9jcmFmdC5ydS9teS9ub29udi8iPtCR0LvQvtCzINC40LwuIG5vb252PC9BPiA8L0xJPg0K
ICA8TEk+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9wcm9maWxlL1pvbHRiZXJnLyI+Wm9sdGJlcmc8L0E+Jm5ic3A74oaSIDxTUEFOIA0KICBjbGFz
cz1zdHJlYW0tY29tbWVudC1pY29uPjwvU1BBTj48QSBjbGFzcz1zdHJlYW0tY29tbWVudCANCiAg
aHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9ibG9nL25ld3MvMjg3OC5odG1sI2NvbW1lbnQzNzUz
Ij5IYWNrRGF5ICMyNCDQsiANCiAg0JrQsNC70LjQvdC40L3Qs9GA0LDQtNC1PC9BPiA8U1BBTj4y
PC9TUEFOPiDQsiA8QSBjbGFzcz1zdHJlYW0tYmxvZyANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS9ibG9nL25ld3MvIj7QndC+0LLQvtGB0YLQuDwvQT4gPC9MST4NCiAgPExJIGNsYXNzPWV2
ZW4+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS9w
cm9maWxlL0V4dHJhbmVvdXMvIj5FeHRyYW5lb3VzPC9BPiZuYnNwO+KGkiA8U1BBTiANCiAgY2xh
c3M9c3RyZWFtLWNvbW1lbnQtaWNvbj48L1NQQU4+PEEgY2xhc3M9c3RyZWFtLWNvbW1lbnQgDQog
IGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9hcmR1aW5vLzUwMy5odG1sI2NvbW1lbnQz
NzQ5Ij7Qn9C+0LTQutC70Y7Rh9Cw0LXQvCANCiAgTENELdC00LjRgdC/0LvQtdC5INC90LAg0LHQ
sNC30LUgSEQ0NDc4MCDQuiBBcmR1aW5vPC9BPiA8U1BBTj43MjwvU1BBTj4g0LIgPEEgDQogIGNs
YXNzPXN0cmVhbS1ibG9nIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy9hcmR1aW5vLyI+
QXJkdWluby3QvNCw0L3QuNGPIA0KICA6KTwvQT4gPC9MST4NCiAgPExJPjxBIGNsYXNzPXN0cmVh
bS1hdXRob3IgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9za3lzdG9ybS8i
PnNreXN0b3JtPC9BPiZuYnNwO+KGkiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNv
bj48L1NQQU4+PEEgY2xhc3M9c3RyZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvYmxvZy9uZXdzLzI4NzcuaHRtbCNjb21tZW50Mzc0NyI+0JIg0J/QtdGC0LXRgNCx0YPR
gNCz0LUgDQogINGB0L7RgdGC0L7QuNGC0YHRjyDQutGA0YPQv9C90LXQudGI0LjQuSDRhNC+0YDR
g9C8INC00LvRjyBJVC3RgdC/0LXRhtC40LDQu9C40YHRgtC+0LIgwqvQndCw0LnRgtC4IElUwrs8
L0E+IDxTUEFOPjE8L1NQQU4+INCyIA0KICA8QSBjbGFzcz1zdHJlYW0tYmxvZyBocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvbmV3cy8iPtCd0L7QstC+0YHRgtC4PC9BPiA8L0xJPg0KICA8
TEkgY2xhc3M9ZXZlbj48QSBjbGFzcz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3Byb2ZpbGUvdmVsb2Ryb24vIj52ZWxvZHJvbjwvQT4mbmJzcDvihpIgPFNQQU4g
DQogIGNsYXNzPXN0cmVhbS1jb21tZW50LWljb24+PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21t
ZW50IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvY29tcHV0ZXJ2aXNpb24vNDM1
Lmh0bWwjY29tbWVudDM3NDYiPk9wZW5DViDRiNCw0LMgDQogINC30LAg0YjQsNCz0L7QvC4g0KPR
gdGC0LDQvdC+0LLQutCwIE9wZW5DViDQv9C+0LQgT0MgTGludXg8L0E+IDxTUEFOPjk8L1NQQU4+
INCyIDxBIA0KICBjbGFzcz1zdHJlYW0tYmxvZyBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Js
b2cvY29tcHV0ZXJ2aXNpb24vIj7QmtC+0LzQv9GM0Y7RgtC10YDQvdC+0LUgDQogINC30YDQtdC9
0LjQtTwvQT4gPC9MST4NCiAgPExJPjxBIGNsYXNzPXN0cmVhbS1hdXRob3IgDQogIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvcHJvZmlsZS9reXB1SklrYS8iPmt5cHVKSWthPC9BPiZuYnNwO+KG
kiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNvbW1lbnQtaWNvbj48L1NQQU4+PEEgY2xhc3M9c3Ry
ZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvYmxvZy80NTQuaHRtbCNj
b21tZW50Mzc0MSI+0KfQsNGB0Yst0L3QvtGH0L3QuNC6INC90LAgRFMxMzA3PC9BPiANCiAgPFNQ
QU4+NTwvU1BBTj4g0LIgPEEgY2xhc3M9c3RyZWFtLWJsb2cgDQogIGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvbXkvbW9nYWxrb3YvIj7QkdC70L7QsyDQuNC8LiBtb2dhbGtvdjwvQT4gPC9MST4N
CiAgPExJIGNsYXNzPWV2ZW4+PEEgY2xhc3M9c3RyZWFtLWF1dGhvciANCiAgaHJlZj0iaHR0cDov
L3JvYm9jcmFmdC5ydS9wcm9maWxlL3Rwb3Zpbi8iPnRwb3ZpbjwvQT4mbmJzcDvihpIgPFNQQU4g
DQogIGNsYXNzPXN0cmVhbS1jb21tZW50LWljb24+PC9TUEFOPjxBIGNsYXNzPXN0cmVhbS1jb21t
ZW50IA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L2Jsb2cvOTgxLmh0bWwjY29tbWVudDM3
NDAiPtCS0YvRgtC10YHQvdGP0Y7RidCw0Y8gDQogINC80L3QvtCz0L7Qt9Cw0LTQsNGH0L3QvtGB
0YLRjCDQtNC70Y8gQXJkdWlubywg0YLQvtC8INCy0YLQvtGA0L7QuTwvQT4gPFNQQU4+MjM8L1NQ
QU4+INCyIDxBIA0KICBjbGFzcz1zdHJlYW0tYmxvZyBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1
L215L01pcm1pay8iPtCR0LvQvtCzINC40LwuIE1pcm1pazwvQT4gDQogIDwvTEk+DQogIDxMST48
QSBjbGFzcz1zdHJlYW0tYXV0aG9yIA0KICBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Byb2Zp
bGUvU2hpaGFkLyI+U2hpaGFkPC9BPiZuYnNwO+KGkiA8U1BBTiANCiAgY2xhc3M9c3RyZWFtLWNv
bW1lbnQtaWNvbj48L1NQQU4+PEEgY2xhc3M9c3RyZWFtLWNvbW1lbnQgDQogIGhyZWY9Imh0dHA6
Ly9yb2JvY3JhZnQucnUvYmxvZy8yODY3Lmh0bWwjY29tbWVudDM3MzIiPtCk0JDQkdCb0JDQkTwv
QT4gDQogIDxTUEFOPjE8L1NQQU4+INCyIDxBIGNsYXNzPXN0cmVhbS1ibG9nIA0KICBocmVmPSJo
dHRwOi8vcm9ib2NyYWZ0LnJ1L215L1psb0FsaWVuLyI+0JHQu9C+0LMg0LjQvC4gWmxvQWxpZW48
L0E+IDwvTEk+PC9VTD48L0RJVj4NCjxESVYgY2xhc3M9cmlnaHQ+PEEgaHJlZj0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS9jb21tZW50cy8iPtCS0LXRgdGMINGN0YTQuNGAPC9BPiB8IDxBIA0KaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS9yc3MvYWxsY29tbWVudHMvIj5SU1M8L0E+PC9ESVY+PC9ESVY+
PC9ESVY+DQo8RElWIGNsYXNzPWJsPg0KPERJViBjbGFzcz1icj48L0RJVj48L0RJVj48L0RJVj4N
CjxESVYgY2xhc3M9ImJsb2NrIHRhZ3MiPg0KPERJViBjbGFzcz10bD4NCjxESVYgY2xhc3M9dHI+
PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWNsPg0KPERJViBjbGFzcz1jcj4NCjxVTCBjbGFzcz1j
bG91ZD4NCiAgPExJPjxBIGNsYXNzPXczIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnLzEt
RXR5cGUvIiANCiAgcmVsPXRhZz4xLUV0eXBlPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MiBo
cmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy8zRC8iIHJlbD10YWc+M0Q8L0E+PC9MST4NCiAg
PExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnLzNELdC/0LXRh9Cw
0YLRjC8iIA0KICByZWw9dGFnPjNELdC/0LXRh9Cw0YLRjDwvQT48L0xJPg0KICA8TEk+PEEgY2xh
c3M9dzEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcvQURTTC3RgNC+0YPRgtC10YAvIiAN
CiAgcmVsPXRhZz5BRFNMLdGA0L7Rg9GC0LXRgDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEg
aHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcvQUkvIiByZWw9dGFnPkFJPC9BPjwvTEk+DQog
IDxMST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9hbmRyb2lkLyIg
DQogIHJlbD10YWc+YW5kcm9pZDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEwIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvdGFnL2FyZHVpbm8vIiANCiAgcmVsPXRhZz5hcmR1aW5vPC9BPjwv
TEk+DQogIDxMST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9BUk0v
IiByZWw9dGFnPkFSTTwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS90YWcvQVZSLyIgcmVsPXRhZz5BVlI8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNz
PXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL2JsaW5rLyIgcmVsPXRhZz5ibGluazwv
QT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv
Q09NLdC/0L7RgNGCLyIgDQogIHJlbD10YWc+Q09NLdC/0L7RgNGCPC9BPjwvTEk+DQogIDxMST48
QSBjbGFzcz13MyBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9DcmFmdER1aW5vLyIgDQog
IHJlbD10YWc+Q3JhZnREdWlubzwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0
cDovL3JvYm9jcmFmdC5ydS90YWcvZW1iZWRkZWQvIiANCiAgcmVsPXRhZz5lbWJlZGRlZDwvQT48
L0xJPg0KICA8TEk+PEEgY2xhc3M9dzMgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcvSURF
LyIgcmVsPXRhZz5JREU8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXczIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvdGFnL2lSb2JvdC8iIHJlbD10YWc+aVJvYm90PC9BPjwvTEk+DQogIDxMST48
QSBjbGFzcz13NCBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9LaW5lY3QvIiByZWw9dGFn
PktpbmVjdDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3JvYm9jcmFm
dC5ydS90YWcvbGNkLyIgcmVsPXRhZz5sY2Q8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcyIGhy
ZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL0xFR08vIiByZWw9dGFnPkxFR088L0E+PC9MST4N
CiAgPExJPjxBIGNsYXNzPXczIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL0xpbnV4LyIg
cmVsPXRhZz5MaW51eDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3Jv
Ym9jcmFmdC5ydS90YWcvT3BlbiUyMFNvdXJjZS8iIHJlbD10YWc+T3BlbiANCiAgU291cmNlPC9B
PjwvTEk+DQogIDxMST48QSBjbGFzcz13NiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9P
cGVuQ1YvIiByZWw9dGFnPk9wZW5DVjwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS90YWcvUFIyLyIgcmVsPXRhZz5QUjI8L0E+PC9MST4NCiAgPExJ
PjxBIGNsYXNzPXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL1Byb2Nlc3NpbmcvIiAN
CiAgcmVsPXRhZz5Qcm9jZXNzaW5nPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MiBocmVmPSJo
dHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9weXRob24vIiByZWw9dGFnPnB5dGhvbjwvQT48L0xJPg0K
ICA8TEk+PEEgY2xhc3M9dzMgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcvUmFzcGJlcnJ5
JTIwUGkvIiANCiAgcmVsPXRhZz5SYXNwYmVycnkgUGk8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNz
PXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL1JvYm9DcmFmdC8iIA0KICByZWw9dGFn
PlJvYm9DcmFmdDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0cDovL3JvYm9j
cmFmdC5ydS90YWcvUm9vbWJhLyIgcmVsPXRhZz5Sb29tYmE8L0E+PC9MST4NCiAgPExJPjxBIGNs
YXNzPXc2IGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL1JPUy8iIHJlbD10YWc+Uk9TPC9B
PjwvTEk+DQogIDxMST48QSBjbGFzcz13MSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy9T
VE0zMi8iIHJlbD10YWc+U1RNMzI8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvdGFnL1R1cnRsZUJvdC8iIA0KICByZWw9dGFnPlR1cnRsZUJvdDwv
QT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzMgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv
VXJiaS8iIHJlbD10YWc+VXJiaTwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0
cDovL3JvYm9jcmFmdC5ydS90YWcvd2ViLdC60LDQvNC10YDQsC8iIA0KICByZWw9dGFnPndlYi3Q
utCw0LzQtdGA0LA8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvdGFnL9Cw0LLRgtC+0LzQsNGC0LjQt9Cw0YbQuNGPLyIgDQogIHJlbD10YWc+0LDQ
stGC0L7QvNCw0YLQuNC30LDRhtC40Y88L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXczIGhyZWY9
Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9Cw0L3QtNGA0L7QuNC0LyIgDQogIHJlbD10YWc+0LDQ
vdC00YDQvtC40LQ8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcyIGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvdGFnL9Cx0LDQu9Cw0L3RgdC40YDQvtCy0LDRgtGMLyIgDQogIHJlbD10YWc+0LHQ
sNC70LDQvdGB0LjRgNC+0LLQsNGC0Yw8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcyIGhyZWY9
Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9Cx0LjQsdC70LjQvtGC0LXQutCwLyIgDQogIHJlbD10
YWc+0LHQuNCx0LvQuNC+0YLQtdC60LA8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9
Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9Cx0LjQvtC90LjQutCwLyIgDQogIHJlbD10YWc+0LHQ
uNC+0L3QuNC60LA8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXc0IGhyZWY9Imh0dHA6Ly9yb2Jv
Y3JhZnQucnUvdGFnL9Cy0LXRgNGB0LjRjy8iIHJlbD10YWc+0LLQtdGA0YHQuNGPPC9BPjwvTEk+
DQogIDxMST48QSBjbGFzcz13NSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/QstC40LTQ
tdC+LyIgcmVsPXRhZz7QstC40LTQtdC+PC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13NCBocmVm
PSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/QstC+0LXQvdC90YvQuS8iIA0KICByZWw9dGFnPtCy
0L7QtdC90L3Ri9C5PC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MSBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3RhZy/QstC+0L/RgNC+0YEvIiByZWw9dGFnPtCy0L7Qv9GA0L7RgTwvQT48L0xJ
Pg0KICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0LTQsNC7
0YzQvdC+0LzQtdGALyIgDQogIHJlbD10YWc+0LTQsNC70YzQvdC+0LzQtdGAPC9BPjwvTEk+DQog
IDxMST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/QtNCw0YLRh9C4
0LovIiByZWw9dGFnPtC00LDRgtGH0LjQujwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJl
Zj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0JjQmi8iIHJlbD10YWc+0JjQmjwvQT48L0xJPg0K
ICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0LjQvdGC0LXR
gNC90LXRgi8iIA0KICByZWw9dGFnPtC40L3RgtC10YDQvdC10YI8L0E+PC9MST4NCiAgPExJPjxB
IGNsYXNzPXcxIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9C40YHRgdC70LXQtNC+0LLQ
sNC90LjQtS8iIA0KICByZWw9dGFnPtC40YHRgdC70LXQtNC+0LLQsNC90LjQtTwvQT48L0xJPg0K
ICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0LrQsNC80LXR
gNCwLyIgcmVsPXRhZz7QutCw0LzQtdGA0LA8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXc0IGhy
ZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9C60LjQsdC10YDQstC10YHQvdCwLyIgDQogIHJl
bD10YWc+0LrQuNCx0LXRgNCy0LXRgdC90LA8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcyIGhy
ZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9C60L7QvdC60YPRgNGBLyIgDQogIHJlbD10YWc+
0LrQvtC90LrRg9GA0YE8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXczIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvdGFnL9C80LDQvdC40L/Rg9C70Y/RgtC+0YAvIiANCiAgcmVsPXRhZz7QvNCw
0L3QuNC/0YPQu9GP0YLQvtGAPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MSBocmVmPSJodHRw
Oi8vcm9ib2NyYWZ0LnJ1L3RhZy/QvNC40LrRgNC+0LrQvtC90YLRgNC+0LvQu9C10YDRiy8iIA0K
ICByZWw9dGFnPtC80LjQutGA0L7QutC+0L3RgtGA0L7Qu9C70LXRgNGLPC9BPjwvTEk+DQogIDxM
ST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/QvdCw0YfQuNC90LDR
jtGJ0LjQvC8iIA0KICByZWw9dGFnPtC90LDRh9C40L3QsNGO0YnQuNC8PC9BPjwvTEk+DQogIDxM
ST48QSBjbGFzcz13MSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/QndC+0LLRi9C5JTIw
0JPQvtC0LyIgcmVsPXRhZz7QndC+0LLRi9C5IA0KICDQk9C+0LQ8L0E+PC9MST4NCiAgPExJPjxB
IGNsYXNzPXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9Cf0JrQmy8iIHJlbD10YWc+
0J/QmtCbPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0
LnJ1L3RhZy/Qv9C+0LTQstC+0LTQvdGL0LkvIiANCiAgcmVsPXRhZz7Qv9C+0LTQstC+0LTQvdGL
0Lk8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUv
dGFnL9C/0YvQu9C10YHQvtGBLyIgDQogIHJlbD10YWc+0L/Ri9C70LXRgdC+0YE8L0E+PC9MST4N
CiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9GA0LDQtNC4
0L7Rg9C/0YDQsNCy0LvQtdC90LjQtS8iIA0KICByZWw9dGFnPtGA0LDQtNC40L7Rg9C/0YDQsNCy
0LvQtdC90LjQtTwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzEgaHJlZj0iaHR0cDovL3JvYm9j
cmFmdC5ydS90YWcv0YDQsNGB0L/QvtC30L3QsNCy0LDQvdC40LUvIiANCiAgcmVsPXRhZz7RgNCw
0YHQv9C+0LfQvdCw0LLQsNC90LjQtTwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzkgaHJlZj0i
aHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0YDQvtCx0L7Rgi8iIHJlbD10YWc+0YDQvtCx0L7Rgjwv
QT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzIgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv
0YDQvtCx0L7RgtC+0YLQtdGF0L3QuNC60LAvIiANCiAgcmVsPXRhZz7RgNC+0LHQvtGC0L7RgtC1
0YXQvdC40LrQsDwvQT48L0xJPg0KICA8TEk+PEEgY2xhc3M9dzMgaHJlZj0iaHR0cDovL3JvYm9j
cmFmdC5ydS90YWcv0YDQvtCx0L7RgtGLLyIgcmVsPXRhZz7RgNC+0LHQvtGC0Ys8L0E+PC9MST4N
CiAgPExJPjxBIGNsYXNzPXczIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9GB0LLQtdGC
0L7QtNC40L7QtC8iIA0KICByZWw9dGFnPtGB0LLQtdGC0L7QtNC40L7QtDwvQT48L0xJPg0KICA8
TEk+PEEgY2xhc3M9dzYgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS90YWcv0YHQtdGA0LLQvtC8
0LDRiNC40L3QutCwLyIgDQogIHJlbD10YWc+0YHQtdGA0LLQvtC80LDRiNC40L3QutCwPC9BPjwv
TEk+DQogIDxMST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/RgdC6
0LDRh9Cw0YLRjC8iIA0KICByZWw9dGFnPtGB0LrQsNGH0LDRgtGMPC9BPjwvTEk+DQogIDxMST48
QSBjbGFzcz13MSBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3RhZy/Qo9CXLyIgcmVsPXRhZz7Q
o9CXPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13NCBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1
L3RhZy/Rg9C/0YDQsNCy0LvQtdC90LjQtS8iIA0KICByZWw9dGFnPtGD0L/RgNCw0LLQu9C10L3Q
uNC1PC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13MiBocmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1
L3RhZy/Rg9GA0L7Qui8iIHJlbD10YWc+0YPRgNC+0Lo8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNz
PXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9GF0L7QtNC40YLRjC8iIHJlbD10YWc+
0YXQvtC00LjRgtGMPC9BPjwvTEk+DQogIDxMST48QSBjbGFzcz13NSBocmVmPSJodHRwOi8vcm9i
b2NyYWZ0LnJ1L3RhZy/RiNCw0LMlMjDQt9CwJTIw0YjQsNCz0L7QvC8iIHJlbD10YWc+0YjQsNCz
IA0KICDQt9CwINGI0LDQs9C+0Lw8L0E+PC9MST4NCiAgPExJPjxBIGNsYXNzPXcxIGhyZWY9Imh0
dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9GI0LDRgdGB0LgvIiByZWw9dGFnPtGI0LDRgdGB0Lg8L0E+
PC9MST4NCiAgPExJPjxBIGNsYXNzPXcyIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvdGFnL9GI
0LjQu9C0LyIgDQpyZWw9dGFnPtGI0LjQu9C0PC9BPjwvTEk+PC9VTD48L0RJVj48L0RJVj4NCjxE
SVYgY2xhc3M9Ymw+DQo8RElWIGNsYXNzPWJyPjwvRElWPjwvRElWPjwvRElWPjwvRElWPjwhLS0g
L1NpZGViYXIgLS0+PC9ESVY+PCEtLSBGb290ZXIgLS0+DQo8RElWIGlkPWZvb3Rlcj4NCjxTVFlM
RSB0eXBlPXRleHQvY3NzPi5hZHZfbGluayB7DQoJQ09MT1I6ICNkZGQ7IEZPTlQtU0laRTogMTJw
eA0KfQ0KLmFkdl9saW5rIEEgew0KCUNPTE9SOiAjZGRkOyBGT05ULVNJWkU6IDEycHgNCn0NCjwv
U1RZTEU+DQoNCjxESVYgY2xhc3M9YWR2X2xpbms+PEEgaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5y
dS9zaG9wIj48Qj7QmtGD0L/QuNGC0YwgQXJkdWlubzwvQj4gDQrQvNC+0LbQvdC+INCyINC90LDR
iNC10Lwg0LzQsNCz0LDQt9C40L3QtTwvQT4uINCi0LDQvCDQttC1INC80L7QttC90L4gPEEgDQpo
cmVmPSJodHRwOi8vcm9ib2NyYWZ0LnJ1L3Nob3AvaW5kZXgucGhwP3JvdXRlPXByb2R1Y3QvY2F0
ZWdvcnkmYW1wO3BhdGg9MThfMzUiPjxCPtC60YPQv9C40YLRjCANCtGB0LXRgNCy0L7QvNCw0YjQ
uNC90LrQuDwvQj48L0E+LCDQsCDRgtCw0Log0LbQtSA8QSANCmhyZWY9Imh0dHA6Ly9yb2JvY3Jh
ZnQucnUvc2hvcC9pbmRleC5waHA/cm91dGU9cHJvZHVjdC9jYXRlZ29yeSZhbXA7cGF0aD00N18y
NyI+0LrRg9C/0LjRgtGMIA0K0YjQuNC70LTRiyDQtNC70Y8g0LDRgNC00YPQuNC90L48L0E+LCA8
QSANCmhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucnUvc2hvcC9pbmRleC5waHA/cm91dGU9cHJvZHVj
dC9jYXRlZ29yeSZhbXA7cGF0aD0yOSI+0L3QsNCx0L7RgNGLIA0K0LTQu9GPINCx0YvRgdGC0YDQ
vtCz0L4g0YHRgtCw0YDRgtCwINC4INCx0YvRgdGC0YDQvtCz0L4g0L/RgNC+0YLQvtGC0LjQv9C4
0YDQvtCy0LDQvdC40Y88L0E+ISA8L0RJVj48Tk9JTkRFWD4NCjxESVYgc3R5bGU9IkZMT0FUOiBs
ZWZ0Ij7CqSDQodCw0LnRgiDRgNCw0LHQvtGC0LDQtdGCINC90LAgPEEgDQp0aXRsZT0i0JHQtdGB
0L/Qu9Cw0YLQvdGL0Lkg0LTQstC40LbQvtC6INGB0L7RhtC40LDQu9GM0L3QvtC5INGB0LXRgtC4
IExpdmVTdHJlZXQiIA0KaHJlZj0iaHR0cDovL2xpdmVzdHJlZXQucnUvIj5MaXZlU3RyZWV0PC9B
Pi4gJm5ic3A7ICZuYnNwOyDQnNCw0YLQtdGA0LjQsNC70Ysg0YHQsNC50YLQsCANCtGP0LLQu9GP
0Y7RgtGB0Y8g0LDQstGC0L7RgNGB0LrQuNC80LguINCa0L7Qv9C40YDQvtCy0LDQvdC40LUg0Lgg
0L/Rg9Cx0LvQuNC60LDRhtC40Y8g0LzQsNGC0LXRgNC40LDQu9C+0LIg0LHQtdC3INGA0LDQt9GA
0LXRiNC10L3QuNGPIA0K0LfQsNC/0YDQtdGJ0LXQvdGLISAmbmJzcDsgPC9ESVY+DQo8RElWIHN0
eWxlPSJGTE9BVDogcmlnaHQiPsKpIDIwMDktMjAxMyZuYnNwO3wmbmJzcDsNCjxTQ1JJUFQgdHlw
ZT10ZXh0L2phdmFzY3JpcHQ+PCEtLQpyZWZvcm1hbF93ZGdfZG9tYWluICAgID0gInJvYm9jcmFm
dCI7CnJlZm9ybWFsX3dkZ19tb2RlICAgID0gMDsKcmVmb3JtYWxfd2RnX3RpdGxlICAgPSAiUm9i
b0NyYWZ0IjsKcmVmb3JtYWxfd2RnX2x0aXRsZSAgPSAiIjsKcmVmb3JtYWxfd2RnX2xmb250ICAg
PSAiIjsKcmVmb3JtYWxfd2RnX2xzaXplICAgPSAiIjsKcmVmb3JtYWxfd2RnX2NvbG9yICAgPSAi
I0ZGQTAwMCI7CnJlZm9ybWFsX3dkZ19iY29sb3IgID0gIiM1MTY2ODMiOwpyZWZvcm1hbF93ZGdf
dGNvbG9yICA9ICIjRkZGRkZGIjsKcmVmb3JtYWxfd2RnX2FsaWduICAgPSAibGVmdCI7CnJlZm9y
bWFsX3dkZ19jaGFyc2V0ID0gInV0Zi04IjsKcmVmb3JtYWxfd2RnX3dhY3Rpb24gPSAwOwpyZWZv
cm1hbF93ZGdfdmNvbG9yICA9ICIjOUZDRTU0IjsKcmVmb3JtYWxfd2RnX2NtbGluZSAgPSAiI0Uw
RTBFMCI7CnJlZm9ybWFsX3dkZ19nbGNvbG9yICA9ICIjMTA1ODk1IjsKcmVmb3JtYWxfd2RnX3Ri
Y29sb3IgID0gIiNGRkZGRkYiOwogCnJlZm9ybWFsX3dkZ19iaW1hZ2UgPSAiaHR0cDovL3JlZm9y
bWFsLnJ1L2ZpbGVzL2ltYWdlcy9idXR0b25zLzc2ODhmNTY4NWY3NzAxZTk3ZGFhNTQ5N2QzZDlj
NzQ1LnBuZyI7CiAvLy0tPgo8L1NDUklQVD4NCg0KPFNDUklQVCBsYW5ndWFnZT1KYXZhU2NyaXB0
IHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vcmVmb3JtYWwucnUvdGFiNi5qcyI+
PC9TQ1JJUFQ+DQogPE5PU0NSSVBUPjxBIGhyZWY9Imh0dHA6Ly9yb2JvY3JhZnQucmVmb3JtYWwu
cnUvIj5Sb2JvQ3JhZnQgZmVlZGJhY2sgPC9BPjxBIA0KaHJlZj0iaHR0cDovL3JlZm9ybWFsLnJ1
LyI+PElNRyANCnNyYz0iaHR0cDovL3JlZm9ybWFsLnJ1L2kvbG9nby5naWYiPjwvQT48L05PU0NS
SVBUPiA8IS0tUmF0aW5nQE1haWwucnUgY291bnRlci0tPg0KPFNDUklQVCBsYW5ndWFnZT1qYXZh
c2NyaXB0IHR5cGU9dGV4dC9qYXZhc2NyaXB0PjwhLS0KZD1kb2N1bWVudDt2YXIgYT0nJzthKz0n
O3I9Jytlc2NhcGUoZC5yZWZlcnJlcik7anM9MTA7Ly8tLT48L1NDUklQVD4NCg0KPFNDUklQVCBs
YW5ndWFnZT1qYXZhc2NyaXB0MS4xIHR5cGU9dGV4dC9qYXZhc2NyaXB0PjwhLS0KYSs9JztqPScr
bmF2aWdhdG9yLmphdmFFbmFibGVkKCk7anM9MTE7Ly8tLT48L1NDUklQVD4NCg0KPFNDUklQVCBs
YW5ndWFnZT1qYXZhc2NyaXB0MS4yIHR5cGU9dGV4dC9qYXZhc2NyaXB0PjwhLS0Kcz1zY3JlZW47
YSs9JztzPScrcy53aWR0aCsnKicrcy5oZWlnaHQ7CmErPSc7ZD0nKyhzLmNvbG9yRGVwdGg/cy5j
b2xvckRlcHRoOnMucGl4ZWxEZXB0aCk7anM9MTI7Ly8tLT48L1NDUklQVD4NCg0KPFNDUklQVCBs
YW5ndWFnZT1qYXZhc2NyaXB0MS4zIHR5cGU9dGV4dC9qYXZhc2NyaXB0PjwhLS0KanM9MTM7Ly8t
LT48L1NDUklQVD4NCg0KPFNDUklQVCBsYW5ndWFnZT1qYXZhc2NyaXB0IHR5cGU9dGV4dC9qYXZh
c2NyaXB0PjwhLS0KZC53cml0ZSgnPGEgaHJlZj0iaHR0cDovL3RvcC5tYWlsLnJ1L2p1bXA/ZnJv
bT0xNjU2NjE1IiB0YXJnZXQ9Il90b3AiPicrCic8aW1nIHNyYz0iaHR0cDovL2Q3LmM0LmI5LmEx
LnRvcC5tYWlsLnJ1L2NvdW50ZXI/aWQ9MTY1NjYxNTt0PTk0O2pzPScranMrCmErJztyYW5kPScr
TWF0aC5yYW5kb20oKSsnIiBhbHQ9ItCg0LXQudGC0LjQvdCzQE1haWwucnUiIGJvcmRlcj0iMCIg
JysKJ2hlaWdodD0iMTgiIHdpZHRoPSI4OCI+PFwvYT4nKTtpZigxMTxqcylkLndyaXRlKCc8Jysn
IS0tICcpOy8vLS0+PC9TQ1JJUFQ+DQo8Tk9TQ1JJUFQ+PEEgaHJlZj0iaHR0cDovL3RvcC5tYWls
LnJ1L2p1bXA/ZnJvbT0xNjU2NjE1IiB0YXJnZXQ9X3RvcD48SU1HIA0KYm9yZGVyPTAgYWx0PdCg
0LXQudGC0LjQvdCzQE1haWwucnUgDQpzcmM9Imh0dHA6Ly9kNy5jNC5iOS5hMS50b3AubWFpbC5y
dS9jb3VudGVyP2pzPW5hO2lkPTE2NTY2MTU7dD05NCIgd2lkdGg9ODggDQpoZWlnaHQ9MTg+PC9B
PjwvTk9TQ1JJUFQ+DQo8U0NSSVBUIGxhbmd1YWdlPWphdmFzY3JpcHQgdHlwZT10ZXh0L2phdmFz
Y3JpcHQ+PCEtLQppZigxMTxqcylkLndyaXRlKCctLScrJz4nKTsvLy0tPjwvU0NSSVBUPg0KIDwh
LS0vLyBSYXRpbmdATWFpbC5ydSBjb3VudGVyLS0+DQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2Ny
aXB0Pgp2YXIgZ2FKc0hvc3QgPSAoKCJodHRwczoiID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3Rv
Y29sKSA/ICJodHRwczovL3NzbC4iIDogImh0dHA6Ly93d3cuIik7CmRvY3VtZW50LndyaXRlKHVu
ZXNjYXBlKCIlM0NzY3JpcHQgc3JjPSciICsgZ2FKc0hvc3QgKyAiZ29vZ2xlLWFuYWx5dGljcy5j
b20vZ2EuanMnIHR5cGU9J3RleHQvamF2YXNjcmlwdCclM0UlM0Mvc2NyaXB0JTNFIikpOwo8L1ND
UklQVD4NCg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdD4KdHJ5IHsKdmFyIHBhZ2VUcmFj
a2VyID0gX2dhdC5fZ2V0VHJhY2tlcigiVUEtMTI3NDU5MDUtMSIpOwpwYWdlVHJhY2tlci5fdHJh
Y2tQYWdldmlldygpOwp9IGNhdGNoKGVycikge308L1NDUklQVD4NCjxBIGhyZWY9Imh0dHA6Ly9y
b2JvY3JhZnQucnUvcGFnZS9hYm91dC8iPtCeINC/0YDQvtC10LrRgtC1PC9BPiZuYnNwOyA8QSAN
CmhyZWY9Imh0dHA6Ly9pZGVhMi5ydS8iPjxJTUcgc3JjPSJodHRwOi8vaWRlYTIucnUvaTIucG5n
Ij48L0E+Jm5ic3A7IDxBIA0KaHJlZj0iaHR0cDovL3JvYm9jcmFmdC5ydS8iPjxJTUcgc3JjPSJo
dHRwOi8vcm9ib2NyYWZ0LnJ1L3JjLnBuZyI+PC9BPiANCjwvRElWPjwvRElWPjwvTk9JTkRFWD48
L0RJVj48L0JPRFk+PC9IVE1MPg0K

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/uploads/images/store/40/08/fc/1/d0f5eb_preview.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMP
FB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEc
ITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgA
0gEYAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMC
BAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYn
KCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeY
mZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwAB
AgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ip
qrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMR
AD8A9/opuaN3PSgB1FJupM0AOopM0ZoAWikzRmgBaKSjNAC0UmaKAFopKWgAoopKAFopM0bhnGRQ
AtFJS0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA2iijFAgopaKAEopaKAExS0UtAx
KKWigBKWiigBKWikLADJ4FAC1Dc3MFpA01xMkUSjLO7YAri/FPxO0nQI3itm+3XY42xHKKfc/wBB
XiXifxxqev3D/wBo3W+E8pbwkqq/h/8ArNRzX2A9S8UfFyGF5LHw+izXABzPKCFH+6O/4151F4g1
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

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/Hall_effect_preview.jpg

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
p6SnxWibY5GxB5fWhWr5Z5aGoPZkQvafcFyy+8tIbLiUp4Uk4OM8z56z2H4ZDhrXFmbjxWMqqySr
cA7IDgps9zxt9w+nVqmWyFC2JsvBJOPFLin0FoenCXSPNmtY7a7rYowdS7Lyz+CmWz1y93K3xV97
nqi12dKjKlobx17/ANFarZE5+imrnhuqijXW9fpLRsZ5TTMu5vtgnhbSG0etSunsrP0eBy1bw0vA
v4nyHzWLqMSZA0kNJt4KvOqN7HX2rny5bpjWmIGcoYhNpW4R3cTiwcn0ACtxUWxuF0bLTtMr+JJI
HgBb2krXNZtJWSu/cncHZ8ytvSe9XrKe8nS90Sq/S5KSYbkRgIkSFcvqTnDgEY55SATgg574Ttbs
5TYbE2soxutJsW627RfPwUp2fxiWtcYanMgXB087KdNnWxO43a5Mam2guJmT04XGs4wWI2Pg8Y6K
IHQdB8w1epqSTqpyAxRfFmiIoiKIiiIoiKIiiIoiKIiiIoiKIiiIoiKIiiIoiKIiiIoi1Lva498t
cu3y0rVFlNKZdS26ttRSoYICkEKHLvBBoiaWy/YpozYzBfg6MsqLDBfWXFxIz7xZ4zjiUEKWUhRw
MkAE99ETV19uibItqeo13/VuioWobwpAb8MuDz7riUAkhKSXPFSCokAYAzRFLFstzFot0aDGCxHj
tpabDjinFBIGBlSiVH0kk0RbVERREURFERREURFERREURFERREURc6vdsPrC6H++b9UfoiPcT/rC
64++b9UYoi6K0RFERRFV7eo3Upu0+9tav0iqO3qANJYmwpC+zTNSn4CwvolxI8XxuShjmOEZn2ze
0bcLvT1N+jOYIztzy5KL4vhJrf3sP2vf+qr5H3Rtq8tl8uacbiBpJJL85kleO5CUqJUfJ09NbDqd
s8LijvG4vPIAj2myisOz1a99ngNHMn5J0bIdT3DYUxdbQwVw5klwOSDLieMXAMYWg4UAByHUYPcc
k6UxbE58WqDPJlyHAD61K2Ph9JDQMEdt4ceBPjwS/eN4pNwlBi66VmSAeSn4CnOzPr4jisa2aRvJ
Xzo4HG4JCQrnq3SU5BdasEUvK59nLbcmOZ9CsoFZ+hqalxAaTfs/TNYupipmgki/eoW1HqpiZdpb
8NKENKOTwgJSFd/IchXQGCvmFCz1q+9nrrbhdamxOOF1U50IAHZpfirBbkOyi63fWjm0S5MuR7TD
jOxbcpxJT4S65gLWjyoSkEcXQlXLODWvNt8WjkY2hjN3Xuey2g71LNnKFzCalwsNB2q8NafU+RRE
URFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERR
EURFERRFzq92w+sLof75v1R+iI9xP+sLrj75v1RiiLorREURFERRFjFESHqnSFq1TF4LhbIlwKRh
PhLCVkegkZFVGEA5ry4EjJRJfNiVpaWowNGx3nD04W0hP9pWKy0MtK3N7QrCRk5+y5NZ3d11ZfXC
hsWvTMQ9VD6q7jzJQMfPWeZjsVM20DLdwt9eSxjsMfMbyu807NDbneg9Lzk3K7RlaquoVx9tc0js
QryhkeKfwuKsdUbRV8zSxjy1p5HPz+VldxYTSxnec3ePb8lOTTSGGkNtoS22gBKUpGAAOgA7qjJJ
JuVmALZBfdfF9RREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFE
RREURFERREURFERREURFERRFzq92w+sLof75v1R+iKH/AHK3R+0+8bLNYXDQu0i1aNgC9JjyIVy0
39E+2cEdCg4F9s3w8jjGD0JzRFeBvZ5vEOHxduukvXoPH6ZdEXuNl28goZG3HShHm0GP/q6Is/St
3kPt4aU/IL97oiPpW7yH28NKfkF+90RH0rd5D7eGlPyC/e6Ij6Vu8h9vDSn5BfvdER9K3eQ+3fpT
8gv3uiI+lbvI/bw0r+QX73REfSt3kPt4aU/IL97oiPpW7yH28NKfkF+90RH0rd5D7eGlPyC/e6Ij
6Vu8h9vDSn5BfvdER9K3eQ+3hpT8gv3uiI+lbvIfbw0p+QX73REfSt3kPt4aU/IL97oiibeT1jvB
7t2jLPqW47WtN3iHNvkKzutx9EJbWyh9Sgp0ZlHjKQnPBy4s/CFUpZBDG6R2jQT5K+oKOTEayGih
tvSua0X0u42F+y5SBp/eQ1bqEIT/AOkvpi1PK/krps2cZx+GJSkf2qw8eN0Mn47d4IWx6v0X7VUd
z6sHjmxzT7Lg+xSpppjbHrFCVWPeX2e3bi6Jh6QadV7BNyPZWUjqYJvu3g9xCglbgmKYaSKymfH/
AFNcPaRZOP6V28h9vDSo9Ogv3urlYVZ+lbvIfbw0p+QX73REfSt3kPt4aU/IL97oiPpW7yH28NKf
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
ERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREURFERREUR
FERRF//Z

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/analog_sensor.jpg

/9j/4AAQSkZJRgABAQEAtAC0AAD/4Qe2RXhpZgAASUkqAAgAAAAJAA8BAgAGAAAAegAAABABAgAV
AAAAgAAAABIBAwABAAAAAQAAABoBBQABAAAAlgAAABsBBQABAAAAngAAACgBAwABAAAAAgAAADIB
AgAUAAAApgAAABMCAwABAAAAAQAAAGmHBAABAAAAugAAAGgHAABDYW5vbgBDYW5vbiBQb3dlclNo
b3QgQTUyMAAAtAAAAAEAAAC0AAAAAQAAADIwMTE6MDk6MDkgMTM6MTk6NTcAHwCaggUAAQAAADQC
AACdggUAAQAAADwCAAAAkAcABAAAADAyMjADkAIAFAAAAEQCAAAEkAIAFAAAAFgCAAABkQcABAAA
AAECAwACkQUAAQAAAGwCAAABkgoAAQAAAHQCAAACkgUAAQAAAHwCAAAEkgoAAQAAAIQCAAAFkgUA
AQAAAIwCAAAHkgMAAQAAAAUAAAAJkgMAAQAAABAAAAAKkgUAAQAAAJQCAAB8kgcAdgMAAJwCAACG
kgcACAEAABIGAAAAoAcABAAAADAxMDABoAMAAQAAAAEAAAACoAMAAQAAAJABAAADoAMAAQAAACwB
AAAFoAQAAQAAADIHAAAOogUAAQAAABoHAAAPogUAAQAAACIHAAAQogMAAQAAAAIAAAAXogMAAQAA
AAIAAAAAowcAAQAAAAMAAAABpAMAAQAAAAAAAAACpAMAAQAAAAAAAAADpAMAAQAAAAAAAAAEpAUA
AQAAACoHAAAGpAMAAQAAAAAAAAAAAAAAAQAAAFAAAAAoAAAACgAAADIwMTE6MDk6MDMgMTU6MTI6
MTQAMjAxMTowOTowMyAxNToxMjoxNAAFAAAAAQAAAMoAAAAgAAAAgAAAACAAAAAAAAAAAwAAAFgA
AAAgAAAAugAAACAAAAARAAEAAwAuAAAAbgMAAAIAAwAEAAAAygMAAAMAAwAEAAAA0gMAAAQAAwAi
AAAA2gMAAAAAAwAGAAAAHgQAAAAAAwAEAAAAKgQAABIAAwAcAAAAMgQAABMAAwAEAAAAagQAAAYA
AgAgAAAAcgQAAAcAAgAYAAAAkgQAAAgABAABAAAAOsIjAAkAAgAgAAAAqgQAABAABAABAAAAAABW
ARgAAQAAAQAAygQAABkAAwABAAAAAQAAABwAAwABAAAAAAAAAA0AAwAkAAAAygUAAAAAAABcAAEA
AAAFAAAAAAAAAAQAAAABAAUAAAAAAAAAAAAAAA8AAwADAAFAAAD/f///5gK6ACAAXADAAP//AAAA
AAAAAAAAAP//AADgCOAIAAAAAAAAAAD/f/9/AAAAAAIAugDlAKwAAAAAAAAAAABEAAAAgADHAIAA
ygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAkAAACAAMsAAAAAAP7/+gAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAACQAJAEAGsATgCBwBmQEzAGb+AACaAWb+AACaAWb+AACaAcr/
yv/K/wAAAAAAADYANgA2AAIAAQAAAAAAAAAAAElNRzpQb3dlclNob3QgQTUyMCBKUEVHAAAAAAAA
AAAARmlybXdhcmUgVmVyc2lvbiAxLjAwAAAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAJANQB8QHsAdQB+AH1AdQBAYABgEAAAAAA
AEMBAgAAAAoAAAALAAoA/f6HAQAAAgAABAAAAAAAAAAAAAB5AQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoYAOAAAACATxIAqAAAAOAIAADgCAAABAABAAIABAAA
AFI5OAACAAcABAAAADAxMDABEAMAAQAAAEAGAAACEAMAAQAAALAEAAAAAAAABAADAQMAAQAAAAYA
AAAaAQUAAQAAAJ4HAAAbAQUAAQAAAKYHAAAoAQMAAQAAAAIAAAAAAAAAtAAAAAEAAAC0AAAAAQAA
AP/hC+BodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0n77u/JyBp
ZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0nYWRvYmU6
bnM6bWV0YS8nPgo8cmRmOlJERiB4bWxuczpyZGY9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
MjItcmRmLXN5bnRheC1ucyMnPgoKIDxyZGY6RGVzY3JpcHRpb24geG1sbnM6ZXhpZj0naHR0cDov
L25zLmFkb2JlLmNvbS9leGlmLzEuMC8nPgogIDxleGlmOk1ha2U+Q2Fub248L2V4aWY6TWFrZT4K
ICA8ZXhpZjpNb2RlbD5DYW5vbiBQb3dlclNob3QgQTUyMDwvZXhpZjpNb2RlbD4KICA8ZXhpZjpP
cmllbnRhdGlvbj5Ub3AtbGVmdDwvZXhpZjpPcmllbnRhdGlvbj4KICA8ZXhpZjpYUmVzb2x1dGlv
bj4xODA8L2V4aWY6WFJlc29sdXRpb24+CiAgPGV4aWY6WVJlc29sdXRpb24+MTgwPC9leGlmOllS
ZXNvbHV0aW9uPgogIDxleGlmOlJlc29sdXRpb25Vbml0PtCU0Y7QudC8PC9leGlmOlJlc29sdXRp
b25Vbml0PgogIDxleGlmOkRhdGVUaW1lPjIwMTE6MDk6MDMgMTU6MTI6MTQ8L2V4aWY6RGF0ZVRp
bWU+CiAgPGV4aWY6WUNiQ3JQb3NpdGlvbmluZz5DZW50ZXJlZDwvZXhpZjpZQ2JDclBvc2l0aW9u
aW5nPgogIDxleGlmOkNvbXByZXNzaW9uPtCh0LbQsNGC0LjQtSBKUEVHPC9leGlmOkNvbXByZXNz
aW9uPgogIDxleGlmOlhSZXNvbHV0aW9uPjE4MDwvZXhpZjpYUmVzb2x1dGlvbj4KICA8ZXhpZjpZ
UmVzb2x1dGlvbj4xODA8L2V4aWY6WVJlc29sdXRpb24+CiAgPGV4aWY6UmVzb2x1dGlvblVuaXQ+
0JTRjtC50Lw8L2V4aWY6UmVzb2x1dGlvblVuaXQ+CiAgPGV4aWY6RXhwb3N1cmVUaW1lPjEvODAg
0YHQtdC6LjwvZXhpZjpFeHBvc3VyZVRpbWU+CiAgPGV4aWY6Rk51bWJlcj5mLzQsMDwvZXhpZjpG
TnVtYmVyPgogIDxleGlmOkV4aWZWZXJzaW9uPkVYSUYg0LLQtdGA0YHQuNC4IDIuMjwvZXhpZjpF
eGlmVmVyc2lvbj4KICA8ZXhpZjpEYXRlVGltZU9yaWdpbmFsPjIwMTE6MDk6MDMgMTU6MTI6MTQ8
L2V4aWY6RGF0ZVRpbWVPcmlnaW5hbD4KICA8ZXhpZjpEYXRlVGltZURpZ2l0aXplZD4yMDExOjA5
OjAzIDE1OjEyOjE0PC9leGlmOkRhdGVUaW1lRGlnaXRpemVkPgogIDxleGlmOkNvbXBvbmVudHND
b25maWd1cmF0aW9uPgogICA8cmRmOlNlcT4KICAgIDxyZGY6bGk+WSBDYiBDciAtPC9yZGY6bGk+
CiAgIDwvcmRmOlNlcT4KICA8L2V4aWY6Q29tcG9uZW50c0NvbmZpZ3VyYXRpb24+CiAgPGV4aWY6
Q29tcHJlc3NlZEJpdHNQZXJQaXhlbD4gNTwvZXhpZjpDb21wcmVzc2VkQml0c1BlclBpeGVsPgog
IDxleGlmOlNodXR0ZXJTcGVlZFZhbHVlPjYsMzEgRVYgKDEvNzkg0YHQtdC6Lik8L2V4aWY6U2h1
dHRlclNwZWVkVmFsdWU+CiAgPGV4aWY6QXBlcnR1cmVWYWx1ZT40LDAwIEVWIChmLzQsMCk8L2V4
aWY6QXBlcnR1cmVWYWx1ZT4KICA8ZXhpZjpFeHBvc3VyZUJpYXNWYWx1ZT4wLDAwIEVWPC9leGlm
OkV4cG9zdXJlQmlhc1ZhbHVlPgogIDxleGlmOk1heEFwZXJ0dXJlVmFsdWU+Miw3NSBFViAoZi8y
LDYpPC9leGlmOk1heEFwZXJ0dXJlVmFsdWU+CiAgPGV4aWY6TWV0ZXJpbmdNb2RlPtCo0LDQsdC7
0L7QvTwvZXhpZjpNZXRlcmluZ01vZGU+CiAgPGV4aWY6Rmxhc2ggcmRmOnBhcnNlVHlwZT0nUmVz
b3VyY2UnPgogIDwvZXhpZjpGbGFzaD4KICA8ZXhpZjpGb2NhbExlbmd0aD41LDggbW08L2V4aWY6
Rm9jYWxMZW5ndGg+CiAgPGV4aWY6TWFrZXJOb3RlPjg4NiBieXRlcyB1bmRlZmluZWQgZGF0YTwv
ZXhpZjpNYWtlck5vdGU+CiAgPGV4aWY6VXNlckNvbW1lbnQgLz4KICA8ZXhpZjpGbGFzaFBpeFZl
cnNpb24+Rmxhc2hQaXgg0LLQtdGA0YHQuNC4IDEuMDwvZXhpZjpGbGFzaFBpeFZlcnNpb24+CiAg
PGV4aWY6Q29sb3JTcGFjZT5zUkdCPC9leGlmOkNvbG9yU3BhY2U+CiAgPGV4aWY6UGl4ZWxYRGlt
ZW5zaW9uPjE2MDA8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogIDxleGlmOlBpeGVsWURpbWVuc2lv
bj4xMjAwPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICA8ZXhpZjpGb2NhbFBsYW5lWFJlc29sdXRp
b24+NzE0Miw4NTc8L2V4aWY6Rm9jYWxQbGFuZVhSZXNvbHV0aW9uPgogIDxleGlmOkZvY2FsUGxh
bmVZUmVzb2x1dGlvbj43MTQyLDg1NzwvZXhpZjpGb2NhbFBsYW5lWVJlc29sdXRpb24+CiAgPGV4
aWY6Rm9jYWxQbGFuZVJlc29sdXRpb25Vbml0PtCU0Y7QudC8PC9leGlmOkZvY2FsUGxhbmVSZXNv
bHV0aW9uVW5pdD4KICA8ZXhpZjpTZW5zaW5nTWV0aG9kPtCe0LTQvdC+0YfQuNC/0L7QstGL0Lkg
0LTQsNGC0YfQuNC6INGG0LLQtdGC0L7QstC+0Lkg0L7QsdC70LDRgdGC0Lg8L2V4aWY6U2Vuc2lu
Z01ldGhvZD4KICA8ZXhpZjpGaWxlU291cmNlPkRTQzwvZXhpZjpGaWxlU291cmNlPgogIDxleGlm
OkN1c3RvbVJlbmRlcmVkPtCe0LHRi9GH0L3QsNGPINC+0LHRgNCw0LHQvtGC0LrQsDwvZXhpZjpD
dXN0b21SZW5kZXJlZD4KICA8ZXhpZjpFeHBvc3VyZU1vZGU+0JDQstGC0L7RjdC60YHQv9C+0LfQ
uNGG0LjRjzwvZXhpZjpFeHBvc3VyZU1vZGU+CiAgPGV4aWY6V2hpdGVCYWxhbmNlPtCQ0LLRgtC+
0LzQsNGCLiDQsdCw0LvQsNC90YEg0LHQtdC70L7Qs9C+PC9leGlmOldoaXRlQmFsYW5jZT4KICA8
ZXhpZjpEaWdpdGFsWm9vbVJhdGlvPjEsMDAwMDwvZXhpZjpEaWdpdGFsWm9vbVJhdGlvPgogIDxl
eGlmOlNjZW5lQ2FwdHVyZVR5cGU+U3RhbmRhcmQ8L2V4aWY6U2NlbmVDYXB0dXJlVHlwZT4KICA8
ZXhpZjpJbnRlcm9wZXJhYmlsaXR5SW5kZXg+Ujk4PC9leGlmOkludGVyb3BlcmFiaWxpdHlJbmRl
eD4KICA8ZXhpZjpJbnRlcm9wZXJhYmlsaXR5VmVyc2lvbj4wMTAwPC9leGlmOkludGVyb3BlcmFi
aWxpdHlWZXJzaW9uPgogIDxleGlmOlJlbGF0ZWRJbWFnZVdpZHRoPjE2MDA8L2V4aWY6UmVsYXRl
ZEltYWdlV2lkdGg+CiAgPGV4aWY6UmVsYXRlZEltYWdlTGVuZ3RoPjEyMDA8L2V4aWY6UmVsYXRl
ZEltYWdlTGVuZ3RoPgogPC9yZGY6RGVzY3JpcHRpb24+Cgo8L3JkZjpSREY+CjwveDp4bXBtZXRh
Pgo8P3hwYWNrZXQgZW5kPSdyJz8+Cv/bAEMABQMEBAQDBQQEBAUFBQYHDAgHBwcHDwsLCQwRDxIS
EQ8RERMWHBcTFBoVEREYIRgaHR0fHx8TFyIkIh4kHB4fHv/bAEMBBQUFBwYHDggIDh4UERQeHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHv/AABEIASwBkAMB
EQACEQEDEQH/xAAdAAACAgMBAQEAAAAAAAAAAAABAgADBAYHBQgJ/8QARRAAAgEDAwIEBAQFAgQE
AwkAAQIRAAMhBBIxBUEGIlFhBxNxgRQykaEII0KxwdHhFTNDUhYkYvAXgqIlNFNjcpKywvH/xAAY
AQEBAQEBAAAAAAAAAAAAAAAAAQIDBP/EACMRAQEBAAMBAAICAwEBAAAAAAABEQIhMQMSQRNRIjJx
BGH/2gAMAwEAAhEDEQA/APo8NCxNe15kJDcmqKnu7QPISfarmit/m3OCAI4q9RE07NhIMg5NLDWW
AZ7cVlTGAMDPpTSoDuzQCYIJioCI3bhE0UDJeSasS9jjd61A0B8g/ap41mlcbRuFX1MxNwZYaJHF
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

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/analog_sensor_connected_preview.jpg

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

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/analog_sensor_log.png

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

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/digital_sensor.jpg

/9j/4AAQSkZJRgABAQEAtAC0AAD/4Qe2RXhpZgAASUkqAAgAAAAJAA8BAgAGAAAAegAAABABAgAV
AAAAgAAAABIBAwABAAAAAQAAABoBBQABAAAAlgAAABsBBQABAAAAngAAACgBAwABAAAAAgAAADIB
AgAUAAAApgAAABMCAwABAAAAAQAAAGmHBAABAAAAugAAAGgHAABDYW5vbgBDYW5vbiBQb3dlclNo
b3QgQTUyMAAAtAAAAAEAAAC0AAAAAQAAADIwMTE6MDk6MDkgMTM6MzM6MDYAHwCaggUAAQAAADQC
AACdggUAAQAAADwCAAAAkAcABAAAADAyMjADkAIAFAAAAEQCAAAEkAIAFAAAAFgCAAABkQcABAAA
AAECAwACkQUAAQAAAGwCAAABkgoAAQAAAHQCAAACkgUAAQAAAHwCAAAEkgoAAQAAAIQCAAAFkgUA
AQAAAIwCAAAHkgMAAQAAAAUAAAAJkgMAAQAAABAAAAAKkgUAAQAAAJQCAAB8kgcAdgMAAJwCAACG
kgcACAEAABIGAAAAoAcABAAAADAxMDABoAMAAQAAAAEAAAACoAMAAQAAAJABAAADoAMAAQAAACwB
AAAFoAQAAQAAADIHAAAOogUAAQAAABoHAAAPogUAAQAAACIHAAAQogMAAQAAAAIAAAAXogMAAQAA
AAIAAAAAowcAAQAAAAMAAAABpAMAAQAAAAAAAAACpAMAAQAAAAAAAAADpAMAAQAAAAAAAAAEpAUA
AQAAACoHAAAGpAMAAQAAAAAAAAAAAAAAAQAAADwAAAAoAAAACgAAADIwMTE6MDk6MDUgMTU6MDc6
MDEAMjAxMTowOTowNSAxNTowNzowMQAFAAAAAQAAAL0AAAAgAAAAgAAAACAAAAAAAAAAAwAAAFgA
AAAgAAAAugAAACAAAAARAAEAAwAuAAAAbgMAAAIAAwAEAAAAygMAAAMAAwAEAAAA0gMAAAQAAwAi
AAAA2gMAAAAAAwAGAAAAHgQAAAAAAwAEAAAAKgQAABIAAwAcAAAAMgQAABMAAwAEAAAAagQAAAYA
AgAgAAAAcgQAAAcAAgAYAAAAkgQAAAgABAABAAAAPMIjAAkAAgAgAAAAqgQAABAABAABAAAAAABW
ARgAAQAAAQAAygQAABkAAwABAAAAAQAAABwAAwABAAAAAAAAAA0AAwAkAAAAygUAAAAAAABcAAEA
AAAFAAAAAAAAAAQAAAABAAUAAAAAAAAAAAAAAA8AAwADAAFAAAD/f///5gK6ACAAXADAAP//AAAA
AAAAAAAAAP//AADgCOAIAAAAAAAAAAD/f/9/AAAAAAIAugDlAKwAAAAAAAAAAABEAAAAgADTAIAA
vQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAkAAACAAMIAAAAAAP7/+gAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAACQAJAEAGsATgCBwBmQEzAGb+AACaAWb+AACaAWb+AACaAcr/
yv/K/wAAAAAAADYANgA2ADAABAAAAAAAAAAAAElNRzpQb3dlclNob3QgQTUyMCBKUEVHAAAAAAAA
AAAARmlybXdhcmUgVmVyc2lvbiAxLjAwAAAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAJAHEB3AHgAfAB7AHsAfQB8gHwAUAAAAAA
AE0BAgAAAAoAAAATAAAA+P6FAQAA7f8ABAAAAAAAAAAAAACJAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoYAOAAAACATxIAqAAAAOAIAADgCAAABAABAAIABAAA
AFI5OAACAAcABAAAADAxMDABEAMAAQAAAEAGAAACEAMAAQAAALAEAAAAAAAABAADAQMAAQAAAAYA
AAAaAQUAAQAAAJ4HAAAbAQUAAQAAAKYHAAAoAQMAAQAAAAIAAAAAAAAAtAAAAAEAAAC0AAAAAQAA
AP/hC+BodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0n77u/JyBp
ZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0nYWRvYmU6
bnM6bWV0YS8nPgo8cmRmOlJERiB4bWxuczpyZGY9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
MjItcmRmLXN5bnRheC1ucyMnPgoKIDxyZGY6RGVzY3JpcHRpb24geG1sbnM6ZXhpZj0naHR0cDov
L25zLmFkb2JlLmNvbS9leGlmLzEuMC8nPgogIDxleGlmOk1ha2U+Q2Fub248L2V4aWY6TWFrZT4K
ICA8ZXhpZjpNb2RlbD5DYW5vbiBQb3dlclNob3QgQTUyMDwvZXhpZjpNb2RlbD4KICA8ZXhpZjpP
cmllbnRhdGlvbj5Ub3AtbGVmdDwvZXhpZjpPcmllbnRhdGlvbj4KICA8ZXhpZjpYUmVzb2x1dGlv
bj4xODA8L2V4aWY6WFJlc29sdXRpb24+CiAgPGV4aWY6WVJlc29sdXRpb24+MTgwPC9leGlmOllS
ZXNvbHV0aW9uPgogIDxleGlmOlJlc29sdXRpb25Vbml0PtCU0Y7QudC8PC9leGlmOlJlc29sdXRp
b25Vbml0PgogIDxleGlmOkRhdGVUaW1lPjIwMTE6MDk6MDUgMTU6MDc6MDE8L2V4aWY6RGF0ZVRp
bWU+CiAgPGV4aWY6WUNiQ3JQb3NpdGlvbmluZz5DZW50ZXJlZDwvZXhpZjpZQ2JDclBvc2l0aW9u
aW5nPgogIDxleGlmOkNvbXByZXNzaW9uPtCh0LbQsNGC0LjQtSBKUEVHPC9leGlmOkNvbXByZXNz
aW9uPgogIDxleGlmOlhSZXNvbHV0aW9uPjE4MDwvZXhpZjpYUmVzb2x1dGlvbj4KICA8ZXhpZjpZ
UmVzb2x1dGlvbj4xODA8L2V4aWY6WVJlc29sdXRpb24+CiAgPGV4aWY6UmVzb2x1dGlvblVuaXQ+
0JTRjtC50Lw8L2V4aWY6UmVzb2x1dGlvblVuaXQ+CiAgPGV4aWY6RXhwb3N1cmVUaW1lPjEvNjAg
0YHQtdC6LjwvZXhpZjpFeHBvc3VyZVRpbWU+CiAgPGV4aWY6Rk51bWJlcj5mLzQsMDwvZXhpZjpG
TnVtYmVyPgogIDxleGlmOkV4aWZWZXJzaW9uPkVYSUYg0LLQtdGA0YHQuNC4IDIuMjwvZXhpZjpF
eGlmVmVyc2lvbj4KICA8ZXhpZjpEYXRlVGltZU9yaWdpbmFsPjIwMTE6MDk6MDUgMTU6MDc6MDE8
L2V4aWY6RGF0ZVRpbWVPcmlnaW5hbD4KICA8ZXhpZjpEYXRlVGltZURpZ2l0aXplZD4yMDExOjA5
OjA1IDE1OjA3OjAxPC9leGlmOkRhdGVUaW1lRGlnaXRpemVkPgogIDxleGlmOkNvbXBvbmVudHND
b25maWd1cmF0aW9uPgogICA8cmRmOlNlcT4KICAgIDxyZGY6bGk+WSBDYiBDciAtPC9yZGY6bGk+
CiAgIDwvcmRmOlNlcT4KICA8L2V4aWY6Q29tcG9uZW50c0NvbmZpZ3VyYXRpb24+CiAgPGV4aWY6
Q29tcHJlc3NlZEJpdHNQZXJQaXhlbD4gNTwvZXhpZjpDb21wcmVzc2VkQml0c1BlclBpeGVsPgog
IDxleGlmOlNodXR0ZXJTcGVlZFZhbHVlPjUsOTEgRVYgKDEvNTkg0YHQtdC6Lik8L2V4aWY6U2h1
dHRlclNwZWVkVmFsdWU+CiAgPGV4aWY6QXBlcnR1cmVWYWx1ZT40LDAwIEVWIChmLzQsMCk8L2V4
aWY6QXBlcnR1cmVWYWx1ZT4KICA8ZXhpZjpFeHBvc3VyZUJpYXNWYWx1ZT4wLDAwIEVWPC9leGlm
OkV4cG9zdXJlQmlhc1ZhbHVlPgogIDxleGlmOk1heEFwZXJ0dXJlVmFsdWU+Miw3NSBFViAoZi8y
LDYpPC9leGlmOk1heEFwZXJ0dXJlVmFsdWU+CiAgPGV4aWY6TWV0ZXJpbmdNb2RlPtCo0LDQsdC7
0L7QvTwvZXhpZjpNZXRlcmluZ01vZGU+CiAgPGV4aWY6Rmxhc2ggcmRmOnBhcnNlVHlwZT0nUmVz
b3VyY2UnPgogIDwvZXhpZjpGbGFzaD4KICA8ZXhpZjpGb2NhbExlbmd0aD41LDggbW08L2V4aWY6
Rm9jYWxMZW5ndGg+CiAgPGV4aWY6TWFrZXJOb3RlPjg4NiBieXRlcyB1bmRlZmluZWQgZGF0YTwv
ZXhpZjpNYWtlck5vdGU+CiAgPGV4aWY6VXNlckNvbW1lbnQgLz4KICA8ZXhpZjpGbGFzaFBpeFZl
cnNpb24+Rmxhc2hQaXgg0LLQtdGA0YHQuNC4IDEuMDwvZXhpZjpGbGFzaFBpeFZlcnNpb24+CiAg
PGV4aWY6Q29sb3JTcGFjZT5zUkdCPC9leGlmOkNvbG9yU3BhY2U+CiAgPGV4aWY6UGl4ZWxYRGlt
ZW5zaW9uPjE2MDA8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogIDxleGlmOlBpeGVsWURpbWVuc2lv
bj4xMjAwPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICA8ZXhpZjpGb2NhbFBsYW5lWFJlc29sdXRp
b24+NzE0Miw4NTc8L2V4aWY6Rm9jYWxQbGFuZVhSZXNvbHV0aW9uPgogIDxleGlmOkZvY2FsUGxh
bmVZUmVzb2x1dGlvbj43MTQyLDg1NzwvZXhpZjpGb2NhbFBsYW5lWVJlc29sdXRpb24+CiAgPGV4
aWY6Rm9jYWxQbGFuZVJlc29sdXRpb25Vbml0PtCU0Y7QudC8PC9leGlmOkZvY2FsUGxhbmVSZXNv
bHV0aW9uVW5pdD4KICA8ZXhpZjpTZW5zaW5nTWV0aG9kPtCe0LTQvdC+0YfQuNC/0L7QstGL0Lkg
0LTQsNGC0YfQuNC6INGG0LLQtdGC0L7QstC+0Lkg0L7QsdC70LDRgdGC0Lg8L2V4aWY6U2Vuc2lu
Z01ldGhvZD4KICA8ZXhpZjpGaWxlU291cmNlPkRTQzwvZXhpZjpGaWxlU291cmNlPgogIDxleGlm
OkN1c3RvbVJlbmRlcmVkPtCe0LHRi9GH0L3QsNGPINC+0LHRgNCw0LHQvtGC0LrQsDwvZXhpZjpD
dXN0b21SZW5kZXJlZD4KICA8ZXhpZjpFeHBvc3VyZU1vZGU+0JDQstGC0L7RjdC60YHQv9C+0LfQ
uNGG0LjRjzwvZXhpZjpFeHBvc3VyZU1vZGU+CiAgPGV4aWY6V2hpdGVCYWxhbmNlPtCQ0LLRgtC+
0LzQsNGCLiDQsdCw0LvQsNC90YEg0LHQtdC70L7Qs9C+PC9leGlmOldoaXRlQmFsYW5jZT4KICA8
ZXhpZjpEaWdpdGFsWm9vbVJhdGlvPjEsMDAwMDwvZXhpZjpEaWdpdGFsWm9vbVJhdGlvPgogIDxl
eGlmOlNjZW5lQ2FwdHVyZVR5cGU+U3RhbmRhcmQ8L2V4aWY6U2NlbmVDYXB0dXJlVHlwZT4KICA8
ZXhpZjpJbnRlcm9wZXJhYmlsaXR5SW5kZXg+Ujk4PC9leGlmOkludGVyb3BlcmFiaWxpdHlJbmRl
eD4KICA8ZXhpZjpJbnRlcm9wZXJhYmlsaXR5VmVyc2lvbj4wMTAwPC9leGlmOkludGVyb3BlcmFi
aWxpdHlWZXJzaW9uPgogIDxleGlmOlJlbGF0ZWRJbWFnZVdpZHRoPjE2MDA8L2V4aWY6UmVsYXRl
ZEltYWdlV2lkdGg+CiAgPGV4aWY6UmVsYXRlZEltYWdlTGVuZ3RoPjEyMDA8L2V4aWY6UmVsYXRl
ZEltYWdlTGVuZ3RoPgogPC9yZGY6RGVzY3JpcHRpb24+Cgo8L3JkZjpSREY+CjwveDp4bXBtZXRh
Pgo8P3hwYWNrZXQgZW5kPSdyJz8+Cv/bAEMABQMEBAQDBQQEBAUFBQYHDAgHBwcHDwsLCQwRDxIS
EQ8RERMWHBcTFBoVEREYIRgaHR0fHx8TFyIkIh4kHB4fHv/bAEMBBQUFBwYHDggIDh4UERQeHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHv/AABEIASwBkAMB
EQACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAABAgADBAYHBQj/xABCEAACAQMDAgQFAgQEBQMC
BwABAhEAAyEEEjEFQQYiUWEHEzJxgZGhCBQjwUJSsdEVJGJy4SUz8BYXGCZDU4KStf/EABgBAQEB
AQEAAAAAAAAAAAAAAAABAgME/8QAIhEBAQEBAAICAgMBAQAAAAAAAAERAiExEkEDURMiMmFC/9oA
DAMBAAIRAxEAPwD6lDPtBEFexr3Y84h2AhyJ/SphppBaM0AhF3AcelJoVQBlRmO9U0+4MoKgT6VF
RgYIYc45ogdwO8Uw1CTuUiI7g0gigDIBJB70AJUloJE5+1BAwiTFENtAXd70XAtoPmg8fY96WhiF
mM0AADTBk9qbTB85LKyARwRRS2sQBBI9c0Q6grcjsSY9qhSkRcyB7GaBrjKCIH3oob2HYQaBSHZY
QIrDIk0RHkqNwzOYqhhaBB2nnnNALatsCNiKA8NtORzRRtkAFfSpiJtUtgGaGJC4gUXCndkIRVgW
0WbynngiiatAgAMYqKjSpAJYA9wJigAMrByaCLuJyNtEMu6drZHrRUyGjtQM3lM1AseXcuV/vQEB
R9QMUEi20AMZ7xim4A1uCdsz2qmIjhfKcN7nmlAZoP0imBmINvHI70QttYSSSZyJoo+aMdqCIWDz
GD68UBaQCdsr3FSCqUZSvBIitISVKbHAJ4PvVQEJC5iPalU0iCUuc1NMD6fM5EjvNEOCMyIIp5XU
3qSeBntUVIBxJmqDhT6n7VNCHcpMwo9DVRGQhSCSwJ7UKCIoXsfzV0w6rt3AQQe0moGBYL/pNRQR
2MAiD9uaILFt/Cx7UUwOf8Q9KBHO27wMjGKCETBDFc+lASF3MhYE9qaYjsNoMTHpVCGGiCfWiIih
mIMYMiaUMIJiMelQFNwAInJIopySVnuODUEUnaC0BqoRX2n6Y96YCSPmTBn1oE8gYcg0Q5OZQgUV
DtUyB+tERiGZZK81FPqDsYiZ9aBZCqGYCKCMZ+kg/wB6qFWUwAfagcAASQaiiHBwPMefeiIriIkT
ziiiT3X9aoQohyDDe9QSTH1VQVtqxzNIDtiBI96AIF7TUEhTgCMUEGAQwBiqgIAQDJHrUU2BkMfa
gxwuwEZE9zW9TAALQYBI7g80QCPMpXgZM00E4MzunigYcieO9QTYd4ZWMHtTTEgeYOwA7U1cPG5B
HM5ipqogDQwOVOBVRHALlzInNAqkbjBGO1QK+JYAbicVQ29g+FIJ/SmGhJIk8d6L7Att7/iiHDMq
4iDxUUbgg7l4PvQRpPY4GTQKsgwZI7VQxJLEmCY/SoBKliJAYciqgBREzJ71NMAFQZEZMVQ9sECS
AxnE1FFZV1JH2PYUBgfNABgE8UDORuB5x60CjJ9O9BHmDIGKBQy/SRBoGKj6gMfpQwGQxjE+9Ah+
niTQRwuzAJIP60Q5KlRtmP8ASiiXQLG2KeU1NxgACRRRVmkgRnHNQD5TSGEA1QHtAAMTB9KCNKrI
gigZSHAEVBEImAPxQOjHg/iqhGWRG7aaKIkW5OfU1EMSCsgeX2qqRCd8xiO1BJ2mSDH2qBojOD9x
Q1iuCGlWaeIFaQAxUZx7GrgIJ2Bj5SDU9BmA+uSRzimhXBUllK49eKqCGUAKu0T+lTF0e4BHI/Sg
bDCFJ9u1RUDEQDH4oFV2DlVyIwJpiaIZZ8yiY5q+RAMyvaopmmQRxFVCbcyO/IoYWCDmOaqGQHaZ
EjjBqKdRtgcj9Kil3EqTOM0SnTzJn9xRSsgYmJ+4MVUCCCARJnuaAtP+EfeagdBvtlYggYnvRSke
QFcn3p7EDq0L3FDRSFuAmgLwTK80MRV8gkgkcA0CbmJIUiQe4igLCWDkCiIWM+ppi6D3DAxigAK7
uT+tBYpUCT3oBg5GRNBNnlNNLCq0GAYNAxJaAoJjn0oHJjhvNP6VDVbnE3D+lUBW/p7gf/FBLRgh
jJJHNMQZBbcoyfeirbdwKSrBSAOamAELt5A7j1qitSTIwRQFQwGIA+1QOsFZJzQNBAknBoCG8hCg
Z9aDCXygSykDBjH7VtAa8ogEmiGV/MZkj1qVUD2w+TAJ9aCBxtGQZpAGwwby/VkGqi0BBlQQCJEV
PKgIFs4bceJ7VPIFxyV4JOJAqmq1cNJXdjsRVqHUj6h3qYprZl47/wBqBbhhQASPTE0hSqPmCG7V
MDFF2kxOKAJ5bYzzVDGYjkzjFALUEQBtnJFMFgcAAAkHjBqAkbQWBJHrRSvLyQwqoKrJAOR6GlD3
RCjasbfSpF0qkgklfYxQVwRJac8SKRFlrCeYDHpRYUgRK4nvVSiHtiFYEkd6iiWUtIUx60E+YVGV
MfaoIHRhVBKgGexGKaGVVKZ5oYXAO2TH3oFlRhYBmZoID5gchpn2NBFKliWkURYqKyeQy3cA1FKC
pY7lEx65FUAhZlDkdqaEEGZkTwaqLE2jyzx+lQGQQY2j3qKC21ZTkE0BFpBGP1oJcUIQf8XcTQRZ
X6mwfWgrBgxOPQVRcsqo7GZmamCG2ZkMI96GsG6p+aqzg5BitosWNuNsjj3qBv8AEKCMomcGilFt
dpAUFTkQIoitAVEmSBzRF9liyQSPSKig423AOQRj71QHVtoIIGRIoG8reYlYIjAM0JEC7XWCGEQO
9Ad3nEE+2KgS5uYtKzE+XiKpS2CflySQZ4OcUFyXFYEdyOIqVVYVcSsfmkDBdhyGJ96qASoYEjaA
M0Dq4xtYQckVFRkIO5WhTz3pqALauYWSv6Gge2SEIIkjGaKRNwWGnPBoHViSZ571DSyJIg59KoCy
ohcYzNEUsWdtu7y+1A9tF7jPvVVcN2FBFQRwGAB7+hpoHygFAUEyKCtLseW5x2NXE1ZJKAgznsKi
wrghgOZ7zmgDWyxkMP1q6hjCqBIJPaopQ3mUnvVRYikszAnPfiai0NjBsNuA9RxQAibu4HHFAxAC
lVHlPBNIimXCNir4FttgqAEftUU5dVG4MMnioK2uEmNpFFTeTdJWCoH1HmftRDwrbS5JxihoNsVD
tEdqAqTGRNDFgUEBwAJxFDGA5BdQcR3rSLBCmdv1YIoFeQwCQI9c0AZm2zA8tBbaPlJB55qKVy0d
isQZPFAbDqylgVkehoiOx5MQCTxVCW7hc/SDmJ4oLSGDE4EZB5qKR5AHl47ikC22kN5Tj171UMjF
lIZY9qYaa3sZOIz61FQgquMkcQaUAq6gQRJGagBF1RJ8w+9aSilyBE5+3FBZAAl8+lQef1zrfTeh
dNbqPV9XZ0WlBjfcOCfQDkmpbnmrPLWLfxW8AXbG9fE+htxmLjFD+hFc7+blr4V5PV/jh8PtGSbf
Wzqj3GnsO39hU/mn0vwrWep/xLeGLNv/AJLo3UtVBiW22x98mf2qfy39L8P29Lw58d+ndY09rU3O
hX7S3XKrt1Ck/vA/er/Jf0nwn7bVofiZ4Z1GLz6rSGSD821uGOcrNWfl/wCHwe1ofFvhzXOE03Wt
E7HsboU/oYrU7jPxr3LN7T3kmzdtXV7FWBn9Ks6iEeE8xrWghrjbQu0D1oCTeBGQ2cUE+ZvUqQZo
Js2oJMCc0BVgTtUGfUUEJcgK8ALmoFZGBJkETVEDlSCwHpQNc2qRtEtE801MKGubJBAB9aKDG6JE
hgRFBAzJ9QgetA9ltyAmCAYwaCPhgYhZoAw/qCOD60BcOYCqDHtUEdnBAZaARu3LADAetUW2oKgz
mIoqXEJTaIGZoitt4ACjIGc1BFLBlDHB96oxCwNwECVnNaRbOFZWVhxUAcFbisfpqlEEEYcyRxRC
6bJPBEdvWoq+w3nKkAR68VFUgJbuuQiIGHHAOaSlRQtw7zKkcDtVRYoDW+II7GoqW2ECVyRkTwaI
L7woIiB7UwVMSCGAYicgCqaaZEhTHoaqJp+/3qNLHUclJX7cVAJYLuBgVUTMH70wBltsnlLBh2qK
TBUMu7cpznkVfaPnP+MnrF4HpvSUvf0rVhr5UYlmYKJ/ANZ7a4fNv8xcHBjtXnyOm1X88kwS2B+B
QVXbmN24wRzQb50b+ZudP0nSdNdbTJeC32eBIOQGH3FWJWw9T11zo2j06FGvP5banHnbd5ST+xHp
WrP0mmHXuq2P+e6z0yyLF9186xhfYGSB7gxUyr4bJoupXtNqPnWNRcVSybmtvtEEgYA9JA5+xqZp
uPY0PjzxBp3u2bHWNdvsAlla58xYnk7pirYb/wAbF074qdc+XZ1N06W/auNt89v6TnBKkcx+aS9f
tMj3NB8W1MG/0y28fW2n1Ex+CKvy6PjHv9J+JfhvXPtuNqtH2PzbcgH7qTWv5P3EvH6bdp9Xptdo
rer0Oot6iw+VuW3lT+lanUrN2LELYBgSMe9awWLkFT5jUBORmRQK9ohh5ZnnEVRWibbuefemmLQq
qd27ZJ55zUAuARu+YDjNUC2DvkyB7jmggQpcZhlWP4FQG7gLBHuKCMC3BOPShh7ZgyaoWd0ksVnM
mopHEXCy4x+tEPZ3EAjGKosDHbJB9KgTbJJDR9zFAl9CdoDFhNUUuP6o8sQM1WR863JHm7wRRTN5
oPbuJ4qGoFTdJ/PerVQr5w6n7UBuOA0AiSOTQVydm1o9s0RZaj6SRFFS4GtsIAhsR61AgtQwK5B5
BNVDKwEhZgcTUUFcSQ0RHYEmqBbU7WMGOxNA1mFmSCJj1qIm7DFZEY4Ipi6qBDrBmT7VcTUVzIXc
fKKuBbupt2hOT7mpia8fqHXbGiNx7122BGKWyLmvk/8AiU8RW+v+OHNu4psW9JaRSP8AFDEk/qK4
99a3zMcjZ4XjjPNc3RjOS5/1zUQhYhlTMHj2oOo9J0t/+T0mp0ARNRptOqtLHZckHzD0+2c1uIvf
SdW6h1LTtrrSWltKt0Lbu/VJgNmImZirhbGR4kOp1Tr0qxZvDYAwYgtbM8jd/aqj3emgjpdi1plA
1IVrN4G5sNxZ/Q4j9Kgx7li5fRRpmeyJcsxUQrgkMAR+YGKvg1k3QiWmTT3AjrIaRChye3sR2NLI
a8d7uqHjHQ6Gy2zdbb+YsqQAzcnHG7ECpRs+he6dYnyrvzJXcu4AFVyYJHIHvVibWH4I8bdb8Nar
5/TtY/yGYl9NezbuD1PoftUs/TUuvoHwT8TfDniLTWluX16drT5WsahoBb/pbg1Z3ntm8t3vI3y9
ywZjv/pXSXWRCq6TkE+gqixbYSCCSwHBqCq/M5XbPFUUtaJG5RPrJomCqsCNrKfvRVwcQZOI9aCS
cebB7UAu2/MMQZ70FgVlkFv0oFuupKjaY9qBba7xPmxP4oGCxbIDEn3qKZVG0S5k+gqolwY2zg96
hiGykwGn70ACQxG4GM/aqMferXREGeRVxDyewE8xQKxAKwvuaAb1LxkfigfaDEHBMcxS0V2/LdYN
kjigZ8BQII9IoRY4CmcD37UFdyYUxkVMU65POe9VFVuTcfdDD7UDIFElACP+mgCMVZ2BBA4BHPpT
DUt3N4kzM9qYomHUtn7TRCtISR9S5MVUYV66y3NwP5q1Hj9c1TWLLsbhnaTAM1L4akcU+IviIWrV
4qxLGYE964ddOsj5367qNTq+rhmabMgknMRzmuavN1ZksBEdsVBjFlgRyPSgBAa4iZLFgJiiuvK9
7QeHNBq7T2rxtWhbvKDHyzuYgEcMCSe9aiLl6nqE2oOj6gD5OLmmKuQrThhORMjtFWazcX9K6vpW
1Py7dv5GpRlLJdssu71H3/t+tXSx6lsWFuKhtldRfYfIZM+bMgx3jiqjytL0CwtwnR9R1Nm4wa6G
+bCuZJkcfaD3pkXcY2p6f12xcKWuqpeF6LsmHDd+00vMvo1V03RdQbqj9Q6iCU0tslnVgJ+3OaZh
rcujN8tdXAZyti5c2hQQog+YE/cHmqlaDo2PyLavJYLmKg9HT37iWzBOBzNL5V9X/CrqGp6l8Nej
63UFy7IVBc+YqDCz71rjxGb7bYGI29pE/etoN1xtwR+KBF2htzHJHB7UDwAYbM5FAp+UyiNvlbGc
1NMG5aC7mQA7qqKGMqsTIPfvSh7jREKGB5k0VkKAUzPtFBVdXaVAkknigcBixE/tmiKhuD5nbPNF
XjzIpLz/AHqCu+IUmJPoe9VUsXSy7Su32piLSEcHHmigwYHzBbcKJ4qot+kQROaAPHzF7SKKDqwf
y59uJohwuAIwM00JcRgQyIXIwQPSgU+bAO1oniguIVlBXmIYdpqKTm3t7zRAJIbYyTiOKumBbAXc
SRJ5FA+MsMEc57U8hLUkEnv/AK0QNOysrqGBMmfaimZiJncBEYOKoS20JEgnifWhWBrLSwWdIxyO
1WM1pXiq7cXTt5yBHIMxU6bj50+I2sB1j20uSoJPpNebp15ctuam5e193TEwgEjPNZWsW6FBIJkd
6lRQ6x6/eKofQqW19gA5LiD7zUV2XptjS3bKJqV3yAbu3bOe8cNg9/tW5UrI/l7Taq1ZlbVkWSqQ
sAAEnGeT6Z4q6yOms7B8q8rhwPmXAq+dSAYOe3Oaupg9Uv3LPRr2psPAtjdbVYLK0Sc8jvn8UsFH
TOpC14Pt6/XXxdNuycXEk3ASfKRwR+hrOrjG0+r6sNzjoule38oXES3eKMiNncImZ+1JtPC/QdVO
vbUWfk3le5YCXrBYsdwUDfOOw5q+fse7pgF6B1G7ft27g/lHODu24gDg54Ez3q4NKUQiksdw5Peq
izLpaVT9V22p7YLAH9qzasfYPw5VbfgnSLaKlHe44iNsFzxXTn0zfbZxMKCpwOIrSEupA8qie5xQ
MwZlKvIP2oK3tMNu4mQcZwaaAQFEBZPf3qEZCSycbcTBoKroVQAGPmM4PBqiMZZVbH2qC+drCe+K
GEdASvHPBoB5Q8EwfQUCMFbdtMsokYzVTQTebaEkn2FFOy3IAP4mgAYx5lyKhiwORypgmgwrm+Qx
hipkR6VvUwwBBKsQQcg1BGVXu7RGBSB8Na/xbhQJbZlQgGSDInvQWIzCPMI9IopIK3fY+2KgPmUk
YgyDQNCtGVMDBjmhgoSJG6lAvbcfSPeKQqtmJWVggZNVDx5CABMUC2gOSc8ZoDcO1QI+oxPYUACq
TtkDNUeb1Btls+bHfHFWeUrnnjR7Z0j+cCRgrxTqLzXzf48ctr7igAmYFeXp2jn3Uh/L6lGVRvKy
ZHaayrGZlcYOT2pRBPsI7VBkdHWetaU+UefcJOJojpdi7Z0mp0ly8T/7JV1KkBX3ZWRxj1raG6fb
0nVLuqvX7hZkuMluGYAKOOI5/wB6qMvQ6yOtnR3L169pbNgIbrGbloMSCk/4vacxTDWTqrdz+S1W
htX1ay6G2zpbPlDeWCeM4qjybvh/XvpxoR1S09heLTZUHkAEA/ap8Ya9jp6a/p2jsW7zIb+iTyIb
sAgcJBweP3p8cTWH0EXTrOo9a1dlrLXkP9NMBBzIPbnETyaNNhvtc0/hvXPY1F20bdgm5uI3Gf8A
CcekVqMtHMD6I29hUHs+Gei3uv8AW+ldEtNs+frLYuscQh5or7K0Og03Tum2On6RBa0+mtrbtqBw
AIrqwylEL5WxGTQC8ZgRn1qYIJG0FiPYiZoLiNyjPHaKoDEgqSMdpNQBrnb/AEzVCXQrKAMGagDb
iRxzkmqDI3Qc/mKgMbmXGAcmaAkDzHbA/wBKAqMgrkEVQnzPlsFbA9hUFlsEySJEYiggQjJwtChd
j5Z29szQY15WIBAj/atoQK0Ebz9vahqwWwDumagacA5iOKIrIR7hUSrVcVGRwzKzEN7HkVIU1oCZ
Zy2MUoK8HdOTFAptlXkeUx60BHzAOxB70w04BKyYI9zUUrBl3BQAYkiiIST/AE2BMKDirgqAB86y
D3U8iqHCsQPNJnvTEVG24diHHExQef1DBi4Dn2xW4laB43XbZuFSArKYAzHvWelj5p8csF6m8giG
/XvXl6d40HrhR+oAgEMtsAj9/wC9ZowU2jOfbNFN8xuMT6xmkRkdAO/rVgM0IT5sTFB07+evrrm0
9mw73rK7HUEKAYkDPJzWoyyRr9TvFnVaPUWSrb3UIC3H1DPpWvKeGR017VyzfazDLevA3GCRJWBJ
79800yMtbYXTtde0jAt81SFj5i5UgH32jnEihq+zbRN723UpsDOwGHkyZngj88d6g8zUdU02nZN2
usO9xyv+bAwAxHBgATTVZGoLGwtuU88MxXjbMH2/NNHpdZ1Ifwhrbl4ofn7LTKQNxKlYYHkjA+1W
DT7YJQNKgCg93wavUL/izoml6P8AMHUrutttZKH6FUy7H2iaWD7OuJiC4JjMGK6Rj2KGYcgkEdjV
FYUyTJBHE0EVCJLGT7UDbXgFLox/hJg1BG+YPKxAE+tAFtz/AI29oNUNbtoCW3S33qAuCyhWj1qi
tbe/LT95oLFt7W+osB78UC73HmWCPSJoYiKwbAWO9EW7d1slxiaKqRrijyswWe9TAf6ociaBflAf
+5uM5oKFYhpYYjIJ7/etoFvzKxWARxBmiHBIAPI+1AGAEyDBoopHH+L3FVBiF8yyQefaoGBxBXDC
DIqYukYsuQs1RbJeGJaI7VPQWG2htvlOecxTTC8mN3I49RVDOBumBg/tUEJ+o/5aBM8SUduDGCKq
GBQkkMAePzUVXdKCW78c1pHma+4Ckcj1mIqo5v491AtWW3g5GIrHVaj5t8Y3Bd6w4UyMk59K89rt
Gl+L9Pf0viG9p79k2m+XbdZH1IVEMPUGs0eUY2jbUUYYAE5BFB7Xge1audcJukACy0AiZaMAfnHt
ViV0nS6S9ZW7qNGxRrji46PJEgRJgyIn7VvNZNpx1C3rH1mt1Fy+6f07RD7ltwTEE8SYphqnw+t6
3v8A5lXm6/zGTdKhoIbHrwcelBn6xdVf01tdLq0N21b+WGYQQJOADznP64q4PPW/17Q2CdT03Ta/
So24RaIY+sMpx3+1T408PPvjQm/YNrRG1dv3AQN24gE/T7ketPP2Nh0GgsaG9fNljbuO2QWnaeCB
2j70Kz/EAt2fBKi2yuRqkXJ7SePaYrURqsSCFwOYqVWzfDHrGo6R466Rq9Miu9suHRuGXaZ+2BUo
+xdO4u6a1dUx8xFaOeRNdZ6YMrAEqzEek0QpKswZcxyKL4RQN+KoLKBmBIyJ/tQBHBJAbdGYOCKB
ixDZGO0UEImThSfaoCfpA3Q3tVMKsbQCTIqBlJAwBE0AXejkAoRzgUBJLP8AWRQKGLDZu3Edj3qh
okDBI7+1CISN85k/pUUeAeCBkDvVRikgKN0ZqogAAPv6VTE3yo5YcZEVAdhGAx4mrpgKSZ3D80Q7
GbcQM4qKrYKCBMQBA5qol19m0wSD6A1FEEjAGCODTDRwPL9MD9KegdkDcQIbEgz+aaIQpPkEf5po
KYeZJM94OKsFmGgnsKBG52+ZZyOM0EuQILjdA7VUeB1ZwisVLfg1cSOWfELWFrbKTC/euXbpy+dP
EV03NfffdPNcK6emteK9Tev9ba5furcZbNtNynEBRH7VKPLMngkCoFbPDH9aKz/C+st6PqfzLwlT
HPtTcTHQ9H4g0OrsW9O19E/pnhtu4TwYMg+/2rU6TGcnV9Pq73/uKzBNpCsPNHBPr9xV0xcb9gJY
FxWA2wXAlWPPPYnP6VUwLOoW1qEIuFWVvThuxBn800Zmqu37HzLNy58u58wPuUyrzIMHODJFPJ4L
rPki4pXDlPmAdgexBiRHenkxZpLti5Z1eoS63zUYMNwLG5POf9+aov8AE5tJ4etIh+XuvK3ygSwJ
jLT9+1VGsI7hFmJmor3PA4uHxfpFUK2yxfef/wCEf3pR9m6V1TS2klYFtQPLHYV0npz+1m7d5S7E
e1XAQVTykx+KKOzeSQ0DighV1Jhz+RigCEj61EjEgVBCVKwv1dqAD5kQImaoscAhYAJ9DUCsoiR5
T3FUgzgjBI7zmoFXGCYk0EKuDIbPYmqIZ3S6qp4+/vQRJKkEkRwaCBgZWRu5iKgm5RgurMOQKp7V
AkrkH7CqhdzboiD9quCblNznIqYacAsCeCOaBEYOCFORjPNAYIPaOYqol1NygEwTwYooidoUEk4k
RzUpAVmLMpYSMigYElZIG4enegUEqkEz7mngKWIEAVcE3edSvlPfODSIFsbi6OoxwR3oFt7gpW4O
/NUBidoCqIFIV4PW222mBWOaqOM/Ee/CXNpGBxXHt05cIuJc1HUytq+bLGfPjBri6NI6hcvnXXTq
Z37iGkRx3qWEuqC6ySXkjsKgZXUCQBn1oqyxc8xhR+lVF4QTuIH4FAVYoZS4yn71KrLs9R19pQE1
DEehFEZ+n8RdTQCXVwBENRXo6fxdqk279Gh28Y7xzHftV2pjN0/i7TlAt+0Q8QSZANPlh8Xo2fEH
T3vW/k6pEQkHznKZkwR2/FX5pj2PEnUdNrOlaC1p7gaHY3CCNpgYI7z/AK1v5Spjx7ZIuBG7CoNk
+Gtsv4xUrtIXRXZBPMsgoPslFZbYXH0jH4rtGBG7gEr7ev5oDuEiopmgGAQT6GqGVxtiYHpURXcM
iQYNUhCWIBb7SBQWKAA2TFBW0DMSKgZXUAIUMGgdY7LyKATubayFT7mgDgcScUEQADzyaB0BGdsf
9p5oA0Mw3AelAu1UwijBmqKYJwDVqAynEGGHviqiOCQJPcTmoCrATxBP60VBBftPr60QHkZZSY7x
RQBaJU7hOPWriJcJwyiSDn7VFEHcoPGKqFXchkl3k8REUFrwPMB2+9RSEKxg/enkIwtjBAPrVDpC
ZVTPsaVAIB5+od6DHvEgnbkx3rUK1/rV2LbB4EDiqjifxGdSl4MoKxz3rh268uJ6+62md7lsb2Bj
bxIri6PI61qNJq/I1tuJkjIprOYxvDnha91jrlnR2FLo4YsygnbjE/mk51dbdq/hZdt2xtuXg88D
Iq/A1oOv6dqNF1LVaRQWNi4bbH3FYssVjF7tvDqRFAhusc+1EWh2QAOCJ9aKnzogzzmiMlL4ZZH7
mgD3ts7gRFNDW71snzQY9qo9TpWptWboNs7SxyBwaFbXo76XUgkbo4rcrLcfhmQOqatoJ8+ltyBx
N2g+xC7Eg7TtGJiu2MBvYHgkDPFAwbySAD6A1AxLMmQBPBPaqK/MrxsJB9D/AGoaZmAWTGOZ5oeh
tuX9GXmagjgGYGOM0QPlrkDGO5qqECOBUAdbhhlCgHuuf1qoDIWAIcKRziimYlUnd254oArOoA2l
pyDQMDDTOye9ADIMlp+wqCGduANvE1RTacGEYHcK1YgkHaSGMg8EVDAbeuQAZ596A/YQT61UQA+l
RTmZkgVFKVE+UQCOfSrqYQf5YJPBmiIJ3AAHiqJG4ZJGaBxJaJiKCAspgrIPtUi0P+g4xgnNAkQI
LZ+1NEbYWHrHIqoquZVgSecRirBrPiKPlnaCWHNWji3j621xLkJkzXDqOvLkPVdKQ7Aqa541rw7u
hDPIBE1B3v8AhN6Gb2k6+zAfKd0WSs5A7VeanbsGv8JaK4bzqu4j6VFqCB6n810c3zP/ABBeEtF0
Tx4q6Rc6zRrqr4JkfMLEGPwKnUb5cvv9OUscYHc1zxo/SujanqXU7HTdMiPd1jfKt7xABPeaYO1/
/bBbWj02mOnF1rVtUnbkkCtzlNc4+LPg670a/oPkaM20uq4uNtgBgRE1LwStGXpZ3BBdCv6uCFH5
rGLqm5odSJ2FLgAM7Xn9qmK9Lw/4Z6r1bTXdTorRuJbubG9jE1ZBlazw31/p+na/f6fdS0g3NcwQ
B6mK18amxb0/qBthQ7EEDmMGiY6f8Gv5rqviTS2dPdtJaua7TLfDDLwSRFJ7L6fZlzyksoIBxgE5
ru5FHmz5p+/FFNBQEhp9qgKwyDIkUAgngzQNaktj0zIoowh95PAogGGMBojkGhhANhDAD/tJiqGD
CQwOD27T96gN3ZtHy2K4zmaBF86BgZoCVMAYH3iqqATMb2jtxRKVrskABQZ78ioHf65XIPaiEZyv
lZDE/imKrGW94rbKSYEcf6VMVATs3ASOMUwMCDkrFAFJJM4/vQBpBwR7UBYnDBv7igKlSZIgjFAj
8kj/AM0wAMzDcpj2IqoFuSPf0iijJWZnbNDRbIBgT3M1BFC7YJJgcHkUCxEQRV0IzMFIfaIJAqxH
i9Ysb7Tf4pyJ7VqI5t4p6Ot5HGwGazedalcz8ReHwqswTPpWOuWpWl3tCbV0qw71wsdH0H/Cvct2
endR6R8pTcvN/MbwplcxB/SRSJ15duu/LWxduXrpgJBJtzIqpj5U+PV7TeIfHd3WaBvmaazpbdhX
2wCRMxPNanknhyrW6EK22NxrNabH8H+iXNf8Tei2UUkrca432VayV9eWenaQJs1GnlRPnVTLV1lc
/LmX8QXSV0vwp6g4tqGv6+yqsTJjdMj3ir9H2+Y7+jKsZVRnmK51tQ2gAViFBgTUsV9N/BfwT04e
AemXrOmZTqF+deLGS1w8n7Veazdb54l+G+j6j4X1XSrC2fmauwVLumJkGP2rc6npnL7ce8I/Br/i
tpmfXpoWtuywLIMQY5Bit/GXynydP8G/CDonh7q2h6jp+o627c0hL7LhXYz+sAVbOf0bXSg7Jg4B
5rILHzYwY5HeqIxAMlRuI7ChhUAwex9aAbllre4Ax5THNQFbvdYkCDigg55HPNACJY5IM1Qyyfqx
j74qGjtAXA/SqIqqtrae59eKBEVkXapGTNAXuMDtfOeBUBJeRsDETgzxQh5hCzW2HqSKCsMrLBiD
xNAwaSQYkfvTRisGVfqzyK2g2yeZNESJgZGfWgKngAioA07c9u4qhUJAKswPoTTFOhG3aWM+tSwE
ZADfrQEEARPFAGPOCfxQKNhYSMR+9UOCDwoOKiodoIUiDE54P5ohVVgCRtMnBnMUMG5aiGHftTRT
cBEwwI+1a1GDqrO5OSPatRGv9Y0QdGkcc4qjQ/EfTtlpyUU4OQKx01HLtfpQNc3l5Neex2ldk/hv
sGzqesXwAJs21E/cmonTsuuZLPRNVfYCPkuZ9fKaknlK+Wuo9Mc2pIIBrv8AHwzrS+q6H5eoOATX
OtSvb+Hlm5oPFvS9Vp2ZL38zbtgqeAzAH9q52N+32FdRv5lf6rCJAWPqHNGMca/iK6qvULY8KW9O
Qlq8mqvXSeTBgAfmunMo4HrOmW1ulcn71LFlKelj+Vuuonah4zWasfYnwt6fa0fgToy2b6XE/lkO
9DIJjP8AtUmM3228N/RfAgKaz9tfTRfDOnW1YIWEZmZvYya9fPpx69tgDwAroI9uDUU42kQQwBwA
agAJt3AhEj370DsZYLEGhAIIUbSI5kCYNUKCSQZB/FA6jazEQwOeMigVAYElDQF1lVMgGoAN8yB2
iqHUA7d24QKAQskjnuJ/+RUBJLKsArkmCaBdw4dfzVBH04kfnFBBcBODgjiTINTFR2YHJ3LREubV
MsuCOQaoxVYkzyBWqyL8gjg0BEKkZ5x3oIQCQR5W/wBaCJOZgE9hQSBuEdhmggBDEwCZ4oGgzIBz
UUobM7ZHeKCNGTkA9u9AFIC+YjdxmqiKMMgznywKKWybxuBTAYHGaBnJmVUjPBqQMWJOc1cTWOru
1xkZSIH4NXAjea1uxPB9qsK87V2pt7iI961GWn+JNPFl2wQeY7VnqNRynqWlQdQI2yS2MV5+vbrH
XfgZpDptF1K7iHuosesLNTCuieKGCeHNSD5d1plj3I/81OfaVxbrGgbayqhiO4r1Z4c3POu9Purq
fOJAzgc1w7mOnL2Ph30/5vizpFsqQv8AOWyTHoZ/tXOxt9RZLlhEhv8AEex7CjLiXxGsHXeJ9dqi
pIlUUx2AgV6OIxa5r17RhTuCzWe4sqroekNy8iDG4wa5Y6Por4Pi5b+H3T1Mhmu3WE/95qSJa2bx
B/MN0pBaZ0JcJdZDEj0rXOazWH0/TfKVQMEdiK9F8RzejdRoJ8vtFY9tKUdbg2mJAESMg1BYPMRb
YHiJqhAtwDbExwZpCiGZUJCjcO0VcNFG+an+RoxiIqGmVmVRMAk8zQMbcES0D0WoeU8waMRMTVCg
IbhPH96AgDkMc4ANQM8sAQMj96CPDAAkKwGDFArK25TyvduxoIkriSZ4kcUE2BmABAPrQG2WJcSJ
XEUEuruA2CBzE1YMZT5yI4rTIMG34kCeaCFSRBiPtVURuAggkCoiINuV/c0ELeaMD/N6UUWXzA5x
wZoaYLhiGEnKiKgqRggKXABk/mqHMgeUT6VMBQXDg+XGN3Bp6AVpwcEj1q/QA3Egg8epoDJHpRFi
MhXcPTvWWmPeDC8rqBEZJFajKC0pUjbE5MVdGDqbJFuPSrKjVPEYCo5BiecU69Ecx1GnN7qTMBJn
Ari6x2f4V6QWfDpPe5fYwOcQv9qxVbF160W6V8s5JyFn34q/jZrROs6UG0/lyR2H7V6vpycu8S2n
GqUAECc+tcOnTlsPwz0Y/wDqnpk9rjP+QhrFa13PThnl9reUbjmKz9jnvXenJd1F+/cbDOT716ef
Tn05t4r6dh9m6DxWe2uWN4X0dwX12xIIOe1cMdHdPhhZJ8FdLW4ps/02kDJyxINRGxa5iETTso2B
9xY9z2rXM86Wq42NuAB7V2czl/6gMSpx7VFVXk8xIDbeN0xFQPZZmHqVHfFALpOCwEiiigJ4ZvYi
qhxundGR3oIYaVOJ7xP5qGECqAFLGf0iqGGDH6QeaBbtsgkoIjkU0FAx+olVjmMGoRYVUKApDN3H
pQBmIE5AqhQy7MAj2mgco5AdW8tRS7m2wy7gDyooC+0yGLFh39qCsxwrsGnuKooaQdwFaZEbozn7
0DCdskd/vREgiST9qikIEyZBPcCqhp80EdufWgjAqybQPRhU1TTB2EAAjFDSXDiCJmghbaBE1cIt
3rAgGZyOxFTDVTrNw7BG2QKoVVYjcxg9weKIe2ssMLB4iopdu1xszPIPaqBJ+cZAAOBBoFbeCdxy
MQDQY+sMgrPGR71Yza03xRcUIQJ96deljRtDbF3qIAGSa42+XR2DwBbCdCtKFaGZrgJHqxrNV7fW
iVtgMNpYBoHHvV49s9NN6vbOx8sM4Nen6cnPevWFOqMke01y6dY2f4X6W2vX9O7TNqxccfsJrnVd
NsfNNnVEmFYxtJgH7Vn7K1zqWkX5RPCnsa9XF8OVaF4qsWxMLx3qdNcvM8P2raG+5E7ULce1cW3Z
vB6/I8P9OtCBGmTjMmJmsU16eoUPefcTiJ3czFa4KW2ZhNhEf/JroyXyHBO0ns2KBXHlAEE595qA
ETDq0HvIoHA3Eg9h6VQltSGYK5EfrQXeVwNwInuKgG23G0G5PrMRVDAqEIiYHJ5oKhkeQExySaA7
dwgsAYxmgiAjyFlYjgCgKk+m0+xoYsiSGMgxkUCFgLg8pYHvUFi/ThgAOAaANMj5TgHuI5oJbM4I
AJ7nvQAg+YG6Y7igxdzbcx7VvGREhZOKAGeR6GRQT5k7Z4bFMEeZBBxQRgVIYAlDg54qaYJMAA7T
GfT80xTKVYxEg80wAkAwwMeozFFTuZBZTz9vtTyg2WCmCsr2xBFLAZ3sSImPSgE42x5hzT2J2nzf
YUULjCAQRB9cVUVFoE7ZjmDQEgO26Jx60GNrFVAX3RifqiasrNjSfE5DAj/N606WNS6eAuuLKI2g
wO+K410dk8HWQOh6FJJJtDPEk5j96xaRldZYNd2Ri2AJ4rfEStc6wpCMyMSIx7V3c3OesydSCRMn
j0rnY6RtXw4u/J8SKuyUfRN8xgOPMAK51XRNQdmmIRioN4iTn9Kzz7K8TX7VlSSfevTHK+2i+J9j
XGTggYxg1Omo8zpllf5PWbjBNkgEd5x/euTbrdpX0eg09u1KstpBJHotYvgnlnWbr3bBdyt25OSr
ftWuYlC8GmQpBA9ZrohvLA37mB9TQY10bWXaTGe9VAaAqnP3morItwBvH2g81AVZRePuMxVgbO4i
Y/HFQB57sT9hFUgo0e8c+tD2YlVTegBPeihutOsQFPYnGaiK5RWwgx39KodiCkqQSO8TFBA5dYQq
zRiRigAcghXBDD0XFBDAM4GcEVA5dTBCgsP1oAwnsR2OaBQjgFWMUFBVYIHHP5rbKMxjKbvtQEkM
ODkc1FI67gAvFXQ7M2PJt9SKGGBG0DdA9KlCMpCEwD3GaArwIIEj9KtBKypO4z3qaAjkHiD39DT2
ehW6pM9o4/0pi6gfaYKNNMTU3bvOAZ/emCLcDyqmWGYpgHlII2gwOKAETwSPtVQqyJMT9hRXna+7
utMAF/2qyI0/xCQ1vcMkYPtU6WVq+gRrmqupENGK5Ojt/TLX8roLNnZmyqqfTis1FPUHW5qLhWAv
ofWt8J1WudZXarAAk54OK7Obn+vXf1BcGASIPpXLp0jc/h3a/wDXdYyjyJpLaEgYkktWLVbxqxaT
SJaDGSWbPbNZ59jx9eQUgxMRXojnWjeJlAZiAfY07Xl5/R/mHTPbCFzdKKPywrla27Elr5rKc4Eb
SaxasItg6b+mrAqM47ya3yzVm0cMYraKLiMhITcUBmJoKwFY7QCO9QQllEfUP1qi3T7j5iSIPbvQ
WKqLckhjPoKglxSeATHFU9CrFlAPYRQFy/cEnnHaoei4y8ANxiqAzMSCy/c0BReZMgd4oHVMkNAk
0CKzCULAicACgaGgPBE8gj9qgiMQpDGPQziqGUjaNpGB60XStOWJxNRNKXKkBXYq3Bqqx4dlDAwe
4rTCRgfUpHpRTDdMkgj1FENJZZM1LFAk7e9ACitlj95pohQKArNuHM1d0JsAfduf9JoIouhmJMTQ
OjGRuAHuBigayArkZyZipQL/AJWiDP2JpCgJKqQVE87gatQL6MoDHBHO309aRRBRgCAAex96AMHK
gyAQeAeaILG4BJgAiQYxRXkdWDxI2A8yG5rTNaP4huOEYSQZk1jpvl43QFN7qdq1Bm5cRBnuWrm3
ruemhmYbvMWiDWajB1pP8y+MbogCt8M1rvXWcK22IOPeu2MRoXUJGq8o827Fca6xvfgFha0etucA
akJJHMIP96zaNsvXPnaNNsEoST2jOKzz7HkdSQm2SrAMeK9Mc60fxHmZIBrPaxX4ZQtq9IoSVfVW
wY9s/wBq5Vt1zTD5TOx4CMTPANc6sYhLFpwcd+a7cpV6hXUczVZV7f6pEkYqqrvIQwcMSvbHFEVM
YDDykH1FTBZadlUEEbT796otjzjgEA8ZmoGmQoJgnH2oYWGV88jn7VdEkKCJBmggvKSYBHaOaYhY
992ZxRVlgLsBgmOPaoFdlY+dQx9SKFNCBZRRNVS2xCklIntFEOBJBmR6cUEViuIG31AqAEtuJUEg
4MUEa2Swgt9iAKDHVsQQBW8QYwTyD60QqqY5j2pqio9SRRDCRjkGoE8wJhvwwqgqFP1DBEQMCgkF
BjIB7ntUBD4iRmmKkkRAkHmqCDJDT9qgYGTBgx3qVYV1wfpMfoaBSo2goxAIxmaqFIcckT6g/wCt
WeQqDeGJ2kqc1URGlJ3iBjPeivK6sEI8hBxVjP20bxHgkwJj9cVjpuMbwLbuXev6RF+oagH8AE1z
bdftFxeLRyeBjms/aMe6znzZBkg/rXXieGa1/rhi25aMGtsRz3UMz69TGN37Vyrq6T4SsL/9O2Sq
qC9248n7/wDisU8vevK4t2k2KIWTFXmI8rqTFEx9Pf2rvGK0HxK/mJ5E8VntYyfBQY9U6dbI3/1j
c/RTXKtur2N3yLtxgYKnBzXO+1nphblCqREgRFdp6ZvtcGZrG0r5hxNVNKu/eGiIHeqFdiRtMc4J
FBS+0CdpHqaC6yq/LInDdqABV3kgkRjNIU0l8BhuHFEMu5lG7j09KKlxV3eaRH6RQLbKPIBBoGBa
35flkwcGggWGFwblMcSKgZir2ypA9qvsBSxQZ49cUBbmDnHFAVBieRxmgKCSSSTjtQDftG4mJ9DU
MBQJJD/kUNY1zeqSMkczW4yluTjEd6BhJxI/SoqZInH470BJnPf1oBAYbSJ/FVCozRBXjiirElgV
kzHFQLHaM9iRSUpVYzER7VcQxXynbANRUtggyYnvFUWqLfzcbeMg1lSBArPtAA5iqmKrwcsNpieD
ViEtBw8MoB7kVQxBtE7YjmKQed1dGNj5sCeDFIOe+JMvIfkVjprlk/Da2T1vTkruI3tj/trDdrp9
ssrFiuQMe1ZRReIZDBkHNdufTF9ta8QuAjoZg5BIitVJGkW7Y/miQ24AzXKtx1LwkgToGhtsgLfL
DEfcz/esVWffvhdYECPAQ/jPFa5SvN6iFey8gqRz6V2jFc58QsDdKDk/71jtrl7XgRR/xbTmSPl2
naPf/wCGuVadGDE6K/xMDb61n7VXbBIC7ZxJiu0Yq3bnyCRzAoMdndSVgrmZigLgMwJYTGRVFblS
QGgTigZAykKQFAH61RYBbe4WDNtbMzUQ8AHsM96ilYFYYOAPeqHJU7SCIHNQQKm8lV8x9KpBAGd3
71FEAASD+aIVwWXdIBHos0EUTaIlR3FBGhlUEsO2KohVVlg5DCgQMIL5g/pQOAjAAgXJE5FQBV85
ABT/AGqijzSFUyY7nmtIUFiBMgjmiHUyTxQEkAYqKk7hgUAHI5kUEVgTgiRzVwMSJDZPbNQK7hTm
P1pgD7Wg7sfvVAmGgzMcigbdAkiftUEMbhJieKqGB2mJPHPNSqDsB+TjHFAHBK7lzV0V3nJUAjj9
auI8vqrkWiNsz7xVHN/EbqzjacA9jXPqt8ti+GAH/FXO3P8ALmAe0kf7Vha6FcRmRm2wTO37+lZl
GFq0CLuJjHArvy59NQ8Q3yAROIwT2q9HLVtO+67f7EISI+1cXWOrdGDWbemtt/htICPxWajJuKG1
F5p27mnNa4SvL6yjIhmZFdYxXOvEOL5JGD+tY6ajZPh+pHULhgk/ywAH/c3/AIrFadBa2x6aB/mu
ZArH2pVHy+ZH4mK7MUt+4oAAnPtQUtu45oFYNEfsaCW9/lDLOwyaovcKdwUAhuzDvUChAI2sB6gi
roI3iQFDg+tEKrYkAMPSimQqQZBAP7UBICw0tA5gcUDKymIgg94qAOSkgSJ9KuAKQMg5+9BA+0gA
Ag8xzQMQHAAaKAFmBhrY9NwoJ8tt0b9s/pTQCuxhBVfccGgJcgEhhPYmgo+sDseK2gKxVobuP3og
PM4BGfSoGkjsc80EAgCCKLotO4ECZ5ogMW3jjj1oCysQM49Klqwqh1uQ6hl/eqBB37kI54NBY2ah
gbgFkgifTNX2Gm2ywyqw9KgQ2wpBBgc4q6IxcLI2kChqDdtMso9PelCXlY91MenNWI8TrKxZYFic
Yqo5l1wN894MgnNcunTlunwzQqmqvgGUVEE+mTXO+FrfWvTZMH0x7+tMR5et3ta8xLeld56YrUfE
6D5DMNysvbtTr0vLWOlzdvEKPMWCx6ya410dl0do3NVbSApUAk+gFZtQriTdPmbzmCK3wleN1hn+
W3mjFd45/bnfWFRtZDP5i2ADXLp0jdfh7Yi1rLhGdyID+P8AzXOq3Zz/AOn2EmCz5H5rM9qxOoav
S6DTXNVrNRZ0+ntjc1284RVHuTgV2ZeH0jxf4W61qjpOj+JejdRvgmbWk11q64I5wrE0llMr2GYK
VJMD7URNwLf4mBiDQXIuyQSfWDirAIVnCuYH/dxQG6hQZyOxIimiJAXce2KURWBllVT+aIWFBBBI
nG0iintkklSCB2M0EMqAMCczQEkMsMYIEUFbKBk8f/O9NMQbVaNxHtNBar4zBg4NAdwYQVCmoBcJ
DHynAmZwaCt97HGZ4zVQxyAAM/tRWGAw4MZrcRZ9zQFmKsIjPNTEQsJlhxxQTcqicx6RQEGQD/pT
AeTEUBBj1oKdzi5BPH60VZ5Hef8AEMcRQNB3SDUBcg9h+TQI4WRgE/arBCCJhT9qI134m+GLPjD4
e9b8NXQI6ho3tWyeEuRKN+HCn8VOpsxZcuvn7+AfxRdHRvEXgDqQZNT03U/zdm0/1KrHZdWO211U
/d65fhvuN/kn21TwfrtN8R/4tuv+OtfdB8PeFbd3VLeOUW1px8u0w+5m7+DU5/t3t+lvjnG03/4l
9T1ptVqPDnwu8Q9V6NYuG2+vtsTt7+ZVtsqmDMF63/NvqM/DPtuvVblxtWlxkKbyNynMY4p0sdK+
Gun/APTNTqGGLlwIJ/6R/wCayWtjuK66YTG7fxUhWHq2hSJGeJrvHO1p3ii4wkMBEcg806WPG8N2
weqafOGvrEfeuNdHXdHeC3QxEFSfMBNZ9oCFfkFxkEk8zXXn0zfbyetQbRlgAe0V0Zc46oAeoif8
2K5dOkb/AOAwq9HvOZG7UY94WKxT7bJ1G8xGkMQSuSBxU59lfHHi0dR+PH8UOv8AAXUurarT+FPD
pu/N02ncjf8AJYI7dxva4+3cRheM8y/26xqeJrYfjj/Dp4L6B8POoeKfAlvX9E6x0PTnXI6a244u
LbG55LElWCgkFSMir1xJNiTq/bo/8LHjvqPj34QaHqPWLgv9S0d59Dqb/e41sKQ7f9RR1J9TJrfH
WxOpldWS2GO6Y9K3rOHunCyfMO570BG1rkgEGMmOaIJ3shG7giikHkaSI+5xRDz5dyqpgzxNBGmV
YAAe1FTbmUBk8ie9AGBI86x96IgYdiCKKJYiCs7T2IoFWN5BOOwjiiHCkAKPp96KYs+7aVBjuTQL
cYhhsxPtxQ05gIRKk+9BU7w4S421owJoijnIEQK2Dkg8fiiK9zkkAfmmC0ZENg0EdfLIJkVNVEcF
AT3xRDRjEUCiQM80wFmDEHYYHtU9KULB3IRHcGrqLIOT61FDbPJlvSmmEZS2Rg+lUAi7gg5HIp4Q
zHO5sEc0V8KfHa/1T4N/xF9c674fHy7PX+n371mDA/5lGVzI7rfHzAPZfWvN3vHWx15/tHRv4XPD
HSfDn8N3iXxP4mt3F0fXdPqbmr2DznQ2rbptHuf6pHruFdPx8ycW1nq+fD576/qek+ELFi98MPir
1rXfzGom5oLek1Gie1jBYzsuHAUxz6RXG5P81ubfcfVPTNTr9T0fpL9WQp1K7pbTapdsbbpQFxHb
zTiu2suz/D0FfDOn3QGNx2ae+YrNR7+qsqVRFfJJYHj8U59leTrwFDFgcfpXeOdaD4pv7d0kkTU7
WK/A4+d1jRjGGLDHoK5V0dZW3ataX5q7ixgQfWs7lRTuAsJAPE/eus9M14HXrpFtgpPGBXSMOca4
s3UhLHD8TXLp1jpfg+1/+X9My/8A6lx2b/8AtWL6X7bLrgPnWrcxtTipwj5G+JHh/wAZ/Bz+IHV/
Fjw70HUde8P9VLnqFrTLL2/mQbitAJXzqHDxHAPusvPWxZlmMP4pfxFXPiT4V1XgX4eeDuu3uq9X
tHT6g3LSs6WzhwqWy0yPKSYgEml73xFnOe3c/wCGbwBqvhz8KtD0Tqmw9Sv3H1mtRWBW3deBsBHO
1VUH1IMYrfE+MZt2unny4VhkcGtMq2LiQ0R6EVrEFLj5BBj7Gh5EOds7Yz2qKBWRIMkYIIoFSVaI
H3FUWcgiDUCgsAQD3kVQRcM7XzUAKCT5iQe0RQO5CpB59KCtWnyhdx9faqgIV4djzP8A4qYLki2S
JkMPvRVbGLrlRmcA0DMwc7HQAnuR3pQNRbF22Fe2rMpx6j80FWIkd+RWmUAiR6UUrDaQQZqhHANw
NPHvRFjHbthuP3qAhZ8ylft60B83YYNRSMxVwG4Peqgs+3OTPpTAQZEjmOKCC5jaYUimKbeduBxz
TDU3AyRUNEkEZ/WgU7SCDBBqweF4j8J+Fuv3LN3r3hrovWGsgraOv0FrUG2DyFLqYmBx6Usl9krK
Gg6bpekJ0vSaDS2en27Xyk0luyq2kSI2hAICxiIitSYlaH1Lwn4S0F9td0/wt0PR6sSRfsdOtW7g
P/cqg1m88z6Ja1ZXLatWYGVOTXK+3R2bwrYKdC0SLAb5e79c/wB6lHq3STcW2ey+nFOfaV5nVEm0
xEg984Nd4xXOfE7edgREdqx21yzvhzZnrKPEBLTMZ9TiudrddG3OLV1JMRmoit9vyQACMV1jNaz4
hci0Yn7zW/pmNCu+fXzyQZrjXSOs+DrW3ouhWCCbYbHcnNYq49K83zNW1wggRweRV5SistxAP3rq
jgnxK/h+6vqviDf+Ifw08Xv4a67qSX1Vtlb5buR52DLJAaASpVgTJxxXO8edjXy+q674B0niHQ+D
+naTxV1e31brlq2V1urtqFS45JOAFXABAGATGc1vmePLFv6e2PMNjkgjgsK0mrdsgEmWGD71FL9C
EKBHtzQAFkBkxPegIcMJ3ccmaIVvMsknGRRRCnb9RkigdAjCN5nvNAuIB2H3mgdpiMGOKAG4rABs
EYmiCAqkAEA8jsaCthAg2mgmZminFwq3bA70AYIUClZAMie1BEYEwIn3NAwLiDtmiqyZ7VcZA87q
IWVJB/WrSCyKwqSqrKwNsyR3qgrH+bg0DqGnJHrRAuDcCJFNA2mI+oVRARskiR+kVBCFMg4b3oGV
f8WP1oogLHmNQQ7B3H4p5C4+ZBC7SKqaFxfIdsL9xiisXUhktjcBMZK1pmtV8TPt07D9KnSyOe22
365gV+skYrjfbrHdei7U0GnT0tqP2qVHhfFbxh0vwD4Q6l4p6uxNnQ2gVtr9d+4xhLY9yxAntknA
pLk0zXzr0LxX/Ed8Tult4n8O3OgeFuhX3b+UW/bVjdRSQYLI7HII3QoJ4xTm99eYX4zxXv8AhB/i
C2h1ln4ht019VbvBNNd0YA+akZYxjkgAbVODI4q/2/8AR4+nL/4bfj91LQeOU6b496hb1HTeoKLF
rWNZS1/KXJ8pbYoBQnBJ4wZia4zr9t2On/HT4k+NfDv8Sfgbwh0PrY0/QurDp/8AO6ZdLZf53zdb
ctv52QuJRQMERyINW26knhg/xOfEj4j9C+M3hvwH4I61pemJ1nSaUK17S27gF+9qbtoFmZGIXyrw
D3rfXXUskSSZtaz428a/HX4XnTavx8nRvEfRr1wWn1GjUJtY5iVVCpIBiUIP3q9dd8+0k5vp0jw7
1PS9c0Wm6z05mu6XV2FvWmIgkETkdjS+Vdx8PW3TS6K2TIFpBI+1ZRn3FDaq8wzBArXEKViAfMSJ
/WtshJiR+/eqEJUEBhtn25oAU7GCRwef3qoiek/kGlBO8MAW5H61FGSe7CMUFbsqkEjHc1pADEzs
YEenegeIyLh2+hHFQE+XlvaaEMq7lXcMMJHoaigFKmAoA7UBcFvrX7zQWfUkMAxUQDwaCnA7ET69
qADaHjJ944oGYeYKRmgjWhvJZQwI/T80RCMDacelFJJAzWmQct6c+lAODEftVDemTUBZQTNFV3PJ
JMfegSzeFwwiHaO/rVRaQqkg5B5BqBo2jFASJUmouK1ILdpiqgrJ4GKBx9OQKiqgAAdqggcVUTeO
AIagCsYmR7g96Kr1DBbbAryMd61ErSvFd4LaImI4rPS8tI6SN/VV3AwbgB95Ncq6O6ae2BcXYYAi
BWajh/8AHP03X9V+CGqvaJbr/wAh1KxqdQttZmyA6En2BdT+JqdT+q8+2f8Aw7eKPD/iD4LeHNP0
3WWG1PTunWtHq9MLgFy1ctqEYssyN0bge4Ndvx2Xlz7nlxP+Hbx14s8bjr7+JeqDXto20xsk6e1b
27/m7voVZnavPpXLjq9e3WyRq/8AC78O+mfE3wR8QeiaxVta60NBd6dq9snT3o1MT32tww9M8gRy
5myrbjwOh9X8Ra/4+/Dvo/i22ydU8OdV6f0Zjc+sra1pZdx7kC5tB7hQc80nuLfTr38TbL/+MX4a
5BEdK/8A9C7XTr/cYn+a2L+NPxT0TS/DXUeHH1mmfqevv2fk6dXU3EVLgdnIBlRC7ZPc10/NZ8cZ
4nkPgLoNT0/4e9B0OsDpeFkFkcQQHcsFPpAYCuc8RuvqPpiW1dQiElQAD2AAqdMxjpva7ehubh71
04KJEHzgn371tkjKf80igUMZ8ykjiDVQy20+kqCvv2qKX+mGO1VDf60EH/VzGKoC2ybhKs8f5Saa
gNbUzJUE9j3ppiKNpG4mQe2KUGcsCQVPGKinACrgCgWSWjEDigbdHMioGBnnM0EP0jawH2qislpw
WxxNBGYMgJBBFAfKxDAAGO9ESDysT3opW3mAQCCKoHIg4IqsgBmJoISwiRNAGLR2BoGts23zATSh
T5j5hg0UG8kRwO1PYZriLBIgHGamUFtpXFUQmCMYFEAQeKKgXBiiHTgxUUqwZyCR6VYibVK5Amiq
jbYTtMkVdRi6ouLRJBHpNVK0TxWTtuQQSfSs9N8ta8PIbvU7ak83VH71xb13PS7jbUGCxXNRlj6v
TabWaW/pNZp7d+xeVku2rqhkuIRBUg4IIxFdOUvh8+eMv4Y/hdrdde1ulsdW6XvcubGi1Si17gB1
aB7A/apfw80+dUeCvh54c8A3NVp+gpqv+bZPnvqL29n2btvYARubgd6nxnPprbW6/wANnwv6D8Ou
n9Y1HR9V1LUnqr2lvDWXEYKLW/bt2ov/AO40zPA474nOLbr0fF3wU8G+Jvib0j4iapupaTrHT7+n
vgaS7bW1qXsOGQ3VZCScKpgjygDtNWcy3Tfph/Gj4GeDPib1ux1zrup6xp9bp9IukQ6K+iKbau7i
QyNmXb9q6X8c69sfOxoGh+AXw48J6tdZZ0Wr6lftZRuoXhdCn12hVUn7ip/Fzys7tbj4cVH6pZ28
G+nb3rNadx6VcGwZ7EmsVGNZwpkn6yZrrylG5AA80/nmtIDAAAg470COBuA9OKAS28YFEMw83mx7
CioM8EEe5oisllMeYfarAQSyAGGM4nEUBUAZkD78U0xGOIIgetAyq4GYg1FRUOcjPFBArntB+8ig
O5iSrMs+1AjAq3cr7dqAnAMNmgCsWgGPwKVDbV/yg/fimmIpAI4GMUUxuqWCfSe0c0FDSVwPzWmS
oWmDFFMJogHdECAZwaBu3vUUCcgCqiETxmmqWCoAZSVPrQRQUJEj2oHz2qBQ24RtgiqGbP0nnFER
ccD70Ctg7lkGYNII3IMQaA74kd59KKwdbG1txgRWksc/8XFgG2kGsdLywfh9YOp67ZCQJY8jiK5N
11+3u+YWbAXyj3qES83lkH8RXXlmte8QE/KO5guMRXRlzfXk/wDElG4mWrj03I6h4Kt/L6BaZhG/
cyj7msK9sW2m2wVipUkVeSqNd8mNyzMZrtHOuf8Ai5wUYoAfWadLy8vwPZ+d1zTiBHzJE+wJrhXR
2LSpKuWwNhmO/tURXpwBYBjGSP1rpz6SoZdcQf2rUQpVhM/THETQKLigbZUHtNMRFZW58poAV83t
RTC2PqUrPcetAyMpYhsTgAnvRFdwhWI2mPWgVbgyAxn7VcDgbhtH6GoCD5YbAFFBSJIAIP3oIrMH
BXI9CKFQ3F35XP8ArTBZI5A5FAuSN2CBUCrtkttj27VQ8IRG5oI5igrW1tUqSTJxTUFT5trwI4oE
Hf71pA7j3oCnNALmMjmgVWJ57UVJO+Kgc+XI5NVADEjNRSKx+c1s5AzVQzMQQB3oRW5IiKqrFyv2
NKhrmACKgLCVniiguRmoEv8AlUxWojzuokmyQTOK0lc58XsVJAPr/euXTpyyfhWA3W89rTMPvXOL
XVT9FCMe7jTBhzXbn0xWueInb5DTnHetVmNAu+fWy3ImK4dOsdZ8OoqdB6cAMG2JrI99xu0yqeAc
R2xTmeR42sULbJFd+XPpz7xeSCY9KdLyr+Gqhuv2Z7BiP0rhXT6dY05/o3PRhmp9opsjZp7Uf5a6
RKkkXNsmK0gNOfMe9ALMOiyB5hJqBGG1yBwK1EpkG4nJHfFShjgKfUkGii5gE4oQSAUMgUC7ELL5
QJ7iiVU5KXkQZBMGaKttGcGI9KBSAHMDg0Q74RSOaVSctRUcbRK4ihYIaXIgZFT7RLZgbR2xQJvJ
k4mYqgpcb5jDBAaKVIS6SSTMH1qwf//Z

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/digital_sensor_schematics_preview.jpg

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
2Q==

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/digital_sensor_connected_preview.jpg

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
ShQpDDUDPTzpwKuelChQIeUDHShQoUCZ/9k=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/digital_sensor_log.png

iVBORw0KGgoAAAANSUhEUgAAAa0AAAFaCAYAAACtwQKWAAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJ
TUUH2wkGCwIJ2+lOJgAAIABJREFUeF7tvburBV9237n2ef6SThoUC+yexp4GK7QNpulAYWMnssOB
kWY0A4KRbRm1jDNho6axsDtQIzFGgREKFI+iEY1QqFCglpBa7kD/xO+e13Zw9K3zPeusXbV3nTrP
+/3A5d5btatqv2p999qvSt/+td/JJoQQQrwAix//zf8YCiOEEEI8BbOhAEIIIcSzINESQgjxMgyK
1l/8wXdHnRvLLe4Jonvzsb/4g++e/ZSOl+5zy7gLIYSoEK1Hck/B/Is/+K79w3/1a2c/eMY//Fe/
1v325/y1U8dLCCHEiV7RgjG+F/d+3hA1cfFxlnAJIcTtaPK0arrHovND/0cgTN/9ap5VOiaEEOL1
WJROeA8i+r90rnSsj5LHEt2j79xYIg8pSlPpnBBCiNsTilaNIETjOmOped49GBLePhEXQghxe4qe
Vit9Bpw9o3sb+2vEVAghxHNxMaZVKypDYjB0HtQ+z6z/njgHYcTPFPfuI/I4a58phBCijfQP/uV3
zvYe7DO6fkyHww6NByHMUBecp28cqXaMqTaepXORoJXiIsESQojbcSFar84YYRRCCPEavJ1omdV5
fUIIIV6PTrS+9vf/3lBYIYQQ4u7w10iaFhcLIYQQj6Sb8v5ff/6f9YUTQgghHsQ/s2//h/9uZvK0
hBBCvBASLSGEEC+DREsIIcTLUNzG6U/++I9Kp4QQQjw53/zWzw4FeUl69x78+V/85b7TQgghnpCc
s/3NX//o4vjf/1/+1yD0c5FSsh//1Z8Xzw9umJvz2609FkKItyUSq5bzj6Smh09jWkIIIV4GiZYQ
QoiXQaIlhBDiZZBoCSGEeBkkWkIIIe7O177+jaEgIYOzB4UQQrw/XkT6pp0/EomWEEJ8cr729W9c
iFR07BmQaAkhhLggErHSeQgchxm6fiwa0xJCCNELBOfHf/XnnRh5EYJw4YfPR9ePRaIlhBCfHIgM
/0Rhor/7jpXOD4XtQ92DQgghBse0pureuxaJlhBCiEGu8Y6mRN2DQgjxyanxoqIxrBaiMa4xyNMS
QohPjp84gWP+fN/swD6i68ci0RJCCDEoQn3nayZmDN2/FnUPCiGEeBkkWkIIIV4GiZYQQoiXQaIl
hBDiZZBoCSGEeBk0e1AIIT4Rf/LHfzQU5KkZFK2/+esfDQURQgjxAqSUhoI8Pb2ilXPuOy2EEOKF
mGqt1CMpitY3v/Wz8rKEEEI8FZqIIYQQ4mWQaAkhhHgZJFpCCCFehm5M69WnQQohhHh/ziZi/Pwv
/nIpnBBCCPEQcs72vf//18wsmD2oae6fi1J5v8N6DiHeAX5H++yzf2ff5R32s9gHFxeL18dX9Ogl
wO+U0lllf5eKL8Qrwe+lf0eHGpr8+x3fZYnWG+Mrfkvln81mF5VeCHE7ovc1em/78CLFP/78q1IU
LZ84bon7zIuOiceCyn44HJoqfkrJDoeDmZnNZjPLOb9FRRfimYne1753tWSf+Rq22WiIojH6yoSi
hUT5RPcJl3ge+AXAS+DxrTCuzB8fH2cvzqtXciGeGf+u8vvqxWboXWThKwngqwtX0dPyis2JxP8S
rueFXwJUUlR+wI0Qf2yopSeeg9YyemVj9W70NS5ns5ktFovOztaWW0rJ5vO55ZxtsTia9/1+b7vd
7kLAau/5bNxlTKv2xfLh+jL1VTP8HvjKicrvUR6+Fr4hWTrm4XLG39ExcT9KgpVSsuVyeXX58DVo
tL6DYJldIVolb2voxYr+j44PGVn/8r1yIdyasXlT29gQt8O/Q75B0lpG0XuDHz4ubkdJsBaLxU26
7thOc915VUaLlid6qYZerJbM8wXZ99JNXeivxjtUzM8Ovzts2K4t26hhyO+QBOw++HJdLpfdxKcp
yfm8a7HPPvpnR3F5BvvaO3sQke5LJM5x6+HaFyuilKF68cQ7gXrtB9FLBqRlgD4SQPz27xHGPofu
K9pAGUQeltn0+Z3SaTYww/Upqg8+jFnZxt6bULRQiTlSJRFC2NJMtUhEhgQlpbjbsfSD87iWf25V
GYSYGi8sXqxQn3lCDd4/Fp7ovtH7jHfWCxnux8/R+zMNvlxns5nN5/OBq65jv993f6Mc+2yo/5uv
RR18ZH2omj3YdzznbPv93vb7fVfR5/P52Sw1vq42sT4cZzaf8y8efpDBiFN0TyGeAa63UU/FbDaz
5XLZheV6PNQALJ2D8YHBPBwO4QwzM7t4l8U4fBmbHb0sX6ZTgueZlQWrZOv5GthTCGBNvbsVk4xp
ccLZu2GmSpy/D1Qfhb/b7c5efLUaxTPDhsz3VMzn865ec0NsKrz4rVars3fIG7spn/0Z8SJRmtU7
FSUx8sIJYLv90hhck3PunJNbCu0Qk4nWI+GXChVht9udZTB+JFziWfBihfcInhU3BG8NPwPvEC8y
v0cc3hlunIAxHiyXRWR3a8/lnLtGEegrZzT++fpHMYlomT1euAAyd7FY2Hw+t+12e1FhJFzi0bBg
sSFbrVbd+UfUz8joPcu7/epwPo4ZF0Kd4K5cT0rHxcXo9t3tdt3xPkFDmFdgMtF6Jjjzl8vlWSHD
QNx68FOIEn2ChUbXIw1Iztm22+1QMNEAeylm1u1aUVvOCLvZbHobETkfu3d3u92Zd9QXvjYOz0K7
f/pCoDDYDWaDMVSgQkxNJFgpJVuv112YRxoRGDF+Nx4Zn3dibJ7iOnTXetiLYhA2pcfP+JuSUbu8
R3z55Zf2xRdfXPST4tyjwAs4n8/PxOpwOHRpeZfCFM9NzueTLszOJ0A8Qz1E9xP/XzKKog6Uuxec
2jxNKXXdfHwsKhf26Ni+8RKJV2+sj9rlnROd82nKu9lRoLxoPRqkZ7lcdu41jIe6CcW9QJ3j9wcT
LmoN2D1gAynBug0teQobCzC7r0+0mJZnvQJV67Se7aUaS87HCRo8OWPIgxyDzzuPf9aUz56alpbZ
s6XjmcqBG0qICyZdXPvc2vdzKJxvlE4pWLV1CEzx3OiZQ/G4R50YM2sQwGuKJpP1lS87Ha/OKJco
yhh0AX7xxRdN3YNDLxLTEjYCL+FsNjubZnzNPc0uX3Zv6H1lwfP4tz/2LMDQ8v8Mx5vz8hHpeNZy
iARrijU6yO+Ujos+/dR5To/feaFU76/tGvR57MskCsNEZeLPlYie0fJ8/6wp63RfmoeIro3S5eH4
XvP8CNTnoTxpKb9aRomWrwDXdg8OzYgBKaVutw1foWrJOZ+JFjK+9T5mp3zwxqK1QrFx4LiMidOU
IH9qidJxjzTcshymiD/yEfFI6dhwGlN/Qc6nRcB9YThvuNvPT05CWv0U6Zr4RfldWwZ9eeDfhShO
/pnRs33YIW5dJ669vuadjPJtSmptw1D5jaFNXR4MXlSz00fSWl98GAzAFbz2Pv4F8S9LDRwWf6NA
eaZPbZxuxZg0ceUs9b1PwS3KgfOd4z42/ogPi5b/XlItiB8Wzl8DGpopndb1+HzriyO/N6W8ry2H
UrhSfcIxfibnb+1zS9yqTpTu20JL/cb9ox0urqU1HlH5jeWqXd5vQelZPoMOh4NtNptRM6+QeWgp
tFzPLwlfD7hwfOX2lZZnM/K9EZ9rXpAp8cLj0xMZDaQh53yTdFxTDhzWl0OUhtIYQg3+5R479Rj3
iHolfNqidPLf/hjW9XAa+xobnPc+zyJ8/kdxjd6BqCzMTmNCvuw8/NyoDqB+4jc/q5S+nM+/BD6m
LM3a69EYEG+8H/d4ZgSXX6lOtXD1Lu9T0lcRospsdnyJeY1LDah4kbErwRXAV2az889jI7xPh39h
Ukpnn8QubTs11mBeQ5Qes8s4+HTeOh0t5VCKsz/G3dml+CMNpftF4PkcxzG9A2Cz2Zz9z+8L7ld6
d/Cb4+LzjrvK+97DUt6bnTcWonv0pT06h+ehTBBHnOM44Jn+uX3P9PnG9QZlxcMfPg7XCFcts9ms
2cYB3s7u2nheEw+sMeM6Npaq2YM1x82mWY+FCh+BCupfmP1+31x5uOIPwc/1rTre1JSfXxMXDjOb
zbq1ZNiNgNNaMgK3IKqYQy89QDpyzp2RRTpwPrquhppyQDizumeU4l8qB0xmqLm3mZ3F0xvIGnAt
CxYLAxuAoTLCvfg3v0cIyz9M6f1LqX6suS/t0TmkczabndUnPAdxWK/Xxee25LfZeXikbbFY2H6/
D3fCv9d7eQ2+nO/J1M992jGtUuVDBrAxgGjVwvcxOxVo9Ex+Ub2hxLY7uOc18H3W6/VZC8ns5OLf
+gW59t58/Xq9PnvRxxp+s3I5pJS6z3aAlvt6hsoBda2mHLxxGzNjMKXzhaVsxFNqa7H6uloyZH33
5TRhf0//7rTEqZZSrwi/Hy02oAWkB54Gr/WEB1ZTH8Q04vm0olUCLy1elD7BuZaSocTA9S2eiTTB
IPALAl7hBUE60ALnsRg2MDXp6CuHa7rb+hgqBy8AHjbuoNWo4lqedIH63ypYEXwPn64Inx7k0bXx
qGEofrcULYD0rlYr2263XV28V4NSHLltKd+Qe1SOyFAuFovmKf2tsEHEAlSz8jjOs4KX3Ox89/LI
a+2jrxxuaTT5vr4ceNyrhBes2vSClM69rLEeVg2194yE69akFH8yHufMpu+CKoE6zTNAowbKs/HM
cWvlZUXr1oWAShh5WGb3eVnNLoXLx+nZYWPoNy2uedGjcih1S90KPKOlHLwhG+MF4Blmp3z8rK35
SCg5H4bq0ZSwcJm11WdxPe1v0oNhY4AKwi36KYgM5Ww2u7mHVSKl9PIvSEqnwXqzYaOPMFE5cPfw
vcCzxpZDq9iwYJmdugU/I16wIq+wpgymBHFAI9bbpGejpe49O8W3gCsHJzhKvB8IvwVcKbyxGzO+
FL0IjH8GuqIehX9BWgzms5BzPhP+oRc9KmvUtdbyngIIx1A5ROlqjW9K6WIsK6qnn4G+rsFH5kdU
n/m3uA2haKEi8Is3JFxTwcLkf7Begg0ZG/MWonThuDdEYw1lnzFurdgppYsXpPQyT0kUzzHxNzvl
X9RN6OF6gPNjFpKb9ZdDKznns/pWUw6t8QVcR8fe49noqzulc97jLOUFX+vvg3tHP6VrhkjpfCLK
2PdCtFG1TssbCvw/dQGVjFhfxRr7aQf/Ipidt5TYYIwZREeceLEqXjhe/NoS75yPLbtorUjLfWrg
+LKIIz/GxB9wNxenw9cxzvPW7jWmrxxaQRyWy2Xv1wI47mPyyl/fcu0zg7zwdcrsvIw5/Zy3OM+/
+Z48UQUNXV+XIq7p/p/P52fv5NSMvefUdWZsPJgp6vK4UrohtQXPlaw1E7yRiYwlzrd6WXgJo81M
cd/NZmMppWbBTenoVfKLeDjc5ptgQ5uxmh3LYEwazKxLh9lwq9isfScJLgfuZsM5LodWD86Hxf38
9VzHWonyfsx9nonajbEBumJL7yqOAW6YtHI4HLeF40XqNaR0uZdpS12qIefcLXQfC4v7WK6NxxSC
ZXbFRIwpC6Y2I2EkV6tVs5iAnPOFEWNK3VU14LrNZjNo8GE08XctOZ+6p7xhn4Kcs318fAzG3+yY
Vx8fH80vQ00a+Bgqe0tZp5Rss9n0lrXZKb34uwbEpXY2ZGvczerj8s4cDqddSbgOIC/xN3v+pXzz
15fqFBbDtxCV7bOUH/Lnmp6KKfBldQ31TYobUprIwZUTsFiOSXxKpwFuX3G9AW3djTul1HUT8DH8
4Dg/o3XvRBQ84Di3xLWW6MX2xuHj46PJW+G8MLvMd///mOntY8qhJQ05565bCP/XXttKVAavTilN
kbFngxed4xmpvsz5dwlf3/b7ffPkLtSrW9YDUHtvrvNjhjiGaI3HVGsMr9rlfYrCaU1ES9iIaEsc
4Ct9y9RqrvAgauHgGezRte6diHjDG5q6MoJSReP4swC0TMnGPfl6EJVDbd6YHa8fUw4tXa1sEH3+
l4ynOIEy8fh6wPkc2Qr8z8IVER33x7gsxwjXPWgx/Jx3/HsK2DYM4cvwWq7e5R2Dn88MG8bIy4oM
D8LXZnJK8e4FJWPJhm232/Vu+OnJ+djKv6Yrs5aociKePH6w3W7P9mKsYbFYdJMZzOL8rn0xQM7n
/e6t5VArWsAPwk9VHlPd5xnpM2KldPfVgdI9uDz4vjV5ezgcqse2au43JS3CxUwZT7YLffGotWkt
VM0eHDq+3W4Hxw4eBTLNGzNkug+L9I1pZXlBjAwu/ocXF71UQ0QvKadzSqJKWUqDWX0l9eG8ocH/
rd4u58GYcjgc2j6dwHVoyryvff67MSbdXHZcf6Ysjz5QX8a8y63gWWPyaUpq4zF0fgx1TYkXBpWJ
P+3ALW9kqq/krd6jn7jQV1hc4Hjmfr+vbtl57vGyeKI01IqLmZ1d5+Hjtfczi+/ZWg4tLWyzuAER
HRO3Ae+tF6wI7pL07z5+Hw7n+3vW1D+V732pfztfDFQ4P+W51F3kaREt/6LUtEK8wWwVrRpjeWt8
GlsNPlMyEkP56PHr74au9+evMUBjxTbCx+kR5fvsRCIDUjrfNqyvjHFuNjvf7aQWlct9GWdhnhh+
uf26kL7xjWuJRGuIa4UHgvdoEI+aafJDXJueSLSG4MbDmDTcohxq4v2ZgVBBtACEB2JVaggNURNG
PIa3Ey0z6751A2CUhjyssYaHjdY9K/stjGUrU4u/2XX3uXc51MR1jKcUhW29x7uC/PQLiZfLZTdG
CZRf70d9H9iLkNLlt3duKVjPwqvHv0Sr0Xl0PkQGc0ycfGNgzD3eEfauuIEy5VfExXPTu06LGWrB
fvnll/bFF1+E26B8+eWX4TVmp9Zj9FLieEslzDl3+8IxLfcYw5jWXW04MY7a/K0NVyKqv150xjyD
7yvROsKiBVoWhYvXJxQt30JMqTylE246Jjt8+eWXzYPxpT3JWvcBMzvF1e9td+tKPcbA1IYT46jN
39pwEaUGFzN0PiLnHK4Bu2UdfnY4HwA+zPmZ8+WzUewe9ML0CMZugIkXnsU3mmHEvHqlf4b43yIO
rWV/izj04eOHRhN+SuFq8GvA+urvZ4DfY7P2bdbEe9DmxvwdUUVBF+AXX3zR1D04xG63a3b/0fpd
Lpdnm9IObdNT02qO4Ljh+pb4jmXMTLepYUM6VXrHloPZ6dprrm+hNvxQ3fPgvpweLHzm85+FSLSR
N7V5gbBe/Hz9Tem08UDtvV+VselDWYy9/hpGiRZXnJyv7x4E3DrlCootglrAffj7U3jp/YSMa4wk
mM1mxU9tlPAG/xEV4Bq8ERmzsS2Yyhhjeyuz+hfrWuGNyhvlyUZyaG2gJ+e44dV6n3eB83lsHrR8
HqXV5rwKU9i7R/J0swexzsJ377V+LsDseJ3vYunrJuSXoMWL8YKD+/dVjMjgt8DXPkLwojS2xGEo
/zlc7QsWlffQ9f58y6Jyjy8HX59a8sfsdD9ec4RJCOwpXAvnU02ePRLEC99XqyXn3CRYrWX1itTm
xbNRfENLL9894JcVz679AimDa7nFhBe/FNY/rxafR31xjQwDf+xuiFK4e5ZTlIYW8Sy19vw9Wox9
q+hFaWgVrVIa8Ns3ZlrJOZ/1XKD+cuOr9b64hgUQvSX7/X5w/PcRXBsf3sYNtoUbyLwgWcTUvoe3
5upd3m8FKhZXVnx7CvGrAeEwm5Bf2KibELQYS7OTcfFdkT6u/Hyfp7XPS+l8LRqXVe09avFx9AYP
jOkSxvWIvzf2eE4LOeezsm4pB1/nh8j5/BMoUTnw/bbbbfPkAcR9tVpddBMiTXhPhu6LdPJvfr9w
D/w8+7hObbyi9wzvPu7h68q74t+BsXDdKZXDWPs2xCS7vINrJlx4kEAvXPjOTQs5HwUFBqZkyNhY
8rW1mR11RZpdVhQvWK2frDc7fRes5ZqxcH7hx6eh1nAy3uBHDL0YnpQulzvUlsMY4fU7+3u4TiEd
LelhvHDx/cxiofR1OfrN8H1LaXplOF3Ru/+ZiMq/Fv9eRXWO7+/z+hra39I7ktKpFQkDs9vtmluA
eLH5pffCxS8/aBFIxIUXNnNrGMAo8HWt3RLRPW4Fe5xcGfn5rd/R8vnMlZ4NCsJFXnEfKaXO6zWr
Kwd0F9VSIzxRWna7XbM4cv6vVquziU+1dWHIQKGLzOw0WQFlP5TOVwL55dPm8/GzUFOPQfRe8TlQ
Ei22dbXPjGh7ex6E97aumU04m806I8YGmQ0MjAwEsjaDUQGihc0lWr0sxBtwnKdmKO5mx/gjbG0c
Ujr/YCaXAX5zObQ0HgDGCG9VDimlsGvQX48XFc/ntNQ+CyA/FotFV8c4DmbD4sRgTIcnejCIc8s9
nxGuS2Z28d6b9Xuf74J/r1rJ+fLr5LXd9/xutdjUiKcXLU4ov0RofbeAF75v7ZYXSISryWQ2Kt4w
e2azWdfirrk3YGNZMpT3IKXUCVbL85GvQ2mIyrslrS3l0CpYSAN30ZZexMhQ7Pdtn6Fh+BkQL+RP
SWDYQEdjOT4cN+zGGLd7UVtmOZ8vHcAx/v2Zqc1HhFmtVmdfHO8DdW7MRLoS496cO4OXjF8m9rZq
MtzsJCqlSRkIw0YGg+e18Iu/Xq/tcDh0z8J9YbBqKwtg42R2qhBTs1wuz57jnwfD1xp/szoPhY0s
noNF5rXgHuj24llxvhw4fA0plSfClMJ7b6u1O9Lj84j/j+AyZPz/OV827MaU89T4PM75stVfAnVo
vV7bbre7GMv8TPh89I32WrDhA9tR3Bf2gcuHbdcYh4N5CdEyi1usYzIcxsp3G3Gm+5djzEvLBVgq
oJZ7Is2Rh9JynyFwv5pK1fpcpKHGQ8F5vrbV22J4zOYakAaMW9aUA+fpNY2uPobuMXQe+HDI9yny
7lr4/b+mEVPr5b6rsHE+jul6ZztZk5c5Hx2FqRoLveu0opcxqvwtnshY2MAhDmMWHAP2dnxmsjdh
djJQU2T4NaBVY3bKj1cipcuxrD5DH5UDXrZHkdKlp1hTDtG7hPQ8G+zFcKPumRgbp5b8bgn7aiBt
9yhfX++vfVb4tvkE8TH/973xLXP/CZIa+KXkY164ns3A3NrLuiVo1aFbLWqERPhy2Gw2DxMuNHC4
HGrSwGE5PfC4no2ULlvQj8hvJqrvtZMAxIkoH/f7/WD9fSaKTUSupL7C5tzeXTYFyGx+8ccMGOM+
PPPNe1vRc67x7MaCOGGMgY3fK8AtuahbsK8eReWN+9xbuPAs7hasSQMTCdfhcHgaT57hND1LvHxd
4M+2iHq8cE05SaKGa5/zGpbPgcoLxnYbeWODgsNxb2D2+31neFufdQ0fHx/d32OM5aNAXrJHERnu
PiLhQjmMKfMx+IaD2aUBbSESLr73M5BzvhjruEde98F1ATyj4D870Ts11obWMqW9Gi1aj/a2OBPg
KbXGJ6VzbwsFViNctyxg3NcbM45LX1pb8+EWIA37/f5i0kJNGhhcc+8GBNeHMeUQwXngPcjNZjOq
52BqUP+9N9+a1j7G3ovzz+zkeePvZ2Bs2u5JZENvLVxT9Q5Ncxe7b0F542dm3bqB1gznePvrSwZm
v9+feT+tz6yBjb3ZyVDWtu59mFvEMYKfs91uz7oEUzouvG419n3lwHk0VRr5PteWQwTSEm3Uut1u
HzLOxQJtdux648bGsxDVg0d7qrX17tXysTZdtUwlWsX5iqy4pcxmj2QKWowZwnI8c65fuwFSSmdb
L/mCQnxwXx772mw2Z1Opx+YHroNostEqGewhOG/ghfr4jY2vh++TUrLtdnuxjuka78SsXA4557Ny
4LxsfQ5fw2NNZuPLoQ/cDyA9SBPqJsIizBTP5vugPmPclt8BxJHL9xngeoC6FuXZVPlldpn3nE9s
K6PnTRGHKe7hQfn698l/GWPss/l9bLXNJa7e5R0LxaaoIC0vBjKbMwVrX2quBz4z+yoc0skFjK10
+GXBfWvjkdJxKrjfkgdpbDX2CMv5wufQuq+9XwmuJyWDh5/WNETUlMNsNut2wjCrKwdOx5TlUAPn
DaeHDYiZjUpXH7iWu1n9+ajcuF6N5do8xPP7BN8sXpNVm29ROJQRz4L15/knOn9NvpnV2cZa+H0y
O6aZGwBmx+VMsLN8zRD8Tvk6VnuPElfv8o5IoTW/2+1GzbIbaxB8y3tsN0FfZePzKAy08JAf/Gx+
2b0g8svFrcToWZwnLfnin4vn4W9fPrg3P9cfx7V8v9L4C78MnI4pGCoH7uJ4dDnUgnvyAkz+Mbvs
uinFi/PGlxfSimMRfD9fF3BfPGtMN6a//1h8HfP5ZmZdQ4av8XnFcH5Fv0tE+VU6n1K6iFcNXN5T
wvHiuoE014xHo27gWv9OMmj8XcPwcuYKuLCGXgqPz4wWuOKanb+ctXAFrhFO/7JEBibnPKpS4vcU
RpLvE4lL9De/7GPwL+e1aejjVcqhlqgu+3LzZdaatghOb1RmnG6OI4t8zfvG973WaDGIUyT4Zpd5
VhPXIXye1NR3TneLjeQ8r7FPY+H6XspH1MlW/Dt1bflPJlpm5wYElArGvxTcomshqrRgqFJwHFoq
A8J6Q+lflL7nD1V8H2YMnDd98fPxHMo3s/vEfwguB7PLNXtTlMOt0+Dh53G5eeMBasrK7LIsSnV/
qOxSSmfv+VAe9+XvVOBeUeN1KH41+DTgd22e8blaG3mPfPPg3r7etda5vrhPkYZJRMvs0oC0ck1C
fKUdS2scfJpLhoXP1b4AU8H3LcWpr0L6/4fi78PcA1/+NQZ+KB33ToOnVG59hnjI+PH/pd81jLkG
jLmmlqhMo/IfslGlPBs6NwTq19DzI1qecw0+rZFtA4+yDZOJFpgiUmN51LP9S9xaKe8V79ILVxPf
nMsD2PeK/xBcDn3xLdEa/l6UDElESZg916b12utvSWQkx9QHMPa6ElPf7xbU2LSaunaLtE4uWuI2
BXVLauJbE+aZeLX4tnBLMXpXlC/XEeXfo/L0uv40IYQQ4o5ItIQQQrwMEi0hhBAvg0RLCCHEyyDR
EkII8TKOemHyAAAgAElEQVRItIQQQrwMEi0hhBAvg0RLCCHEyyDREkII8TJItIQQQrwMEi0hhBAv
g0RLCCHEyyDREkII8TJItIQQQrwMEi0hhBAvg0RLCCHEyyDREkII8TLoy8VC3JDSJ8nx+Xec9+dw
jD8TH33y3F8rxLsj0RJiQrzgROdwPgrHIhVdx0isxGdEoiXECNhTYk+IhSQSH1zD4jbGkyoJnb+H
hE28GxrTEqIRCEMkQpF3FXUBRmLFxzz+GZE4Rs/h4yVRFOKVkGgJMQAEg4XDbFiEPDWelPeg+Hef
18RhIi9MwiXeBYmWEAFeoDxeoBDeixf/XxInhgWmJFLR8chLq/XahHglNKYlBMFdb/63N/C14lLq
zotoCVvCX+/jXYqXEK+AREt8eqIuv5LHg+Pe4EfCEHlenj5vCOf5WVE34JDw+LD+fj4dQ/cT4pFI
tMSnpc/oR+IQEd0jCg8x4N+lsH3XMZGARgLM94ieW0qDxEs8IxIt8enoExrvVfX9XRI9/B+JRukc
34/P8/+RkJaeHeHP9QlhFD8hngFNxBCfisjDMDsa65JIXcOQR9UnhgzEg0WvNo594Xz8vEjVPkOI
eyHREp8Kb/hLIsbHEI6710Cf0EThQF94jhc/M3p+hA/Tly5/ntPqwwvxDKh7ULw9LDxmsZfiPQz2
bLxR99dF9+i7JjpW8nBSSnY4HGw2O7Yv9/t9939Kyfb7fRdPHDscDjafz8Nn1abLX8PXCvFIJFri
LYkMMnsRJSNda9RL19XgRRQcDgczM9vtdl24xWJhu93O5vO57Xa7TpwQBuDZOM7nOf3z+fwsjXhO
iShdLWkVYmokWuLtYI/KU2NsS0a8JGKRCOH/yODnnG273dpiseg8KIjMbDaz5XLZhTUzW61WZmZn
3tN8Prftdmur1cr2+33ngZmdPEn8z54SjvF9IIQlcSp5kBIv8QgkWuJtKHlJtca1z0j3CSGfRxj8
DzFhsZjP5zafz202m3XPWiwW4fM5HrjHfr+31Wply+XSttttd/1sNrOPj49OGGvY7/dn/yNuJcE1
iwVbiHsh0RJvAxv8knD532xwI+Nb8pj8OTbom80mFI3lctkJlVnsoXnxw/jVZrPphAke12azsdVq
ZSkl+/j4sPV63XUnjgVem9lJwJhS3glxLyRa4uWJBKLPK6jxQiLPib0ePrfb7S48FjOz9XptOWfb
bDZmZp1XtFqtQuHiuPn4w6vCfc3sTLAghvv93tbrtX18fNi1sIAtFovOA2N8/IW4NRIt8RZ4gxmJ
E8L0GVcvTtE1+Hu/3/d6NZFwQMRKwmVW9vgwtsXHzE7ilfNx4obZUWQOh4PlXN9V2Mdut+smhKAr
E/h0CHFLJFriJYla/CDyXGrx13hP4nA42G63a74vE13Lz2HxKj2Hw3D88HfUtXc4HGy/35+lpTWP
4H1BvMzO0yPhErdGoiVejsgz8V5KjVdVIrom5+OMPzbK8/k87BaEYKBb0J/L+diNh5mDZrEn5/9m
4EXh79ls1okQZgR6ZrPZ2TNBzrkT4loBY/Hi5+EeY/JdiBokWuJlibwE7xnxMU/Jo+Hroy7AxWJh
2+02FCyzfm/jcDjYYrE484r4Gh/nUrz8OiwsKN7tdnY4HM4mfUSi7sE0ezPrvEmz2CtkIF54HpBw
iVsh0RIvQ6kbKjKsXrgivDH34f2YFCZDYEIEroPHxZ7Px8dHKKq4pu9/HBtKV875TCxyzhdxSSld
pAPhMe0e1yIeKSVbLpfd/6XZkAzyxI+7CTE1Ei3xEnhB8R4IH/fixniR8sdzzp234vHHMDuQRWK5
XPZ2teV8mk3IBt57QlF6o/uxgDK4FnHGjEN4UFg/tl6vz8KmdOkBQsC2222YLwwmmQhxKyRa4ulh
A46/vUFnLyG6pg+EZY8Ca6KwMNgvEMbsPz9uVRIRD7oIzcrxYyHz6eJ4QlAAzyb098Pkidls1onQ
bDY76wZN6XKmIsQL4tk3GYWFy4uvENeiXd7F0xMZPRhP9gzYiEbHfHj+G915GNtBNxs8ktVqdbEJ
bWlMq4bdbmcfHx/FafFeqDi9LD4pHbdgWq/XZ4uOvbghLIAAY9wL+xqu12tbrVa23W67PMG1uOds
Nut25Cix2Wxss9lcbCUlxLXI0xIvQ2SII2+Cw7ChjsQP3oafSIAFu3xst9t1HlhNV1kL3pPyx31Y
TLpgEDcWuNlsZovFohPHxWLRdWcibfwMCBWObbfbTpw4jvh/vV4X16tBDLHtlLwuMQUSLfGUsPjw
b7PLyQhsCEsiFv3PhhxC5L2ZlE6f/wDRVPaxRNPT/XR2iFBE1B0JseJreF0VnsezCxFmPp+fzR5E
lyAfQ37560pCnvPRk8XYmMRLXINESzwlkdD0dTEhTCRsPszhcOh2WYeR5jA8JpRzPvNqrtnXz4P4
Hg6nRb/sxXCaOB3e4HO+4B4sfADdmfAgOX9ms1m36wWeh3uldJxiP5vNuokmm83mYi9FCBzE3wOv
TYIlrkGiJZ4KNnYlY+0NIhtfFrjIOMK78t7Ber225XLZnednTLGPX0TO+UwkMCaVUgoXAbfAAsgi
hr9ZqNGFCHitF0TVzLow8NqwVs2PbeFzKZHAc3ejWdz9KUQfEi3x1HgR4t9emLzg8XlvROFhcbeZ
2WkaOryLayZblIAosUhNjRd8PAt5xNPyD4fDWZfnYrE4mylYgkW/1NUYrfHabrcX+S5ELao14mlg
QfLAGPZ5Ud4Tw/9+rAWTB3LOF4bzlmJlZp33cguhqgHPhSiZne/mbnbaHBfdgSkdZ1X69WXb7fZs
skpKp2UDEKXlcnk2HgYwThhNBhGiD4mWeAoiISq18r13xWIFQcC1PP0bYTAeE3lwNbs/vAvIk8Vi
0e3czgurD4fTzh6r1Spcm8bdmBjLws4h+BuTTfykkd1upzEu0cx1HedCTID3sCA8Q8ZsSFzwFV+z
k4eGbrnIo7uHYGEMy3e9+f8fATwqfEyShf7j4+NsLRc8KYgWj4Nh3RgLFY55IG7PkH7xGsjTEg8F
hsr/Zu+ndA3/zyKH2YFmp41g+8ZRbtkd6CkZ5khEH4mf/p7zaewLEzdY1Hx3n9lpTRgmX+Scbb1e
X3TX4vy1k0/E50C1RDwUFiXvXQ15WpFHBiPJwMiyYEHoYEDvOSnAr2WCl8Ei4L0P//tezGbH3S84
fyBepXRwHHlJAdIXCdTUi7XF+3K/N1WIABhrNnZDYoUwPnzkMe33+7OZeiwOPP39GjHAei8m58t9
CfkcG22fXhYv/O3DlLzQWwHPi/MYjYPVatVNbon2HcTGwgDdkH5GpzwuUYNESzyMSCgi4+zPsyGH
2PkZcAAeAgscdx+aWXjdEDyeE4kHjHVpnAyiNp/Pu661nPOZ+EXeH8Lx73sCgeYFxOgyhOBwuliE
WIzNzj+ICbbbbTj2JQSQaImH4o3wkCHmsKAkWLzVkFksWGOBwe0TkZzz2VRxPo44IN5ID6fDpwkT
SFjYvAdzD1JKFwuIMdNwsVh0G+4iLItbzrnzvHI+LTngtMJbG6oL4nMiP1w8hD5ji3NRGC9CJcEy
u/RUMG4yxY4MbLC9iDIpXe5ugTVireCZHx8f3ZgSG3YIwb2Yz+cXnzDhDXLhMaV0WkqwWq3ORJyF
i49hpqIQHomWuCvsTbGxx28vSviJzvUJFvYPBNi6CBM12NCPATPqAMeTj/HvKYFh32633dT+KA63
Bl4XCzNPhknp8svJi8XiQrh8l6D3QIUAEi1xd1is2LCXPJbI84LRjuDuMxhQ7NwAL+taY5hSunoC
x5RAvDAD757xSildLBLmraEwcxNeFvLOb87rhetWez6K10aiJe4GvIE+YSp5Cl6w+j4PgjVE2+22
244opWnHs/BRyD7PJufjotwxEz3Gst1uJ/10Si0554uNc3PO3fo49sQ2m003+QSgXkTdjUIwEi1x
N2CYoq65kpjxedBnlOH9YMxntVp1e+lduxZrvV53u0XUMIVAjgHpHzt2Npaoe5K3gmKv2q+bY9hT
RreuEECiJe5GnwH1AsawsesTLBhDTMdGqx2btl67/ifn88W+HGcYVxznLaQeBca8zG7fXYgy8t4W
QLnN5/NuP0IfJwgbLycwO231JISZpryLO8Mele8eGmLIeM1mszPvAhvjYlcHdNNhQ9c+sCAZIoQu
Rszgi7zFZwQCeo+NadmLjs7xwmOzuMyRn8vl8mxMC5vrCiHREnchalW3nN/v94PdRDxOApHabrfd
31jsOiRYZqc1URgLY0FkwYJngL/9rMIhcC90ifFEipb7DHGv3SZyPk6oiCZR5Jy7eGAmJ5dpSqcJ
HfCU4aH56f3i8yLREjfHe1aR4WEPzMNrosxOG7FGQodjGMOCocRxFqzSfcys867MTuNk0VZNY7od
MZOR78fpGxIs5N9sNuviUMN2uw23nJoKL+ZRGiBWmJwBrxU7afh7YWcNvq/43Ei0xE3xhoYNmj9u
Fntg0QcEI4OInRh48B6ekoenV0cz1Ha7XWfcI++K9+CD0cX5PuBJYCZjreAweAbED/C6tVI8WCRu
AfIHY4sRHIfFYmEfHx9FIWXRgtdsVtedLN4TiZa4KUPGpdR6ZnGIzkWgSwrbBKFV74FgwZsqdRnC
I4DIliaBYLHykGCZ1XVz1oI4Y+KC995Kcd5ub7e/H/JhSBRZgJD/ftst1AEuH41tids0t4Swc3GJ
DDoLVkqnRaYsWEMG3n82w+woDJvNJhQ8GOvdbtctdIVh9GCqfJ9ggRrBMrv8LMk1IO84LT4emKbv
PZlbz26s6cqD2EPg0J3r6w0L4CMWT4vnQp6WuCkwXixO3qCxAcJ57yVF40/oaoM4+f89PHNtv9+f
dTWllC72xUO4ey4ONjt9wv5wOFxM/+7rAuTJD/P56YOXOeduLCvn02a9m83mZh6X2TG/+3a1yPm4
wzvSx3XCr6vz3tatxuXE8yPREjeDW/59nhaMFXtZXjwwaA+4hW526iIrLUblKd88BRwCiZ0zFovF
Q3ZhiMZqkGeIm1n9Z1RY3OBJsjgjzVgWMOQVtVK6n59ZuNvtus11kV5MnIHYmtmFcNcu8Bbvh0pe
3BTvYUX4bsJofMmLGLqSzKwzwsAbRp7qjbETzLzL+TTR4567L6SUuvEy9qzgTR4Oh7M8G4oXRBv5
BAE3Ox/bggeGZ9dM/2+F483xMLNudwyuCzy+xfFk0TU797aQP1OLrXh+JFriJkRdfv5vf549nz4w
XRrXYMIEix+MHnevQZTQqo88uluDfRG9aEYeVEnkGd8NCIHGvWHk5/N5J4rIr/l8fjYpZUoBQFl6
0TI7io/f5R1pXSwWdjgcurSwoLG3dcvJJOK50UQMcVO8SHkx88dqRIS7hnLOnXfCRpcNM4ABRNh7
7iIOgcAMOXTNbbfb6i4/Bl2Z6M70U9nxN/Jqvz8uvIaIY7KK92amAnkcjT1FMwBZXCFcvn7knC/K
Xnw+JFriJqDrhsUEx1jI2AMb8rDM7GzsY7PZhFsDoQvKCxb/P0YoxoLZe/AiWSzGwF186NqMZt7B
8GMGIby65XLZ7VK/2+3OZhLeQgi8ILIgAf/c9XrdlSELK5fhZrO5SXzFc6PuQXEz+gwhCxnCDI2v
oHUO0YNYYaYZRMHsfKag2anrDHEZO9nCe44lMBMRwnCNSJmdusbgaSDfeB1ZdA3G8Mys8zIPh0O3
O8Z6ve7EH2LovdYx8PUsriDyqNEA4TrBXYIgGu8SnweJlpicPpFiz4oZMuowzmZ25jGYnboCzS6n
Sud8Oa16SBxLRFPiPSmdZupdMxORp6ibnecX568Xfw6DOPD/ZqdJHehSxN6MEFfuQr0G3KPkQZcW
deM6Lm9OM4sWl734HKh7UEyKF6whwweDVCtaHx8fttlszmbGoXUOr4KNWEqpm5CBZ9V0Q3pqBGux
WHRxuXYm4n6/P5shFwkVw15tKSwLGaaZY9LGfH78sCVmIPr7jKXkLZmd1qExWCTtgcCanbqZcQ/x
uZBoiUmJDIvZuYfFxyEqfWDGXc65G5/hsS0IVs6XX8/FOiSEHRKeCHSz9bFcnr4RhQkWNQYVXXRI
I7Pdbrv7sHBFYpJS6gy7z3fOJzO7uB+HXy6XtlgsquN/DSUvKWr4YEYh4orrcFx8HtQ9KG4CDAwb
Ghz3DIkWDFTkNbD35FvtuAY/Q88pMWS84V1BsCIQd+wSgfA88w/wNHSIMeJeyk+MR3EYnqSCfMK1
2+32TMw5j+bz4/R4dG1e0/3mhdjD5QgOh8PZxBXEg+Na8t7E+yPREpPBRsWLU9SqNxv+JD3GV7B1
D6/Pwu+Pj4+LbkGzy5b82PGlPnhRbCTIKV1+iRei5OOHdHovpybeEDXOBxYsFviUTpvQsoeX87Er
7+PjoxNA7MYxJD599AkMxiC5HqCsIVgpHcfdeLzymviI10aiJW4KC1jkIfR5MTx5AuHYAPJx72XB
AOOZNYa/FYgDvCEPxIp3qYDw4np4UWO9QA+PpeH5nO8sUNztCk+LJ2ms12vbbrcXs/pqiRovnpKH
DG8LeYz4sreIiS68AFm8PxItMRlsEIdIaXgWH49PrdfrzqCyMcT6q8igYgIG/p4SGFTuDoRXBQEw
OxdljCXBW2wZX2NRqREDs3OhRvchC5TZZXfjbDY7E4DFYnG2Hq5FuBDHmrh6eBKKmV38RqMEf4vP
g0RLTIo3giAykjVeFndt4djhcPxaMK6PxlxSOi1EHRqTagVC6EUHIosZcJxWFo2aRbEQDnSR+Yka
uH/OufOu+u4Jbw7drbiHWdx1y8KItVy8zKCG2kYMGh7csIg8MM5PL9yleifeD41misnoMxwwsPh7
yPPxYxe+hZ1z7vWy/E7iUzGbHTfb5Xsul8vOE4SQ5XyaRr5YHNdcoavNG/FIdBGOuxP9/c1O2zmt
Vqtu5l8fuN4bfZ+HXhCWy6UdDvFHNUtwHGvC+WP+WRxnX9eGhFG8D/K0xE3wRsV7WkNCMtRKL41l
AT/BYCpSOt9kl7/hlfNpzRinP+fLrsCUThM0St2EWHfGi6hB5B1BHCCqJQ+Td78AQ+UFAcUkiamJ
4opxLRCJLHto8rY+B/K0xKT4Fro/51v4EZiK7Y0UfnLOg8YTBrzFM6iB77der22/P208y1POAXaZ
iEjptL6sBLwrGHDsyYep8sDn1XK57O3KQ7zNTtd6IUR5IQ5I39BYJKgpa1AKFwkVn0OcMAYm3h+J
lpgUGA4ITHRuaAICZrzxD7Pfn3Ysj/CicQswc+1wOFxs2IvfHx8fZ4K1WCy6zXORxprxtpxzsWvR
7NIDY/Hpm1UHD5DjjOP4P+fTWCLWdg2NnwEOM9RtGVEjRF5wxfsj0RKT4Y0eH/eeUwn2svjH7HRf
iNYjYQ8qGnvxnz3hiSOLxaKbldcCxAviwWvY0D3JII9ahMss9pAgsBDbmrj7e16D9wLxN/6vEX/x
Hki0xOSwePmW/5Bx8V4WYMEy69+lIfLOrmFoDAez8syO8WTBms1m3WJizAQ0s1Bkasj59HkTeCKY
7GF2ucgZeTEkXH2NhJxzt1eh2WmWJMqydE3Odd3BffR1n/Jzxeeh3WcXIoCFCcaKxQt/942H+HU3
0T32+303gy+iRSBr8FOxPV4QvGDBwKNbDfkzxVjbdrvtnu+FirvWWLhKHhLWYSF8BJfrYrHoFvWy
MGGGIcdnTNcg4Lrjj3vgCYr3RiUsJsO3qrm1jf/7wDomwC1p3Dvn8q7hAM+bQrR8nPFseDccFxas
+Xxuy+XS9vt995HFlq61WnI+enYQKZ5pGHX79eWdjxfym8vBlwHyGM+LPEg/aaQVHw8v0NEEGPG+
jG8CCUGwh8XHQK1Bie5jdrwe+9ANddeVWuet+O89QRSQFt5iiA2+n06OMCkNT/UfC4QBU/A5j5AG
zCj0420Mz4L05ReVZ2lcbypqypIbNuL9kaclJsGLkm+dDxnsaIsgvkdK511eNVzjaaV0uc1Uzqev
K7Pnx8/xgoVp6reagu/ZbreduENgD4fTjhk5597uOl7z5D0anjWY0qlb8lZC7PF1SmL1OZFoiUnw
hiMyJH0iAhEogXMt4yN99zMbnswRwc9HnNlo87ohdAuCKbsF+0BXHZ4PDwtp4l02wGx22h0ewsXC
jP/BUN7egqhMcs6Dnrd4LyRaYjJYeCLPq4TvEuT74JgfnxliyKiWtn8yOwqPF1ieBWh2aumzN9a3
r9/Y2YLXstudPi3Cz/eGnicxlJYUpHSaGMPCdi+858fxEZ+H+marEJWwANWALZei69hQwfhOQd8C
WWxXBPzHEoH3sLzYcpfnrbsFS+ScL8awVqtVOCEDAuzFIWqAYNKMz6tbsNvtzjzcUv16RKNA3B95
WmIy2Jj4bqU+ow0DGhlIHOdwQ9QImw+D/6Np4ZhaDnLO3dRuXAvPJaXLnTDu1S1YC+LT163GnqH3
GvH3vaeYIx6+LMTn4n41TnwKIo+Ej5eAyLHHhZ+WrqiaMGbl7kvvLWH3CmxCi7hxt6AfZ2MR9muW
noUhweEuQi9WHAaguxU/t8B7WD5fb/Vc8Vyoe1BMBhv8WkM9m80uhM4LB4/LTEUUPwgT/z+fzztB
hTixsU7p9FFHxI83qr1111ktfvr+kGgBLk9uQMznx8+u4P9oiv/QZsCt+HrBv8XnYbjWCtEAt7bZ
yJRmDva1zCMjVcNYQ8lG2cy6qeI+LSxEELWUjt2CfK5vPdS9gUBhMon3WqKwmDrPHtd8Pu/SHAGB
N7OzGYtTUvK2xpa7eC0kWmIyIqPBxj4iaqHDoPJ1LdOa+4QQRPeLNr6FAY/EN6V0NguRPZdHTbwo
sdlsbDabhfH39DUwhvCNltKkjzFE3YE1cRLvhboHxSSw0HDLPKXhPQDZGHnv6hrjP7RvIMPP5b0E
OT0pnW/B5I3xM3YLYvo+Zkv6suhrUOCcL9O+8F5Ecs6jdrQfwtcZ8XmYpgkkxN/hBYuPlUCLOTKI
rbtgmNV1E/m4lZ7R92yMZX18fJx9UHFqAz0WeFJ9XXnRYm2kOWpssBfFDYLIO+bwfbvMjyHysqby
6MRzo1IWk4LuPfxt1m/4Eb7UcobhbBGuISGCIefJHb7bzAtpSukiDIwkNsc1s6eaLQhBjeIDkYk8
UQ4feVk5525yDIfrS3dK6cwTHUNUnimdtgdrqSPidZFoiUmAgecWMI6VugeHpklfY/xzLm/vwxvC
lgx6JLiRgU8pdQuLza7b73BKlstl75ZXLQY+yovFYnEm0EMeMYvfWHxZ+caR+BxItMQkwCixgfPH
PDzJIWrR+3BTAlHDs/AMzHiD2CJuXnwjA/xMXhY8wWu9G7NLL9Ps1LXIywD6dhnpqwdDDIndszQU
xH3QRAwxCd678h5XBC/C9ZS8nVqGRJNn0vlZdTnni7VXNUKKiR9jjfOU1I6r1UxU8flRKg/+KKXn
Gk+LlxVw3vpGkvgcTN+EFZ+ayGDXGEazS4/rWlIqj6Nw1+FsdvoSMu8E0RePqeI4Ncvl8mxj3z5a
xdWnOefzLzCXBAvnrvGIojLxAiY+BxItMQmtBqTU5RddW3O/EqVro/iu1+tuc1z29FqM+5Trksay
2+2qhKsmXX2eFTObzbpd7n3+mR278K5ZBhCVBcerZR2feG0e+3aJt8G3hGsMIuCw3N3TsudgH0Mi
gq6vlpmKPn37/b6bqbdYLCYZSxrDdrvt4jKE/8hliVJZcvdcNLWe8xFbYk0Je+U1ZSbeA41piUmB
IYFBS+k4IcB3EfaJmu8ivLbLcD6fX3RN+fvxBAyOP8L2eQk5xzMV1+u17Xa73gkKU7FYLLoxtRqP
JsoTT0nskUd9Qp/ScVNhHjccajyU4OcxQ+Ui3pNxtUiIgFJLOxIcNvJeIKamxmBGz+2Li+/+yjmf
jYvBi4HXNbWX4cn5uEHtUDpBjZeFrtJIkFhI4FVC7BF+sVh0Y1yHw+Gi4VIDLyfge4OpvHHxOtTV
cCGuIDIo3MrHGp+oNT0V/iOC18JG24szG2t8zgTTw29hXOHJHg6HqlmDLXGoDcvhfP5C1Mbke0ns
+V63bhCI50KiJSaDhYc9kSFjxWHZ+A11X7XArfRSV2VfPP0572Wx4LKQcdcoJiv0LfptBZ5cyzZJ
Nd7YkFillM7S5Rkq8xr64sD5XZMe8T6otMVNGDJ6DHbGKBm6lnv1wVstMb6rL8Ibxkhk8T8Ld0qn
afebzcb2+333Laop2O/3zd1uNeFrJpIMbeWEvKjpiozoqxP+OeLzMF2TT4i/IzLkQ0RGCIt+2XO5
hpRSuAB4qKWecw7DHA7HDykibjCy/D+zXC7PdtlYr9eW8/gNdvFhx1tMRqjNb6QFE06YxWJxVdw4
bz0ppYvvfYnPgTwtMTklL6SPyPjACA55QS1g/IPFZah7sJSOyCB7weJ7z2azrmuQvY/VatXseS2X
S5vNZrZer5vyuQY/RhR5opyuzWYTduVeI1hmw2NV+/1+sMEh3g+VuLgZMHY1osNhEf4WBiml464N
KZ12aecp6aVd0SP6jDn+Til1nh3PdMPiX4h1SqlprGu73XZeVm18a8G6NeBFkQX/EXC+t+SZeA9U
4uImDBlSfx5da/i7L+y18P3RzYRp8aWxHIic9yg2m03XzWd2mtqdcz77ACNAl1bOp+5BCA+OmVnv
4uDlctnNFqyB87aGw+Fw4eX4PBvbpVnLkCi2pEe8F9M3ZcWnx3f1RQao5KFE193SQOEZWJwbjaPg
+aXuKuxXCAFE+Gicx+x0P3h1CINtkHjBro8LugXxu4YWbwSzG/saDpGHOTWLxaL4DHivtekX70V9
bRaiAe5CKnkpPpw/junitzaQZidDyN11/rklIwlPbcg7iMDYFgQLHgyEye9wgfCl/PTM5/Pq2Xss
kiiXqHzuUR7ooix534fDoUmMxfugpoq4CWz0fRcZ4GNsLCMv7FaGkoWIxYefx/+XDOVms+kM/Hw+
t7O3Gw8AABK2SURBVPV6PTiRgPn4+OgEa71edzPvSpMZovzEVHqOY830dsCbBZcaEofDoVoEx1Ly
stiDNRueqCHeE4mWuBnsaUVjRTy+Y3Y0/JiJFnWNTU3Opz0D9/t9N4PPt+7xP4eP2G63tlqtus1j
rzGqu92uWXDQrTebzZpnI2Jyivcy2dtK6brPi9SChgP/mJ3KA0sNxOdEJS9uTkopNMDeGK1Wq+JY
zVSeFnttvBs6t+LZcHvDada/tdBmszlL15hPlXx8fDSJA/KMZycOeUMsarxZMMD/yAPEp0VIx9DX
zYr45JzDRpD4HLS9TUI04r0Whg0jYAPP10xpLFNKF54MxrMiQfJeR99YSs75QghbJk2MAeM/EKto
2j7yEmu70MUWdYf6a3M+ji9eu+6qBk3AEENoJFPcFBhE9gQADK3/23s1U0zG8OLZJ4LegHN8WLj6
jPhms+nECp4BBHrKtVUw4KXtnFI6rv9iYcOsRkz2wPFIuHAcU/lvifdoI/b7vbysT46aLOIuRMYI
hpF/l4w5DGcrfD94IqWuM3TtsXiyN8jxqxmvwgcZmZROXYZRnrAXMZvNBneGz/no2UWCgo10fWMA
M+8gWLhPBI4PdTdOwZAHCy9LntbnRp6WuAtDLWgAkcBveFpm7QPwfB/2kEoLY9mAs+fB3iCHXa1W
g4tseaYbNgY2O/9OFLyknE97HMJDQh7kHO9RGIkN1px5bwl/86dCvIcVhb+HYJmdd3MyOLbb7eRl
CYmWuD1sqEv79bGx4t9sUFs8LW/8/HqnEpvNppukwGIFr8uDTWuH4O47iIqZdaLEnhv/nVKq7pqD
IPn8xDn/d87x9HYvWC35Phb+kCTjBbWl0SLeE4mWuAvsRfCx3W53sYmt/83hvfdTS41gmZWfUfJG
ML18yONiovVXKcU70NfAYlWilKc4B7jBUFpfdwtKXpbZSTzlZQkziZa4E95rAtHOBt5wsYeGtVAl
A2d2MtAQklYRgIH04lW6T0ppcGLGEBDwWnjLKZ+3pXiycJn1pyvnXOVBTkGpPDle2gFDANUCcTfY
mwDe2PpurJyP3Wcw6DCmPOuNwbHtdtssViDnPLhpLIc1O3XptQhPKymlbiKC90x8vjFepPx5/h9h
WzzHa4Dols6ZnRoqpXDic6EOYnFX+gyPb/nzb74OYzwl761lcW5Kx641L1A8LT36jTixp4Mp5Ldg
sVh0u21wumuEmfPVpwF/M/cSLLPTWBbiE8UrapyIz4tES9yVoSnLMFDei4hEJRKuFk8H41GYWu6f
wca7JA6RgJX2HcRnR8YQeUde5PE3G34ci7wpgDzMefxXlMfAsykBpyul44zB1i2pxHsj0RJ3xxtN
jJ2UBMssXhflhSvntrVc3iuKnuG3ZcJvFks2vPgbnhHT940sz2w2s/n8uAGu/zoxp5eNPM75Y9E5
FjzE656CZXa5LovTxWVZajCIz4nGtMRdSem4uJYNOAtNn4FioQC8DqrFy4pa75Ghh/cxprWfUuo+
9Jhz/8SG2WzWjaOVJhzwOrUoriX6wqZ07B69t2D5tWLcIPCea0taxfsj0RJ3J+fcGWk+xq3/6LgX
O4BNbmvWMjG+28zMwunrOR9n9mGxb+RZRffCcbPTnn8553DLJd6QtpSO0uQTjw/j8xbPWK/Xd/nU
iAczH5E3kceK3S+G0io+HxItcXei1jM+Wx+F9f9H3lir4fViw637aPr6fn/8vL2fnl0SWD7ujy0W
i86bgheW0uVnP/zYXyntHk5PJLLoerzXwmEPi78XLByXYIkSGtMSDyHaUw8GPDqGn6nW6vjxMDaa
8AQ8OZ8mKrCxxbU1Rpaf4w02dsbwWz550YnyiSkJJo8R4btl9wbeJuPz7RHxEq+DREs8hJwvv4m0
3W7PRMAb3ylb4NjWKfqMB+IWfVIEBt8LHYsJ/ud4+vAA4djrGBKkofTz/Q6Hg202my5vN5tN09jf
lJS2avJMVcbiPZFoiYfAxhqw0e8LM5W3BXghMj8L664iA4rd4lmw/PUsMD6MT1dE5DH54xHIQ3SZ
rlarbqPgoWtvBQtR1EhgsX9UHMVrINESDyPny0/SR16L90Bu0RLv6y5brVbh7EF4MbjOx8kb4L50
+TRG9/Cix9dyGFyDOH98fDSP+U2N96r7xGnqshXvhURLPIyULhcNw7hGHhb/P7W35fHiwtPeMZEB
bLdb22w29vHx0c1kzDl3swBZVPrSNeSl8fnD4WA55+53JALPIFZm5+NYpfRKqEQtt33zhRgg52zr
9fpsJhumOwP2UHANhKN1mjuDL/qyKESejtnpEyToMix9LgTTyXkyRd+9fboi/HmkH88BKaVugsmz
gNmWEXyc16AJ0YdESzwUGO7lctmtwdrtdhetc0/O+WrRwmJe7wXw83CMBQbelAeeGKbHY3ZiSunC
O/OCczgcLrwwszjtCIO4Hw6H7ueZ4O+S+XTw//KyRAsSLfEUwOOCcPHi0sjAQUxqP8IYga41s7qu
KiyI7hPKlFLXdQkhgdDxt8NwL3gX0RZSuB+D50NAS17Mo4kmsJT+R1kKUYNESzwc9mJgzNnbYuFi
zwfX+t01WsCi5pIw4n8IJKbKD4G0QJSw8wQEj4UP8U/pOMaHv3332auAz4j4/DM7F6iowSDEEOpE
Fk8BCwPA2iIfxl839NXeIfxzzM53i//4+Og8wNK4C8eBBdbsJFgAWzotl0tbLBZni353u13nTT1r
t1+JlFK3q4lvXHAY/I7OCzGEPC3xdKDLDwabDZtvncM4lvYlZLz3Ag6Hg318fHQeF0TDdwP23b9v
y6XImLPHAe/qWbv6asAEFY9PU+RxCdGCREs8HexZbLfbs53SI3A82uw2CldiSPRKzGazM88MY1op
pXAPw3djNpt1+wkyLNq+m1eCJcYi0RJPB7rMYOCww7rZufD48RF0FY6dmDEW3333jsJUAh/PLIlR
ydMSYiwa0xJPR87nWzVhfMfscpIEe2A53/aT9+Kc5XLZCZbvwo3EasjTFaIGiZZ4OlJKXZcTwD5/
bCCjQX0I1613zPjMYIwO43hekDRuJW6JREs8LX5yw2azKbbYvaBhRwoxLYvForjLBQsUNyI0jiWm
RKIlnpaU0sVGtdH0dIgVC1rOxx0zoo1uxThKn2opeVSlXT6EuAaJlnhqvHBhzRMEio1i1EUVCZ9o
w3cHlsamIGA557BxIcQUSLTE05PS+aLjw+EQdhX6LikWLk3OGAc+y8JdfJzPkTBtNpuzLy8LMSUS
LfES+MkVOecL4eobO5nNZrZarbSTeCUYu2Lh53wujWnt9/uwG1GIqVDNEi/DfD4PhQt/14Bp2iIm
pdStvTI77/JjAYsaBjnn7nMvQtwK1S7xUvjJFTmffyqEvS3vESDMYrGw9Xqt7isHvKvZbHbhtfr8
LI0fCnFrJFriJYkmZzA1ntdqtdJ6LjuJOK+78t6Un/SC39jgtya/hZgCiZZ4OWA8vXBhjMuH6wM7
rn/GLq1IrMxiwffn0DWbc+6+eybEPVAzU7wsEC7eJPfj4+Oi+5AnEeA6HqPBWIyZhbu7vxv+i8Kl
8SnA+ZRS6sSKJ2oIcS8kWuKlgXBhmyez45Tr0h6EkZH14jWfz99OvDD7sk+gWNwjQUOeIG8lWOIR
SLTEywPh2u12ndDgG1kwrt7Aeu+Lj6V0mkGHryi/IrPZrFsvxellMYqO+wksvKBb09nFo5FoibcB
QoPJAWbHbZ9avC5/HnsY8peEnxmIFE9Z915TJOAI6//Hxzh5GrwQj0SiJd4KeAOR1+XXH/WJFvbN
w2/egBfe17PMmINH5T2g7XZbvRMIpyXn3HUFzufz7qvLQjwDEi3xliwWC1ssFt2kATPrhKy0Azwb
bl6rtNvtzgTBrxWDgb+HiEFA/Yw9/+ycsy2Xy6o4sTcGzyqlJLEST4lES7w1q9XK9vt9Ny6Vc+7E
C15IyeOKBGK73Z5tHxWN80QTOGondaR0/JYYwke7gCCcvy76n8esGO9pQqyw3dVQ16kQj0KiJd4e
eFbcZZjzae/C0mQNwGM88F7QPYj7cFhsMLvf7zvBgUhEHl7puZHQjRETfw0L1sfHh5mdvMcx9xfi
nki0xKchmhHI4gVxK413sfeyWCws5+PCWp70gfuxh5RzPvOWfLced88Bvv818D3xXE4/0iyxEq+C
REt8KlicePsn7jbkqeIsKGzY2fvC+Bc8rJRSJ4ToWoQ4sQhFYuW9OsaH7xMaH4bH3RCvaPKGEM+O
REt8WjB+g6487KHHi2h5nZMnEhD8Rlfbx8dH53WxOEXXmJ2EacjTi/BxwRR9TKyAgGrbJfHKSLTE
pwYCAY8DExLMTkbf7HyhLq6LiEQHXY6RVxN1RZY8KT4eXYcwvE7NTF2A4r2QaAlBcJecX+vFQrBc
LruJFiwg+A2BWa/XZ+e9t+WJBKnkfeWcz7wpRt1/4l2RaAlRAGu9cs7dzhpmx/EhjIVh5iB7ayml
zrsqdQlGsPD5cS5MnOibOp/SaSakEO+KREuIAVI6/wwKpq1zNxzGwsCt9yuczWbd2FTkhQnxrki0
hGgEAsE7TsCrmnJ/QhYkP3lCIiU+KxItIa7Aj2Xx/oRmdiZq0TgVrsUMP/yvsSghYiRaQtyAVtFp
DS/EZ0VvihBCiJdBoiWEEOJlkGgJIYR4GSRaQgghXgaJlhBCiJdBoiWEEOJluJjy/jd//aMonBBC
CPFwzkRraDNPIYQQ4pF0ovXNb/2svCwhhBBPjca0hBBCvAwSLSGEEC+DREsIIcTLoA1zxcvyJ3/8
R0NBxAP53//P/2coSDMpJfvxX/15bxjVi/ty73KWaImX5ud/8ZeHgogHgJnIU07uahEj1Yv78Ihy
lmiJl0dLNZ6LKQ3YNahe3JZHlbPGtIQQQrwMEi0hhBAvw2D34Ne+/o2hIBcMDZS+M1/7+je69PPf
4nVJKb1sV9Mrx/2deUS5POKZt6DK08o5V//U8rWvf2OUII65RnweUkqWUgqPT8FU93kErxz3KUDd
KNURH6bv3JjzYhoGPS0hxImWhtmz8cpxvxaICPKgJDqcR5Fn0nd9zXlxPZOI1q//+q/bN7/5TfvW
t741FNTM+rvQoi41HIOXhd/+Oia6R+s5/1yOM6MuwOci5zzYFeKNSq1B5/vib76Xv0/rc/rCj3me
P3dN3KMwY/nPv/lf7Ld/578Vz//f/9f/Yf/uV/5N8fwYOO6+jvQJVHR+6Pop6mBNXfDhfZhHc4ty
ruoe7ON73/ue/eVf/qV94xu377aDOPz4r/48FCw+zsIC8cGPP8fXekHia6PwfEy8BtzqvrZlDEOB
H75P63Nqwrc+r48p79XKr/zbf23/4p9/Ozz3L/75t+1X/u2/Ds/dmpTu271XKmtfNr58hrh1+dVy
i3K+SrR+8IMf2E9+8hP7/d//ffupn/qpoeA3hUVsyPPx5/uuje7V8izxGIZecn6Rr3mph65tfc5Q
+KF7DF3PtJwfCttKSsm++xv/0f7pP/nHZ8f/6T/5x/bd3/iPTQa6lkiU/fmSiNyCvvydIr9vWX61
3KKcm0Tr937v9+xv//ZvzczsT//0T+23f/u37fvf//7AVef47r/Iu5kaPGPs5A/xmgwJ1z3glntN
XFrDvzLL5dJ+8Fvft5/5mX9kZmY/8zP/yH7wW9+35XI5cGU7LEQQp1IY//ejeJe6MHU5N41p/e7v
/q790i/9kv3CL/yC/eQnP7HvfOc7tlqthi674BHCEY1VCXFrWo1fa/hX5ytf+Yr9v7/zW/bvfvXf
23/+3m/YV77ylaFLRvNKeRsJ6ysL15Tl3ORp/fCHP7Q/+7M/sx/96Ef2wx/+0H7u535u6JIQHl8a
Eo9agYvGqUr/e/qujWgNLx5Hydsa6iqaCn/voWe1hvdMma4p79XHV7/6Vfvd//Y79tWvfnUo6Gii
fPWeVV96o/ND1w+JZEv+jjnfcv97MFU5N3laZmY//dM/bX/4h39ov/mbv2nr9Xoo+BklDwfdd9Fk
iNLkCJzjMP660j2ic/6eJYaeJZ4fGBh+kYcMzBhan9Ma3hNdP5Yp7/UMeFEp5etQmKH8GDrvKT0v
iu+Y/1vj8wo0i5aZ2Xw+t1/91V8dCnZBn3GvnQxRuseQcNQ++5rj/txQnMT0DI1V9B0r4Y1J9Hfp
WMtzzIZFbehY7fVj7vXqBnCoLG59nqkJO1Qerf+/C03dg0KIz8OzdS8JYVbpaanCCvH5iLqchHg0
g6KlLi4hPi8SKvFsqHtQCCHEyzDoaQnx7DzqC6pimKFPp98S1Yv7cc9ylmiJl0bdV8/LI8fCVS/u
x73LOf2Df/mdbGb2//2n/20orBBCCPEQvv0f/ruZaUxLCCHECyHREkII8TJItIQQQrwM3ZiWEEII
8ezI0xJCCPEy/E/czgsyRO/dKwAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/whole_encoder_preview.jpg

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

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/files/hall_sensors/encoder_close_preview.jpg

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
UhuZ3mfOWNChQplEbmf/2Q==

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/templates/skin/new/images/close.gif

R0lGODlhCQAJAJEDANHa2uTp6aKiov///yH5BAEAAAMALAAAAAAJAAkAAAIXXIAYBuMOzptovipy
HtXy5kXgtRxJNBQAOw==

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/uploads/images/151/avatar_24x24.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NzApLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMP
FB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEc
ITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgA
GAAYAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMC
BAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYn
KCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeY
mZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwAB
AgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ip
qrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMR
AD8A2Adqg+uagYI0dyZfNBijUpsxgknvTFl3ZAbO0E59OSCP0q5LbTJbfKxPnRgDC5wc8/59qxrT
SirMHFow5HZ5lbbjKjjPTmin3CNbXk9uy5KxqV/MYorSL5ldFONkiaWSKBfNkJUE8kdD7fjXR6fM
Z9PgMq7GCAlfSiiufFRVrhzPlSOQm1iC+luONtys7xKO7KHzn8l/Wiiit6aSWgTd7H//2Q==

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/templates/skin/new/images/avatar_24x24.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMP
FB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEc
ITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgA
GAAYAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMC
BAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYn
KCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeY
mZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwAB
AgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ip
qrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMR
AD8A9+Y4Un0Fc1o+rTXsUsvy5LZUnrWhrPiCz0UxJPueaXOyNO4HUk9hWTpMe66e8jMSwM7SGInk
eg/P2rrpU/3cpSW+xjOXvJJnWUVUs7+G8MiIcSR43KT0z0/kaK5WmnZmqdzi/G2haxfajBeWUQlj
iUqUB55Pasm0k1mMeSdMu93TGz+vSiiuuljKkIclk0jOVKLdzpPCemata3M9xexLEsuMLuyeM9fz
ooormqVJVJOUtzSMVFWR/9k=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/uploads/images/152/avatar_24x24.png

iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAFHElEQVRIiW2VW28b1xWFv3PmwuF9
SJE0GdOSLNmWXQdtrDZBUcABegFqBC1gpH+g7V/pbyn6EqBIgQK9JAFaNIXzEhSu6/giK7QkSrRD
UrxzhnPZfXBIk5L3ywxwMGuvvdY6exQgLJVSCgUYhkE2neRirc7GxiXarRd4Rki326ZYWyewS7SO
vqbXPiEej5Ew5E2lz4IDWJZJqVTi7q9+zd0Pf0veMMiawnq5SLmQ5krJpZxK8/btD7EzLso0UFqf
w1FKrTYA0FpTLhTYuXGLazd/wP6zr/hqf5+EbdM5aJBV0Hv5kiDqs/foHwRGBJYF+QLKNAEQkcVT
KaXk2xcAcukUV96qs335BsmUyV8//xwnYfGL93YJwjHbtRJ5t0JPpbnfH3PvYJ/GkwdIYKK8kKjV
AHmturncDSBl21imwXDQJVt7m/dv38aRiM1qgSv176L8UwLbJdYZqqk877lFZjrk6D/3kUR2QXSO
Z57VLWcnEMOhublL7NbxxOFa3OG402N9zaXqFpnZLqF2qZlpVDCgMt7iaO8ZzCwwDCQIXkuulEIp
9aqj0jDxaPiwu3WZ3/3yDjfXtxDH5fJaFm80QFkpbMvGJiRjOaRTGfqGoBwTLHuF7CJF83EUoETQ
doLrroOphSojclrT7AWUM2kcK0nkB8yGHRj1saIcjuGglMCwA8gCb8WDV1PEjOKY2dTnxeExvcvf
oKYBVuDhWAanvSG98TM+u/cvWoMhUaGMd2GTUSLGsBwkHiO8Zj8nvWinlCKVzmGmK4T9E9bzeb5f
rDAxDL6zs8VPvneVP3z8MU8OW0RhQGSadNMZems1hqGH12whvS4SzFYlWq5E8QKb29dw7CT+sE9t
0KN//Bw1nuBeusoslWcWhlw0NHWl0d6EJBE6DFFxDHG84oO5DC4inB49o7xWxq1tUwj6PI4DfrRx
nZ/f+RlhIk91e4e6DtgxbfqiqGVdTnJrfPboAdMwgDg6H9N5ipRSIDHNw33eff8DrqYM3rlQ4c7N
MtnNd3jYGpC6UGfNnJJyDJKZLFaqhB2mkEcPEM9jGW8R02XXAcSfEJ8esPFWiu2qgT+b4ZNmOh5y
EpkMnDxkk0TZLIGTxdMmBBESBYi8TpFSCr28JuaH+Vyei6UCfqfL7z/6M5M4Raw0peoGRrrCk3HM
05M2Y+UwxeBxr43XP0WiaJWoyKoH866TyYgvHz7h3mGDn+7ssLVR5e9/+xPPdY7H//4EOoc461Wm
xT7DfIK9F4f4nc7KDlpJ0dkphoM+x61vKCbTZGuXiJN5fri7gbH3KZXpC8rFIl1J0A7hf70O7WaD
eOqtkJzXYoJlH+I4BokoVupIOsNHf/yUsH1IIDZTO8Nx+5Rxq0m5UqARePit1iKey1hv/B/Mywmm
hBmXStHl6vUbnAaKvxz3+W8c4RdMVNGi5Xfxhn3UaLzywznnwdkVKyLMopCkbUG+wjQYYedibkmS
zTjg5TSipRz8yGP2sosOI5Y3xHIyzWW9lg8iEcpuCld8bO3z7q1dPG/EKJryReuA7vEBwdhj0jhE
oghlGEBwTm49j+ZqfjWGYeJHEf2jBs3mMb4/IgqniA6YmSbDEDqPnxMOJiCgDeONUp+/yUqhTJtY
hPZwQHgxwSdf/BNlJriyUUeySR5+3eD5l08Ztzoo00THMXz7/dlLu9imSmuUNkFriMHWUHNz/Obu
j+kPW9zfa/K0PaF9OmTm+YRhhIi8Yq41iCCAzIIFWRHh/1/fmk58upeAAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://reformal.ru/i/logo.gif

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
MwIBADs=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://d7.c4.b9.a1.top.mail.ru/counter?js=na;id=1656615;t=94

R0lGODlhWAASAOMAAABgmAArRQAYSwCo5f///wA+YwA8YABMZwBulgAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAoALAAAAABYABIAAATqUMlJq7046827/2AojmRpnluCrt/gvnAMIwdNHHKu73zv
A8CgcCgMEALGAHHJbDqfUGABGTAgC8HpFWC1HoXaaqAwxToJaAIQDWgD1G54Gv6O090AI1o/BkzT
SklJeHpHR4N4iXhqd290bHWLcm2NeYeXgZiWSF9ugoKdiomTd6SUkIyjiqCcma2biG2DrKKKcqmU
p5C5c3GirLOarGWbsKG1kZGPi7nJy7+Yg397xq/SfGbIyY52z9y+jrtuZeR9flRY5WR9xOfm2vDx
8m0C9fb3+Pn6+/z9/v/9WAgcSLCgwYMIEypcuCECADs=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://idea2.ru/i2.png

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kFFAgLDuQhDYsAAAAZdEVYdENv
bW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAGsElEQVRYw+2XW4hdVxnHf9/ae5/bzJkzM83c
k46ZmOaitTYMtZEkSlsNrTUEImgRtIJgEdEHK/gg7UvBy1PxRWkkBmwKtvWh2JYivXhL09ZoNGls
J6lJTDIzmeuZmXPmnH1Za30+nKlYnOhoKyL4wWa/LNb/t74rH/yXTf7TAvXH7j1mz78M8RI+zBEN
vYfyZw/vfNsAPp4CWwc8SAimhCn2veXM0vcOqM6MoRIiYR6fxYRe0I4eopsOSHHXPf8aQFKbQmtn
NfBzBIFpiatHfQYKmByUhiXoupHqD+9W8+eXodiJbL+djo/fJ42nv6nZ6efwy9PQvYGuLz8lZq3i
0yefZHnsiNIcR4q9aG4daoqo9+BS1CX4ZBZmjmp8/JDK5B/xHmTTbvK7Pi8A0a7PfSTYNIoaCBYm
aP76MGsCuPDcg5pOPK/tA9vIdW1CGpfQ6nF08RR+6U+k1Uto/RLSnEGzBj5NMV0bML1b6PjEdyTf
NQhA1NH/rEqOQAUM+DD65yF49cjXtGjG2bDnboIwgvoYpDUUj7MwV21jYTYl1Hmu3ZASaIy6BFwC
UTfB8H4JBvYA0HzpYU2OHoalSWRgG5V7HpfwH4mfe+ZBaqePMLj/qwRhCIsnURe33K4e8tdSGvkg
0psx9vwTuOpRRoYaqMtAFdULaBqrq74uzV/8SLNfHsQ05qB/K7kP3CXwOFcFmDtzlPNPfF2HR28l
autHF09D2gB1oIqow+TbKA8O06HC0swotddOoLKMWgteUVVctpX44XvVz53HFLsx799Pef8DAj8B
uDrA9G8f1WJQpXPjKCxfRJMqsvJytTHamAQNYeAWNCjTOVAhWm5D/RRkHq8en94Ipw8ChnBkJ+XP
/EDgV2/RuSrA8rkXGNq2HQlyaO0s2BRVUNtE65fRxjTUpyHXgVk/SjE4QbE0i041wVpccj3ZhRcJ
whzByM2E67vW3gknjx1i8plv6Ltv+zSlvq1o/QLqHGQNtH4J35wB51BVEIN0dYPG+GoNbabY0k78
ay8hNiYQgfIg5CuIJqiRVstQCEc/uXoSNsZ/r1HeEBYq+MYMZBnqU7R+GV+fAAeo4pxSq8GVV6fp
6c7o6vDgPcyNE4R5xBRwRnBZSpBOYHB4MYBivECyvHoI4tmzhFGAGIOmdbApvjmL1mdQ68ApcSws
6mb84G6WbML4608y+t452o1DdAypgHqP8YpRB0SE1+2jbe+3/8brR1cHyBrzFMSAtWATNF5Ely6j
8TKo0nQl4r476NzyMdoHRxhoJvzmx3XS4k/RZrLSHT3qfKscvYLx2KWJv9NaFcDbDFWPZgnepfjl
ebSxBN6CKlHnRtpvuouosAA6Q9DWR6WvQgjosgXvUe9bwm/+NYTGwtoA1IRkjQTfXML4ZbQ2DZlF
VVH1SDKPVp8iS14haL8dX7kFsQuE4Qq4+lbJeo86RZ1HAg9ZtjYAidqIm02yxjyRa6BxbcWdHsXD
/BvYU48gmmC27sPmmng7jwktiAM8iv51WuI9GEVXGT2rDqOoPEjciEkWpqGxiKYWtRZ1DnUt97q5
WdySIoVrsM0m2AUCLBIoYhRkBZYVT6iBqH1tAIXeLZJ6oTYzjs/Slrh1rV7gXCsXnMUUOpCoDZc0
Ub+IwbGcKoQOQg/GtSDEA4Jp710bwOY774Oog/npSWySol5br7cW9SuXoki+DCaHTWLmxjMuTg4z
2ehACwKBB+MR8WACCAuEPVtlTQAApYHrqS4ssVidx2uItw51raxGfSvWUQGRkHJnhY03fIrydR+i
f0c7QVmRwLdCgbbOFbop7fkSawbouWGfJBS5MjWNzSwgqLOoutaHA01Ql5LPRwxtiVg3dJzO4iQk
GRI6CBRCBZMn6H8frlEdWTPA5o9+hXXbbmNivs7kzAKqIUjQygN1CB6NL6H1E8SNY3j/KGHtd+hs
syVsFAKQ9h6kNEDlwHclKHWdW1MZvmkbP/wFqY6f1YszZyhEwrqudjACGqM4XHOCdOIgdCnGXsFV
myAr4pFBpILWCkTDu4Gf/3t7wRsvHOLkY/drIZ5ipK/CumvaCQoCQR1TUKQI0mZa5ScCCt4K6rrx
1TaC/r2U73hA3tZiMvaz73Pm2YfUTpxiY2+B/vU9FMoRppAh+RTyYHICgQEKuGYJV6tgOm+mcue3
5B3bjF586Is684enabOzDPWW6O7tIOosYAoBEoRgDbYONhomfNdeyW++daS9f+TcO76avfLI/dQv
HFdTu0yOmLZyB2Gpk6DzWgpDOyQc2sH67Tv5v/1P2F8ApZOzcjFrnBMAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://robocraft.ru/rc.png

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
gwFAgAEAwJS/at5WvM4AAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/style.css?v=1

HTML {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DIV {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
SPAN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
APPLET {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
OBJECT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
IFRAME {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H5 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H6 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BLOCKQUOTE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
PRE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
A {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
ABBR {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
ACRONYM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
ADDRESS {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BIG {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
CITE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
CODE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DEL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DFN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
EM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FONT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
INS {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
KBD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
Q {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
S {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
SAMP {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
SMALL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
STRIKE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
STRONG {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
SUB {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
SUP {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
VAR {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
B {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
U {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
I {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
CENTER {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
OL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FIELDSET {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
LABEL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
LEGEND {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TABLE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
CAPTION {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TBODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TFOOT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
THEAD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TR {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TH {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
UL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
OL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
HTML {
	HEIGHT: 100%
}
BODY {
	HEIGHT: 100%
}
BODY {
	FONT: 12px/18px Tahoma, Arial, Helvetica, sans-serif; BACKGROUND: =
#f7f8f9; COLOR: #333
}
H1 {
	FONT: 18px Verdana; COLOR: #333
}
H2 {
	FONT: 18px Verdana; COLOR: #333
}
H3 {
	FONT: 18px Verdana; COLOR: #333
}
H4 {
	FONT: 18px Verdana; COLOR: #333
}
H5 {
	FONT: 18px Verdana; COLOR: #333
}
H6 {
	FONT: 18px Verdana; COLOR: #333
}
H1 {
	LINE-HEIGHT: 26px; MARGIN-BOTTOM: 10px; FONT-SIZE: 22px
}
H2 {
	LINE-HEIGHT: 24px; MARGIN-BOTTOM: 7px; FONT-SIZE: 20px
}
H3 {
	LINE-HEIGHT: 22px; MARGIN-BOTTOM: 5px; FONT-SIZE: 18px
}
H4 {
	LINE-HEIGHT: 22px; MARGIN-BOTTOM: 5px; FONT-SIZE: 17px
}
H5 {
	LINE-HEIGHT: 22px; MARGIN-BOTTOM: 5px; FONT-SIZE: 17px
}
H6 {
	LINE-HEIGHT: 22px; MARGIN-BOTTOM: 5px; FONT-SIZE: 17px
}
A {
	COLOR: #70aae0
}
A:hover {
	TEXT-DECORATION: none
}
.voting A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium
}
H1 SPAN {
	COLOR: #ccc
}
#container {
	MIN-WIDTH: 900px
}
#header {
	ZOOM: 1; BACKGROUND: url(../images/header-bg.gif) #000 repeat-x; =
HEIGHT: 80px; CLEAR: both; OVERFLOW: hidden
}
#nav {
	BACKGROUND: #e8e8e8; CLEAR: both
}
#wrapper {
	PADDING-BOTTOM: 30px; PADDING-LEFT: 20px; PADDING-RIGHT: 46px; ZOOM: 1; =
MARGIN-BOTTOM: 30px; OVERFLOW: hidden; PADDING-TOP: 20px
}
#content {
	PADDING-BOTTOM: 20px; WIDTH: 67%; ZOOM: 1; BACKGROUND: #fff; FLOAT: =
left; CLEAR: left; PADDING-TOP: 20px
}
#sidebar {
	MARGIN-TOP: -6px; WIDTH: 32%; FLOAT: left; MARGIN-LEFT: 1%
}
#footer {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 40px; PADDING-RIGHT: 40px; =
BACKGROUND: url(../images/footer-bg.gif) repeat-x; COLOR: #999; CLEAR: =
both; OVERFLOW: hidden; PADDING-TOP: 20px
}
.update-hide {
	PADDING-BOTTOM: 30px !important; PADDING-LEFT: 20px !important; =
PADDING-RIGHT: 16px !important; PADDING-TOP: 20px !important
}
.white-back {
	PADDING-BOTTOM: 15px; MARGIN: 0px 20px 30px; PADDING-LEFT: 20px; =
BACKGROUND: #fff
}
.white-back #content {
	CLEAR: none; PADDING-TOP: 0px
}
.page-talk {
	PADDING-LEFT: 3px !important; MARGIN-RIGHT: 50px !important
}
LABEL {
	MARGIN-BOTTOM: 2px
}
FORM P {
	MARGIN-BOTTOM: 20px
}
FORM .note {
	FLOAT: right; FONT-SIZE: 11px
}
FORM .buttons {
	OVERFLOW: hidden
}
FORM .right {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
FONT-FAMILY: Tahoma; FLOAT: right; COLOR: #333; FONT-SIZE: 18px; =
PADDING-TOP: 5px
}
TEXTAREA {
	WIDTH: 99%; MARGIN-BOTTOM: 5px; HEIGHT: 200px
}
TEXTAREA.small {
	WIDTH: 300px; MARGIN-BOTTOM: 5px; HEIGHT: 70px
}
SELECT {
	WIDTH: 99%
}
.w50 {
	WIDTH: 50px
}
.w70 {
	WIDTH: 70px
}
.w100 {
	WIDTH: 100px
}
.w200 {
	WIDTH: 200px
}
.w300 {
	WIDTH: 300px
}
.w100p {
	WIDTH: 99%
}
.radio {
	POSITION: relative; TOP: 2px
}
.checkbox {
	POSITION: relative; MARGIN-LEFT: 0px; TOP: 2px
}
.form-tags {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND: #fafafa; COLOR: #999; PADDING-TOP: 10px
}
.form-tags INPUT {
	WIDTH: 99%
}
.form_note {
	COLOR: #aaa; FONT-SIZE: 11px
}
#header H1 {
	PADDING-LEFT: 25px; FLOAT: left; PADDING-TOP: 25px
}
#header H1 A {
	FONT: 20px Arial, Sans-Serif; COLOR: #77d115; TEXT-DECORATION: none
}
#header H1 A STRONG {
	COLOR: #fff
}
#header .nav-main {
	PADDING-LEFT: 40px; FLOAT: left; OVERFLOW: hidden; PADDING-TOP: 31px
}
#header .nav-main LI {
	FLOAT: left; FONT-SIZE: 15px; MARGIN-RIGHT: 15px
}
#header .nav-main LI A {
	COLOR: #bebebe
}
#header .nav-main LI.active {
	POSITION: relative; TOP: -5px
}
#header .nav-main LI.active A {
	LINE-HEIGHT: 24px; COLOR: #fff; FONT-SIZE: 24px; TEXT-DECORATION: none
}
#header .profile {
	PADDING-RIGHT: 23px; FLOAT: right; PADDING-TOP: 15px
}
#header .profile A.avatar {
	WIDTH: 48px; DISPLAY: block; FLOAT: right; HEIGHT: 48px
}
#header .profile A.avatar IMG {
	WIDTH: 48px; HEIGHT: 48px
}
#header .profile UL {
	MARGIN-TOP: -2px; PADDING-RIGHT: 7px; FLOAT: right; COLOR: #afafaf; =
FONT-SIZE: 11px
}
#header .profile UL LI {
	TEXT-ALIGN: right; LINE-HEIGHT: 17px !important
}
#header .profile UL LI A {
	COLOR: #afafaf; TEXT-DECORATION: none
}
#header .profile UL LI A.author {
	COLOR: #fff; TEXT-DECORATION: underline
}
#header .profile UL LI A.message {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/icons.gif) no-repeat =
right -17px; COLOR: #ffea00; MARGIN-RIGHT: 5px
}
#header .profile UL LI A.message-empty {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/icons.gif) no-repeat =
right 3px; COLOR: #ffea00; MARGIN-RIGHT: 5px
}
#header .profile UL LI A:hover {
	COLOR: #ddd
}
#header .guest.profile {
	TEXT-ALIGN: left; WIDTH: 235px; PADDING-RIGHT: 0px; COLOR: #ddd; =
PADDING-TOP: 27px
}
#header .guest.profile A {
	LINE-HEIGHT: 20px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; =
OUTLINE-WIDTH: medium; COLOR: #fafafa; FONT-SIZE: 18px
}
#header .guest.profile A.reg {
	FONT-SIZE: 12px
}
#nav {
	ZOOM: 1; BACKGROUND: url(../images/bg.gif) #e9eaea repeat-x 0px -81px; =
HEIGHT: 92px; OVERFLOW: hidden
}
#nav .left {
	WIDTH: 20px; BACKGROUND: url(../images/bg.gif) no-repeat 0px -173px; =
FLOAT: left; HEIGHT: 92px
}
#nav .right {
	WIDTH: 20px; BACKGROUND: url(../images/bg.gif) no-repeat right -265px; =
FLOAT: right; HEIGHT: 92px
}
#nav .write {
	WIDTH: 110px; FLOAT: left; PADDING-TOP: 45px
}
.menu {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 37px; PADDING-RIGHT: 0px; FLOAT: =
left; FONT-SIZE: 15px; PADDING-TOP: 10px
}
.menu LI {
	PADDING-BOTTOM: 8px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FLOAT: =
left; COLOR: #51b038; PADDING-TOP: 5px
}
.menu LI A {
	COLOR: #838383; TEXT-DECORATION: none
}
.menu LI A:hover {
	COLOR: #333
}
.menu LI.active {
	POSITION: relative; BACKGROUND: url(../images/bg_info_menu.gif) =
repeat-x 5px 2px
}
.menu LI.active A {
	COLOR: #333
}
.sub-menu {
	POSITION: absolute; WIDTH: 400px; FONT-SIZE: 11px; TOP: 36px; LEFT: 0px
}
.sub-menu LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 12px; PADDING-LEFT: 11px; =
PADDING-RIGHT: 5px; MARGIN-RIGHT: 5px; PADDING-TOP: 2px
}
.sub-menu LI A {
	COLOR: #8a8a8a !important; TEXT-DECORATION: underline
}
.sub-menu LI A:hover {
	TEXT-DECORATION: none
}
.sub-menu LI.active {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 11px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/bg_info_menu.gif) no-repeat 0px bottom; =
PADDING-TOP: 0px
}
.sub-menu LI.active DIV {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 11px; =
BACKGROUND: url(../images/bg_info_menu.gif) no-repeat right bottom; =
FLOAT: left; COLOR: #fff; FONT-WEIGHT: bold; PADDING-TOP: 3px
}
.sub-menu LI.active A {
	COLOR: #fff !important; TEXT-DECORATION: none
}
#nav .search {
	WIDTH: 214px; PADDING-RIGHT: 3px; FLOAT: right; PADDING-TOP: 43px
}
#nav .search FORM {
	POSITION: relative; WIDTH: 214px
}
#nav .search INPUT {
	BORDER-BOTTOM: 0px; POSITION: absolute; BORDER-LEFT: 0px; MARGIN: 0px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
#nav .search .text {
	PADDING-BOTTOM: 6px; PADDING-LEFT: 15px; WIDTH: 170px; PADDING-RIGHT: =
0px; FONT: 12px Verdana, Sans-Serif; BACKGROUND: =
url(../images/search-left.gif) no-repeat; COLOR: #777; PADDING-TOP: 5px
}
#nav .search .button {
	WIDTH: 29px; BACKGROUND: url(../images/search-button.gif) no-repeat; =
HEIGHT: 25px; TOP: 0px; RIGHT: 0px
}
#nav .rss {
	MARGIN-TOP: 51px; WIDTH: 74px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -270px; FLOAT: right; HEIGHT: =
11px; MARGIN-RIGHT: 10px
}
#nav .rss:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -290px
}
#extra {
	MARGIN-TOP: 10px; PADDING-LEFT: 60px; CLEAR: both
}
#extra A {
	PADDING-LEFT: 12px; BACKGROUND: url(../images/icons.gif) no-repeat 0px =
-165px; COLOR: #aaa
}
.topic {
	POSITION: relative; PADDING-LEFT: 40px; PADDING-RIGHT: 30px; =
MARGIN-BOTTOM: 30px; FONT-SIZE: 13px; OVERFLOW: hidden
}
.topic H1.title {
	MARGIN-BOTTOM: 5px
}
.topic .favorite {
	POSITION: absolute; TOP: 7px; LEFT: 10px
}
.topic .favorite A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; =
WIDTH: 20px; DISPLAY: block; BACKGROUND: url(../images/icons.gif) =
no-repeat 0px -40px; HEIGHT: 16px
}
.topic .favorite A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -20px -40px
}
.topic .active.favorite A {
	BACKGROUND: url(../images/icons.gif) no-repeat -20px -40px
}
.topic .fav-guest.favorite A {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -40px; CURSOR: =
default
}
.topic .fav-guest.favorite A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -40px; CURSOR: =
default
}
.topic .action {
	MARGIN-BOTTOM: 20px; OVERFLOW: hidden
}
.topic .action LI {
	FLOAT: left; MARGIN-RIGHT: 3px
}
.topic .action LI A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; =
COLOR: #aaa
}
.topic .action LI.rss A {
	MARGIN-TOP: 5px; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat -70px -250px; HEIGHT: 10px
}
.topic .action LI.plus A {
	MARGIN-TOP: 5px; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat -30px -250px; HEIGHT: 10px
}
.topic .action LI.plus A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -250px
}
.topic .action LI.join A {
	MARGIN-TOP: 5px; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -250px; HEIGHT: 10px
}
.topic .action LI.join A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.topic .action LI.join-active A {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.topic .action LI.edit A {
	PADDING-LEFT: 15px; BACKGROUND: url(../images/edit.gif) no-repeat 0px =
1px; COLOR: #70aae0; MARGIN-LEFT: 10px; FONT-SIZE: 11px; =
TEXT-DECORATION: none
}
.topic .action LI.delete A {
	PADDING-LEFT: 15px; BACKGROUND: url(../images/delete.gif) no-repeat 0px =
1px; COLOR: #f00; MARGIN-LEFT: 5px; FONT-SIZE: 11px; TEXT-DECORATION: =
none
}
.topic .action LI A:hover {
	TEXT-DECORATION: underline
}
.topic .tags {
	PADDING-LEFT: 13px; MARGIN-BOTTOM: 3px; BACKGROUND: =
url(../images/icon-tag.gif) no-repeat 0px 6px; CLEAR: both
}
.topic .tags LI {
	DISPLAY: inline; COLOR: #777
}
.topic .tags LI A {
	COLOR: #777; TEXT-DECORATION: none
}
.topic .tags LI A:hover {
	BACKGROUND: #777; COLOR: #fff
}
.topic .voting {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/bg.gif) repeat-x 0px -576px; OVERFLOW: hidden; =
PADDING-TOP: 10px
}
.topic .voting LI {
	FLOAT: left; COLOR: #777
}
.topic .voting LI A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; =
TEXT-DECORATION: none
}
.topic .voting LI A:hover {
	BACKGROUND: #777; COLOR: #fff
}
.topic .voting LI.author {
	PADDING-LEFT: 13px; BACKGROUND: url(../images/icons.gif) no-repeat 0px =
-105px; COLOR: #999; MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
.topic .voting LI.author A {
	FONT-WEIGHT: bold
}
.topic .voting LI.date {
	COLOR: #999; FONT-SIZE: 11px; MARGIN-RIGHT: 20px
}
.topic .voting LI.link {
	PADDING-LEFT: 15px; BACKGROUND: url(../images/link_url.gif) no-repeat =
left center; COLOR: #999; FONT-SIZE: 11px; MARGIN-RIGHT: 20px
}
.topic .voting LI.plus {
	MARGIN-RIGHT: 5px
}
.topic .voting LI.total {
	COLOR: #aaa; MARGIN-RIGHT: 5px
}
.topic .voting LI.total A:hover {
	BACKGROUND: #fff; COLOR: #aaa
}
.topic .voting LI.total A {
	BACKGROUND: #fff; COLOR: #aaa
}
.topic .voting LI.minus {
	MARGIN-RIGHT: 20px
}
.topic .voting LI.plus A {
	MARGIN-TOP: 3px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -90px; FLOAT: left; HEIGHT: 11px; =
TEXT-DECORATION: none
}
.topic .voting LI.plus A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.topic .voting LI.minus A {
	MARGIN-TOP: 4px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat -10px -90px; FLOAT: left; HEIGHT: =
11px; TEXT-DECORATION: none
}
.topic .voting LI.minus A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.topic .voted.voting LI.plus A {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.topic .voted.voting LI.minus A {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.topic .plus.voting LI.plus A {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.topic .minus.voting LI.minus A {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.topic .guest.voting LI.plus A {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.topic .guest.voting LI.minus A {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.topic .positive.voting .total {
	COLOR: #390 !important
}
.topic .negative.voting .total {
	COLOR: #f00 !important
}
.topic .minus.voting LI.plus A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px
}
.topic .plus.voting LI.minus A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px
}
.topic .voting LI.comments-total A {
	FONT-SIZE: 11px
}
.topic .voting LI.comments-total A SPAN {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; =
PADDING-TOP: 0px
}
.topic .voting LI.comments-total A SPAN.green {
	COLOR: #390
}
.topic .voting LI.comments-total A SPAN.red {
	COLOR: #f00
}
.topic .voting LI.comments-total A:hover {
	BACKGROUND: #390
}
.topic .voting LI.comments-total A:hover SPAN {
	COLOR: #fff
}
.topic .voting LI.comments-total A:hover SPAN.red {
	BACKGROUND: #f00
}
.topic .content {
	LINE-HEIGHT: 20px; FONT-FAMILY: Verdana, sans-serif; MARGIN-BOTTOM: =
15px; FONT-SIZE: 14px
}
.topic .content IMG {
	MARGIN: 5px
}
.topic .content P {
	MARGIN-BOTTOM: 15px
}
.topic .content UL {
	MARGIN-BOTTOM: 15px; MARGIN-LEFT: 20px
}
OL {
	MARGIN-BOTTOM: 15px; MARGIN-LEFT: 20px
}
.topic .content UL LI {
	LIST-STYLE-TYPE: disc
}
.topic .content OL LI {
	LIST-STYLE-TYPE: decimal
}
.topic .content DL {
	MARGIN-BOTTOM: 15px
}
.topic .content DL DT {
	FONT-WEIGHT: bold
}
.topic .content DL DD {
	FONT-STYLE: italic; MARGIN: 0px 0px 5px 20px; COLOR: #555
}
.topic .content BLOCKQUOTE {
	PADDING-BOTTOM: 5px; FONT-STYLE: italic; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: #f8f8f8; PADDING-TOP: 5px
}
.topic .content PRE {
	BORDER-BOTTOM: #dce6f0 1px solid; BORDER-LEFT: #dce6f0 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 2%; WIDTH: 95%; PADDING-RIGHT: 2%; =
MARGIN-BOTTOM: 10px; BACKGROUND: url(../images/code.gif) #f8f8f8; CLEAR: =
both; OVERFLOW: auto; BORDER-TOP: #dce6f0 1px solid; BORDER-RIGHT: =
#dce6f0 1px solid; PADDING-TOP: 5px
}
.comment .content PRE {
	BORDER-BOTTOM: #dce6f0 1px solid; BORDER-LEFT: #dce6f0 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 2%; WIDTH: 95%; PADDING-RIGHT: 2%; =
MARGIN-BOTTOM: 10px; BACKGROUND: url(../images/code.gif) #f8f8f8; CLEAR: =
both; OVERFLOW: auto; BORDER-TOP: #dce6f0 1px solid; BORDER-RIGHT: =
#dce6f0 1px solid; PADDING-TOP: 5px
}
.comment .content BLOCKQUOTE {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; FONT-STYLE: italic; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: #ffffff; BORDER-TOP: #ddd 1px solid; =
BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 5px
}
.talk .favorite {
	POSITION: absolute; TOP: 7px; LEFT: 10px
}
.talk .favorite A {
	WIDTH: 20px; DISPLAY: block; BACKGROUND: url(../images/icons.gif) =
no-repeat 0px -40px; HEIGHT: 16px
}
.talk .favorite A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -20px -40px
}
.talk .active.favorite A {
	BACKGROUND: url(../images/icons.gif) no-repeat -20px -40px
}
.talk .guest.favorite A {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -40px; CURSOR: =
default
}
.tal-table .favorite {
=09
}
#pagination {
	PADDING-LEFT: 40px
}
#pagination P {
	COLOR: #bbb; FONT-SIZE: 16px
}
#pagination UL {
	MARGIN-TOP: 10px; FONT-FAMILY: Verdana, Sans-Serif; OVERFLOW: hidden
}
#pagination UL LI {
	FLOAT: left; MARGIN-RIGHT: 8px
}
#pagination UL LI.active {
	FONT-WEIGHT: bold
}
#pagination UL LI.active {
	BORDER-LEFT: #eee 1px solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 6px; BACKGROUND: url(../images/pagination-bg.gif) =
no-repeat right top; PADDING-TOP: 0px
}
#pagination UL LI.active {
	BORDER-LEFT: #eee 1px solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 6px; BACKGROUND: url(../images/pagination-bg.gif) =
no-repeat right top; PADDING-TOP: 0px
}
.onpage#pagination {
	PADDING-LEFT: 0px
}
.block-nav {
	MARGIN-BOTTOM: 5px; OVERFLOW: hidden
}
.block-nav LI {
	PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 11px; PADDING-LEFT: 0px =
!important; PADDING-RIGHT: 0px !important; BACKGROUND: =
url(../images/bg.gif) repeat-x 0px -534px; FLOAT: left; FONT-SIZE: 11px; =
PADDING-TOP: 0px !important
}
.block-nav LI A {
	PADDING-BOTTOM: 7px; MARGIN: 0px 8px; OUTLINE-STYLE: none; =
OUTLINE-COLOR: invert; PADDING-LEFT: 0px; OUTLINE-WIDTH: medium; =
PADDING-RIGHT: 0px; DISPLAY: block; FLOAT: left; COLOR: #a2a2a2; =
TEXT-DECORATION: none; PADDING-TOP: 3px
}
.block-nav LI STRONG {
	WIDTH: 5px; DISPLAY: block; BACKGROUND: url(../images/bg.gif) no-repeat =
-9px -555px; FLOAT: left; HEIGHT: 21px; MARGIN-RIGHT: -5px
}
.block-nav LI EM {
	WIDTH: 5px; DISPLAY: block; BACKGROUND: url(../images/bg.gif) no-repeat =
-5px -555px; FLOAT: left; HEIGHT: 21px; MARGIN-LEFT: -5px
}
.block-nav LI.active {
	BACKGROUND: url(../images/bg.gif) #81da5e repeat-x 0px -513px
}
.block-nav LI.active STRONG {
	BACKGROUND: url(../images/bg.gif) no-repeat 0px -555px
}
.block-nav LI.active EM {
	BACKGROUND: url(../images/bg.gif) no-repeat -14px -555px
}
.block-nav LI.active A {
	BACKGROUND: url(../images/bg.gif) no-repeat -19px -555px; COLOR: #fff
}
.block {
	LINE-HEIGHT: 16px; BACKGROUND: #fdfefe
}
.block H1 {
	PADDING-BOTTOM: 5px; FONT-FAMILY: Tahoma, Verdana, Sans-Serif; =
MARGIN-BOTTOM: 0px; COLOR: #333; FONT-SIZE: 20px
}
.block .right {
	TEXT-ALIGN: right; FONT-SIZE: 11px; PADDING-TOP: 10px
}
.block .tl {
	BACKGROUND: url(../images/sidebar-tl.gif) no-repeat left top; HEIGHT: =
19px
}
.block .tr {
	BACKGROUND: url(../images/sidebar-tr.gif) no-repeat right top; HEIGHT: =
19px
}
.block .bl {
	BACKGROUND: url(../images/sidebar-bl.gif) no-repeat left bottom; =
HEIGHT: 19px
}
.block .br {
	BACKGROUND: url(../images/sidebar-br.gif) no-repeat right bottom; =
HEIGHT: 19px
}
.block .cl {
	BACKGROUND: url(../images/sidebar-cl.gif) repeat-y left 50%
}
.block .cr {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 25px; PADDING-RIGHT: 25px; =
BACKGROUND: url(../images/sidebar-cr.gif) repeat-y right 50%; =
PADDING-TOP: 0px
}
.tags .tl {
	BACKGROUND: url(../images/sidebar-tags-tl.gif) no-repeat left top; =
HEIGHT: 19px
}
.tags .tr {
	BACKGROUND: url(../images/sidebar-tags-tr.gif) no-repeat right top; =
HEIGHT: 19px
}
.tags .bl {
	BACKGROUND: url(../images/sidebar-tags-bl.gif) no-repeat left bottom; =
HEIGHT: 19px
}
.tags .br {
	BACKGROUND: url(../images/sidebar-tags-br.gif) no-repeat right bottom; =
HEIGHT: 19px
}
.tags .cl {
	BACKGROUND: url(../images/sidebar-tags-cl.gif) repeat-y left 50%
}
.tags .cr {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 25px; PADDING-RIGHT: 25px; =
BACKGROUND: url(../images/sidebar-tags-cr.gif) repeat-y right 50%; =
PADDING-TOP: 0px
}
.navigation.block {
	COLOR: #888; FONT-SIZE: 11px
}
.navigation.block UL LI {
	BORDER-BOTTOM: #ddd 1px dotted; PADDING-BOTTOM: 10px; PADDING-TOP: 10px
}
.navigation.block UL LI.last {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.navigation.block .blog {
	COLOR: #999
}
.tags.block {
	BACKGROUND: #f7f8f9
}
.tags.block UL.cloud {
	TEXT-ALIGN: center
}
.tags.block UL.cloud LI {
	LINE-HEIGHT: 22px; DISPLAY: inline; MARGIN-RIGHT: 5px
}
.tags.block UL.cloud LI A {
	COLOR: #8b8b8b; FONT-SIZE: 18px; TEXT-DECORATION: none
}
.tags.block UL.cloud LI A:hover {
	BACKGROUND: #777; COLOR: #fff
}
.tags.block UL.cloud LI A.w1 {
	FONT-SIZE: 11px
}
.tags.block UL.cloud LI A.w2 {
	FONT-SIZE: 12px
}
.tags.block UL.cloud LI A.w3 {
	FONT-SIZE: 14px
}
.tags.block UL.cloud LI A.w4 {
	FONT-SIZE: 16px
}
.tags.block UL.cloud LI A.w5 {
	FONT-SIZE: 18px
}
.tags.block UL.cloud LI A.w6 {
	FONT-SIZE: 20px
}
.tags.block UL.cloud LI A.w7 {
	FONT-SIZE: 22px
}
.tags.block UL.cloud LI A.w8 {
	FONT-SIZE: 24px
}
.tags.block UL.cloud LI A.w9 {
	FONT-SIZE: 26px
}
.tags.block UL.cloud LI A.w10 {
	FONT-SIZE: 28px
}
.blogs.block UL.list {
	MARGIN-TOP: 10px; BORDER-TOP: #eee 1px solid; PADDING-TOP: 3px
}
.blogs.block UL.list LI {
	BORDER-BOTTOM: #eee 1px solid; PADDING-BOTTOM: 5px; MARGIN-BOTTOM: 5px; =
OVERFLOW: hidden
}
.blogs.block UL.list LI A {
	PADDING-RIGHT: 50px; COLOR: #777
}
.blogs.block UL.list LI .total {
	PADDING-RIGHT: 13px; FLOAT: right; FONT-WEIGHT: bold
}
.blogs.block UL.list LI .up {
	BACKGROUND: url(../images/blog-rating-up.gif) no-repeat right 5px
}
.blogs.block UL.list LI .down {
	BACKGROUND: url(../images/blog-rating-down.gif) no-repeat right 5px
}
.stream.block {
	COLOR: #999; FONT-SIZE: 11px
}
.stream.block LI {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; OVERFLOW: =
hidden; PADDING-TOP: 5px
}
.stream.block LI.even {
	BORDER-BOTTOM: #eee 1px solid; BACKGROUND: #f8f8f8; BORDER-TOP: #eee =
1px solid
}
.stream.block A.stream-author {
	PADDING-LEFT: 13px; BACKGROUND: url(../images/icons.gif) no-repeat 0px =
-108px; COLOR: #999; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.stream.block .stream-topic-icon {
	PADDING-LEFT: 14px; ZOOM: 1; BACKGROUND: url(../images/icons.gif) =
no-repeat 2px -188px
}
.stream.block A.stream-topic {
	PADDING-RIGHT: 5px; COLOR: #333
}
.stream.block .stream-comment-icon {
	PADDING-LEFT: 14px; ZOOM: 1; BACKGROUND: =
url(../images/comment-list.gif) no-repeat 2px 4px
}
.stream.block A.stream-comment {
	COLOR: #333
}
.stream.block A.stream-blog {
	COLOR: #999
}
.stream.block SPAN {
	COLOR: #66b746
}
.white.block {
	BACKGROUND: #fff
}
.white.block .tl {
	BACKGROUND: url(../images/sidebar-profile-tl.gif) no-repeat left top; =
HEIGHT: 19px
}
.white.block .tr {
	BACKGROUND: url(../images/sidebar-profile-tr.gif) no-repeat right top; =
HEIGHT: 19px
}
.white.block .bl {
	BACKGROUND: url(../images/sidebar-profile-bl.gif) no-repeat left =
bottom; HEIGHT: 19px
}
.white.block .br {
	BACKGROUND: url(../images/sidebar-profile-br.gif) no-repeat right =
bottom; HEIGHT: 19px
}
.white.block .cl {
	BACKGROUND: url(../images/sidebar-profile-cl.gif) repeat-y left 50%
}
.white.block .cr {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 25px; PADDING-RIGHT: 25px; =
BACKGROUND: url(../images/sidebar-profile-cr.gif) repeat-y right 50%; =
PADDING-TOP: 0px
}
.nostyle.block {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 25px; PADDING-RIGHT: 25px; =
PADDING-TOP: 20px
}
.options.block H3 {
	PADDING-BOTTOM: 10px
}
.options.block LI {
	PADDING-BOTTOM: 5px
}
.actions.block LI {
	PADDING-BOTTOM: 3px; COLOR: #4ccc1b
}
.actions.block LI.add {
	PADDING-BOTTOM: 15px; COLOR: #4ccc1b
}
.actions.block LI.add A {
	COLOR: #4ccc1b
}
.actions.block LI.del {
	PADDING-BOTTOM: 15px; COLOR: #dd0000
}
.actions.block LI.del A {
	COLOR: #dd0000
}
.contacts.block STRONG {
	COLOR: #999
}
.contacts.block IMG {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 7px; PADDING-LEFT: 7px; PADDING-RIGHT: 7px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 7px
}
.contacts.block UL {
	MARGIN-TOP: 5px
}
.contacts.block UL LI {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 25px; PADDING-RIGHT: 0px; =
PADDING-TOP: 3px
}
.contacts.block UL LI.icq {
	BACKGROUND: url(../images/icons-contacts.gif) no-repeat 0px 2px
}
.contacts.block UL LI.jabber {
	BACKGROUND: url(../images/icons-contacts.gif) no-repeat 0px -23px
}
.contacts.block UL LI.skype {
	MARGIN-BOTTOM: 10px; BACKGROUND: url(../images/icons-contacts.gif) =
no-repeat 0px -47px
}
.contacts.block UL LI.lj {
	BACKGROUND: url(../images/icons-contacts.gif) no-repeat 0px -73px
}
.contacts.block UL LI.vk {
	MARGIN-BOTTOM: 10px; BACKGROUND: url(../images/icons-contacts.gif) =
no-repeat 0px -99px
}
.contacts.block UL LI.email {
	BACKGROUND: url(../images/icons-contacts.gif) no-repeat 0px -122px
}
.contacts.block UL LI.phone {
	BACKGROUND: url(../images/icons-contacts.gif) no-repeat 0px -145px
}
.stat.block UL.users {
	WIDTH: 150px; COLOR: #999; FONT-SIZE: 11px
}
.stat.block UL.users LI {
	BORDER-BOTTOM: #eee 1px solid; PADDING-BOTTOM: 2px
}
.stat.block UL.users LI.last {
	BORDER-BOTTOM: 0px
}
.stat.block .gender {
	OVERFLOW: hidden
}
.stat.block .gender UL {
	WIDTH: 150px; FLOAT: left; COLOR: #999; FONT-SIZE: 11px; PADDING-TOP: =
50px
}
.stat.block .gender UL LI {
	BORDER-BOTTOM: #eee 1px solid; PADDING-BOTTOM: 2px
}
.stat.block .gender UL LI.last {
	BORDER-BOTTOM: 0px
}
.stat.block .gender UL LI .mark {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; MARGIN-TOP: =
4px; WIDTH: 8px; FLOAT: right; HEIGHT: 8px; OVERFLOW: hidden; =
BORDER-TOP: #ddd 1px solid; MARGIN-RIGHT: 2px; BORDER-RIGHT: #ddd 1px =
solid
}
.stat.block .chart {
	WIDTH: 160px; FLOAT: left
}
.view.block UL LI {
	PADDING-BOTTOM: 2px
}
.view.block UL LI A {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
PADDING-TOP: 2px
}
.view.block UL LI.active A {
	BACKGROUND: #eee; COLOR: #333; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.view-blogs.block {
	MARGIN-TOP: 77px
}
.view-comments.block {
	MARGIN-TOP: 98px
}
.update {
	POSITION: fixed; TEXT-ALIGN: center; WIDTH: 42px; BACKGROUND: 0px 0px; =
FLOAT: right; TOP: 220px; RIGHT: 0px
}
.update .tl {
	BACKGROUND: url(../images/bg_update.gif) no-repeat 0px 0px; HEIGHT: =
9px; FONT-SIZE: 1px
}
.update .bl {
	BACKGROUND: url(../images/bg_update.gif) no-repeat 0px bottom; HEIGHT: =
9px; FONT-SIZE: 1px
}
.update .wrapper {
	BORDER-LEFT: #dddede 1px solid; BACKGROUND: #fafbfb
}
.update .update-comments {
	VERTICAL-ALIGN: top; CURSOR: pointer
}
.update .refresh {
	BACKGROUND: #fafbfb
}
.update .new-comments {
	MARGIN-TOP: 3px; BACKGROUND: #fafbfb; COLOR: #3cc600; BORDER-TOP: =
#ececed 1px solid; CURSOR: pointer; PADDING-TOP: 7px
}
.comments {
	PADDING-LEFT: 25px
}
.comments .comment {
	POSITION: relative; ZOOM: 1; OVERFLOW: hidden
}
.comments .comment .comment {
	PADDING-LEFT: 30px
}
.comments .header {
	MARGIN-BOTTOM: 20px; MARGIN-LEFT: 14px
}
.comments .header A.rss {
	PADDING-LEFT: 14px; BACKGROUND: url(../images/icons.gif) no-repeat =
-70px -247px; MARGIN-RIGHT: 20px
}
.comments .comment .content {
	BACKGROUND: #f7f7f7
}
.comments .comment .self.content {
	BACKGROUND: #fdf5e6
}
.comments .comment .new.content {
	BACKGROUND: #e4fbf1
}
.comments .comment .del.content {
	BACKGROUND: #c5c5c5
}
.comments .comment .view.content {
	BACKGROUND: #cdf5a6
}
.comment .folding {
	POSITION: relative; WIDTH: 9px; FLOAT: left; HEIGHT: 9px; TOP: 17px; =
CURSOR: pointer
}
.comment .folding-open {
	POSITION: relative; WIDTH: 9px; FLOAT: left; HEIGHT: 9px; TOP: 17px; =
CURSOR: pointer
}
.comment .off.folding {
	DISPLAY: none
}
.comment .content {
	PADDING-BOTTOM: 0px; MARGIN: 0px 50px 0px 13px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.comment SPAN.delete {
	COLOR: #c5c5c5; FONT-SIZE: 16px
}
.comment .content .tb {
	BACKGROUND: url(../images/comment-tb.gif) repeat-x; HEIGHT: 7px; =
OVERFLOW: hidden
}
.comment .content .tl {
	BACKGROUND: url(../images/comment-tl.gif) no-repeat left top; HEIGHT: =
7px
}
.comment .content .tr {
	BACKGROUND: url(../images/comment-tr.gif) no-repeat right top; HEIGHT: =
7px
}
.comment .content .bb {
	BACKGROUND: url(../images/comment-bb.gif) repeat-x; HEIGHT: 15px; =
MARGIN-LEFT: 24px
}
.comment .content .bl {
	BACKGROUND: url(../images/comment-bl.gif) no-repeat left bottom; =
HEIGHT: 15px
}
.comment .content .br {
	BACKGROUND: url(../images/comment-br.gif) no-repeat right bottom; =
HEIGHT: 15px
}
.comment .content .text {
	BORDER-LEFT: #dddede 1px solid; PADDING-BOTTOM: 5px; PADDING-LEFT: =
10px; PADDING-RIGHT: 25px; ZOOM: 1; OVERFLOW: hidden; BORDER-RIGHT: =
#dddede 1px solid; PADDING-TOP: 5px
}
.comment .voting {
	Z-INDEX: 100; POSITION: absolute; WIDTH: 48px; HEIGHT: 30px; OVERFLOW: =
hidden; TOP: 8px; RIGHT: 20px
}
.comment .voting A.plus {
	WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat 0px 0px; HEIGHT: 11px; =
OVERFLOW: hidden
}
.comment .voting A.minus {
	POSITION: relative; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat -10px 0px; HEIGHT: 11px; =
OVERFLOW: hidden; TOP: 5px
}
.comment .voting .total {
	POSITION: relative; FLOAT: right; TOP: 3px
}
.comment .voting A.plus:hover {
	BACKGROUND: url(../images/comment-voting.gif) no-repeat -40px 0px
}
.comment .voting A.minus:hover {
	BACKGROUND: url(../images/comment-voting.gif) no-repeat -70px 0px
}
.comment .positive.voting .total {
	COLOR: #390
}
.comment .negative.voting .total {
	COLOR: #f00
}
.comment .guest.voting A.plus {
	WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat 0px 0px; HEIGHT: 11px; =
OVERFLOW: hidden
}
.comment .guest.voting A.minus {
	WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat -10px 0px; HEIGHT: 11px; =
OVERFLOW: hidden
}
.comment .plus.voting A.plus {
	WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat -40px 0px; HEIGHT: 11px; =
OVERFLOW: hidden
}
.comment .minus.voting A.minus {
	WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/comment-voting.gif) no-repeat -70px 0px; HEIGHT: 11px; =
OVERFLOW: hidden
}
.comment .voted.voting A.plus {
	CURSOR: default
}
.comment .voted.voting A.minus {
	CURSOR: default
}
.comment .guest.voting A.plus {
	CURSOR: default
}
.comment .guest.voting A.minus {
	CURSOR: default
}
.comment .minus.voting A.plus:hover {
	BACKGROUND: url(../images/comment-voting.gif) no-repeat 0px 0px
}
.comment .plus.voting A.minus:hover {
	BACKGROUND: url(../images/comment-voting.gif) no-repeat -10px 0px
}
.comment .info {
	LINE-HEIGHT: 14px; ZOOM: 1; MARGIN-BOTTOM: 25px; MARGIN-LEFT: 14px; =
FONT-SIZE: 11px; OVERFLOW: hidden
}
.comment .info P {
	FONT-SIZE: 10px
}
.comment .info P A.author {
	COLOR: #000; FONT-SIZE: 11px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.comment .info P A.author:hover {
	COLOR: #555
}
.comment .info IMG.avatar {
	MARGIN: 3px 7px 0px 0px; FLOAT: left
}
.comment .info UL LI {
	FLOAT: left; FONT-SIZE: 10px; MARGIN-RIGHT: 10px
}
.comment .info UL LI.date {
	PADDING-RIGHT: 20px; COLOR: #999; FONT-SIZE: 10px
}
.comment .info A.imglink {
	POSITION: relative; WIDTH: 9px; DISPLAY: block; HEIGHT: 11px; TOP: 3px; =
TEXT-DECORATION: none
}
.comment .info UL LI.goto-comment-parent A {
	BORDER-BOTTOM: #79b1d4 1px dotted; FONT-FAMILY: tahoma; =
TEXT-DECORATION: none
}
.comment .info UL LI.goto-comment-child A {
	BORDER-BOTTOM: #79b1d4 1px dotted; FONT-FAMILY: tahoma; =
TEXT-DECORATION: none
}
.comment .info A.link {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -230px
}
.comment .info A.link:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -230px
}
.comment .info A.favorite {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -40px
}
.comment .info A.favorite:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -50px -40px
}
.comment .info A.favorite-active {
	BACKGROUND: url(../images/icons.gif) no-repeat -50px -40px
}
.comment .info A.off {
	COLOR: #999
}
.comment .info A.repair {
	COLOR: #4ccc1b
}
.comment .info A.delete {
	COLOR: #f00
}
.comment .comment-topic {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 2px; COLOR: #999; FONT-SIZE: 11px
}
.comment .comment-topic A {
	FONT-WEIGHT: bold
}
.comment .comment-topic A.comment-blog {
	COLOR: #999
}
.comment .comment-topic A.comment-total {
	PADDING-LEFT: 10px; BACKGROUND: url(../images/comment-total.gif) =
no-repeat 0px 4px; COLOR: #78c658; MARGIN-LEFT: 10px; FONT-WEIGHT: =
normal; TEXT-DECORATION: none
}
.padding-none.comments {
	PADDING-LEFT: 0px
}
.padding-none.comments .comment .content {
	MARGIN-LEFT: 0px
}
.padding-none.comments .comment .info {
	MARGIN-LEFT: 0px
}
.padding-none.comments .voting {
	TOP: 28px
}
.reply-title {
	MARGIN-LEFT: 10px
}
.reply {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 50px; =
PADDING-TOP: 0px
}
.reply TEXTAREA {
	WIDTH: 100%; HEIGHT: 70px
}
.reply TEXTAREA.loader {
	BACKGROUND: url(../images/loader.gif) #f7f7f7 no-repeat center 50%
}
.poll {
	MARGIN: 0px 0px 15px
}
.poll LI {
	LIST-STYLE-TYPE: none !important; LIST-STYLE-IMAGE: none !important
}
.poll LI DL {
	OVERFLOW: hidden
}
.poll LI DL DT {
	WIDTH: 50px; FLOAT: left; COLOR: #999; FONT-SIZE: 11px; FONT-WEIGHT: =
normal !important
}
.poll LI DL DT SPAN {
	COLOR: #333; FONT-SIZE: 12px
}
.poll LI DL DD {
	FONT-STYLE: normal !important; WIDTH: 70%; FLOAT: left
}
.poll LI DL DD DIV {
	MARGIN-TOP: 3px; BACKGROUND: url(../images/poll.gif) #ddd no-repeat; =
HEIGHT: 5px; OVERFLOW: hidden
}
.poll LI DL DD DIV SPAN {
	DISPLAY: block; BACKGROUND: url(../images/poll.gif) #ddd no-repeat =
right top; HEIGHT: 5px; MARGIN-LEFT: 10px; OVERFLOW: hidden
}
.poll LI.most DL DT SPAN {
	FONT-WEIGHT: bold
}
.poll LI.most DL DD DIV {
	BACKGROUND: url(../images/poll-most.gif) #390 no-repeat
}
.poll LI.most DL DD DIV SPAN {
	BACKGROUND: url(../images/poll-most.gif) #390 no-repeat right top
}
.poll-new {
	MARGIN: 0px 0px 15px
}
.poll-new LI {
	LIST-STYLE-TYPE: none !important; MARGIN-BOTTOM: 5px; LIST-STYLE-IMAGE: =
none !important
}
.poll-new LI INPUT {
	POSITION: relative; TOP: 2px; MARGIN-RIGHT: 3px
}
.profile-blog {
	POSITION: relative; PADDING-BOTTOM: 0px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 15px; OVERFLOW: hidden; PADDING-TOP: 0px
}
.profile-blog IMG.avatar {
	POSITION: absolute; FLOAT: left; TOP: 4px; LEFT: 10px
}
.profile-blog H1.title {
	LINE-HEIGHT: 30px; PADDING-LEFT: 33px; COLOR: #b0b0b0; FONT-SIZE: 24px
}
.profile-blog H1.title A.title-link {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; =
TEXT-DECORATION: none
}
.profile-blog H1.title A.title-link SPAN {
	BORDER-BOTTOM: #70aae0 1px dashed
}
.profile-blog H1.title A.inactive SPAN {
	BORDER-BOTTOM: #aaa 1px dashed; COLOR: #b0b0b0; TEXT-DECORATION: none
}
.profile-blog H1.title STRONG {
	PADDING-RIGHT: 12px; BACKGROUND: url(../images/profile-blog-info.gif) =
no-repeat 0px 6px; MARGIN-LEFT: 7px
}
.profile-blog H1.title A.inactive STRONG {
	BACKGROUND: url(../images/profile-blog-info-inactive.gif) no-repeat 0px =
6px
}
.profile-blog .action {
	MARGIN: 0px 0px 20px; PADDING-LEFT: 34px; ZOOM: 1; OVERFLOW: hidden
}
.profile-blog .action LI {
	FLOAT: left; MARGIN-RIGHT: 3px
}
.profile-blog .action LI A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; =
COLOR: #aaa
}
.profile-blog .action LI.rss A {
	WIDTH: 10px; DISPLAY: block; BACKGROUND: url(../images/icons.gif) =
no-repeat -70px -250px; HEIGHT: 10px
}
.profile-blog .action LI.join A {
	WIDTH: 10px; DISPLAY: block; BACKGROUND: url(../images/icons.gif) =
no-repeat 0px -250px; HEIGHT: 10px
}
.profile-blog .action LI.join A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.profile-blog .action LI.active.join A {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.profile-blog .action LI.edit A {
	POSITION: relative; PADDING-LEFT: 20px; BACKGROUND: =
url(../images/edit.gif) no-repeat 0px 1px; COLOR: #70aae0; MARGIN-LEFT: =
10px; FONT-SIZE: 11px; TOP: -4px; TEXT-DECORATION: none
}
.profile-blog .action LI A:hover {
	TEXT-DECORATION: underline
}
.profile-blog .voting {
	POSITION: relative; TEXT-ALIGN: center; FLOAT: right; FONT-SIZE: 10px; =
TOP: -5px
}
.profile-blog .voting .clear {
	COLOR: #aaa; CLEAR: both
}
.profile-blog .voting .count {
	POSITION: absolute; COLOR: #aaa; TOP: 46px; LEFT: 69%
}
.profile-blog .voting .text {
	POSITION: absolute; COLOR: #aaa; TOP: 46px; RIGHT: 33%
}
.profile-blog .voting .plus {
	FLOAT: left; MARGIN-RIGHT: 5px
}
.profile-blog .voting .total {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FLOAT: =
left; COLOR: #fff; FONT-SIZE: 14px; MARGIN-RIGHT: 5px; PADDING-TOP: 5px
}
.profile-blog .voting .minus {
	FLOAT: left; MARGIN-RIGHT: 0px
}
.profile-blog .voting A.plus {
	MARGIN-TOP: 8px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -90px; FLOAT: left; HEIGHT: 11px; =
TEXT-DECORATION: none
}
.profile-blog .voting A.plus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.profile-blog .voting A.minus {
	MARGIN-TOP: 9px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat -10px -90px; FLOAT: left; HEIGHT: =
11px; TEXT-DECORATION: none
}
.profile-blog .voting A.minus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.profile-blog .plus.voting A.plus {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.profile-blog .minus.voting A.minus {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.profile-blog .guest.voting A.plus {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.profile-blog .guest.voting A.minus {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.profile-blog .positive.voting .total {
	BACKGROUND: #68bf46
}
.profile-blog .negative.voting .total {
	BACKGROUND: #ff3b3c
}
.profile-blog .voted.voting A.plus {
	CURSOR: default
}
.profile-blog .voted.voting A.minus {
	CURSOR: default
}
.profile-blog .plus.voted.voting A.minus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.profile-blog .minus.voted.voting A.plus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.profile-blog .about {
	MARGIN-BOTTOM: 40px; BACKGROUND: #f4f4f6; CLEAR: both
}
.profile-blog .about .tl {
	BACKGROUND: url(../images/profile-blog-tl.gif) no-repeat left top; =
HEIGHT: 10px
}
.profile-blog .about .tr {
	BACKGROUND: url(../images/profile-blog-tr.gif) no-repeat right top; =
HEIGHT: 10px
}
.profile-blog .about .bl {
	BACKGROUND: url(../images/profile-blog-bl.gif) no-repeat left bottom; =
HEIGHT: 10px
}
.profile-blog .about .br {
	BACKGROUND: url(../images/profile-blog-br.gif) no-repeat right bottom; =
HEIGHT: 10px
}
.profile-blog .about .content {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 32px; PADDING-RIGHT: 32px; COLOR: =
#666; OVERFLOW: hidden; PADDING-TOP: 5px
}
.profile-blog .about .content H1 {
	COLOR: #555
}
.profile-blog .about .content P {
	MARGIN-BOTTOM: 15px
}
.profile-blog .about .content P.note {
	MARGIN-BOTTOM: 25px; COLOR: #aaa
}
.profile-blog .about .content .line {
	MARGIN-BOTTOM: 20px; BACKGROUND: url(../images/footer-bg.gif) repeat-x; =
HEIGHT: 5px; CLEAR: both
}
.profile-blog .about .content .admins {
	WIDTH: 50%; FLOAT: left
}
.profile-blog .about .content .moderators {
	WIDTH: 50%; FLOAT: left
}
.profile-blog .about .content UL.admin-list {
	TEXT-ALIGN: center; OVERFLOW: hidden
}
.profile-blog .about .content UL.admin-list LI {
	MARGIN-BOTTOM: 10px; FLOAT: left; MARGIN-RIGHT: 10px
}
.profile-blog .about .content UL.admin-list LI DT IMG {
	WIDTH: 48px; HEIGHT: 48px
}
.profile-blog .about .content H1.readers {
	CLEAR: both; PADDING-TOP: 35px
}
.profile-blog .about .content H1.readers A {
	BORDER-BOTTOM: #70aae0 1px dashed; TEXT-DECORATION: none
}
.profile-blog .about .content H1.readers A.inactive {
	BORDER-BOTTOM: #aaa 1px dashed; COLOR: #b0b0b0; TEXT-DECORATION: none
}
.profile-blog .about .content UL.reader-list {
	OVERFLOW: hidden
}
.profile-blog .about .content UL.reader-list LI {
	PADDING-LEFT: 12px; BACKGROUND: url(../images/icons.gif) no-repeat 0px =
-104px; FLOAT: left; MARGIN-RIGHT: 15px
}
.profile-user {
	PADDING-RIGHT: 20px
}
.profile-user .voting {
	POSITION: relative; FLOAT: right; FONT-SIZE: 10px; TOP: -5px
}
.profile-user .voting .clear {
	TEXT-ALIGN: center; COLOR: #aaa; CLEAR: both
}
.profile-user .voting .count {
	POSITION: absolute; COLOR: #aaa; TOP: 46px; LEFT: 69%
}
.profile-user .voting .text {
	POSITION: absolute; COLOR: #aaa; TOP: 46px; RIGHT: 33%
}
.profile-user .voting .plus {
	FLOAT: left; MARGIN-RIGHT: 5px
}
.profile-user .voting .total {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FLOAT: =
left; COLOR: #fff; FONT-SIZE: 14px; MARGIN-RIGHT: 5px; PADDING-TOP: 5px
}
.profile-user .voting .minus {
	FLOAT: left; MARGIN-RIGHT: 0px
}
.profile-user .voting A.plus {
	MARGIN-TOP: 8px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -90px; FLOAT: left; HEIGHT: 11px; =
TEXT-DECORATION: none
}
.profile-user .voting A.plus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.profile-user .voting A.minus {
	MARGIN-TOP: 9px; WIDTH: 9px; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat -10px -90px; FLOAT: left; HEIGHT: =
11px; TEXT-DECORATION: none
}
.profile-user .voting A.minus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.profile-user .plus.voting A.plus {
	BACKGROUND: url(../images/icons.gif) no-repeat -40px -90px
}
.profile-user .minus.voting A.minus {
	BACKGROUND: url(../images/icons.gif) no-repeat -70px -90px
}
.profile-user .guest.voting A.plus {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.profile-user .guest.voting A.minus {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.profile-user .positive.voting .total {
	BACKGROUND: #68bf46
}
.profile-user .negative.voting .total {
	BACKGROUND: #ff3b3c
}
.profile-user .voted.voting A.plus {
	CURSOR: default
}
.profile-user .voted.voting A.minus {
	CURSOR: default
}
.profile-user .plus.voted.voting A.minus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -90px; CURSOR: =
default
}
.profile-user .minus.voted.voting A.plus:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat 0px -90px; CURSOR: =
default
}
.profile-user .strength {
	POSITION: relative; TEXT-ALIGN: center; FLOAT: right; MARGIN-LEFT: =
15px; FONT-SIZE: 10px; TOP: -5px
}
.profile-user .strength .clear {
	COLOR: #aaa; CLEAR: both
}
.profile-user .strength .total {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND: #70aae0; FLOAT: left; COLOR: #fff; FONT-SIZE: 14px; =
PADDING-TOP: 5px
}
.profile-user H1.title {
	BORDER-BOTTOM: #ccc 1px solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 2px; =
PADDING-RIGHT: 0px; MARGIN-BOTTOM: 7px; FONT-SIZE: 18px; PADDING-TOP: =
0px
}
.profile-user .name {
	MARGIN-BOTTOM: 20px; COLOR: #999; OVERFLOW: hidden
}
.profile-user .name IMG.avatar {
	FLOAT: left; MARGIN-RIGHT: 15px
}
.profile-user .name P.nickname {
	MARGIN-TOP: 2px; MARGIN-BOTTOM: 10px; COLOR: #333; FONT-SIZE: 24px
}
.profile-user .name P.realname {
	MARGIN-BOTTOM: 15px; FONT-SIZE: 18px
}
.profile-user TD {
	VERTICAL-ALIGN: top
}
.profile-user TD.var {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; WIDTH: 150px; PADDING-RIGHT: =
0px; COLOR: #999; FONT-WEIGHT: bold; PADDING-TOP: 0px
}
.profile-user TD.friends {
	COLOR: #999
}
.profile-user TD.friends A {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 12px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/icons.gif) no-repeat 0px -101px; COLOR: #999; =
PADDING-TOP: 5px
}
.people .block-nav {
	MARGIN-BOTTOM: 20px
}
.people H1 SPAN {
	COLOR: #6ec80d
}
.people TABLE {
	WIDTH: 100%; BORDER-COLLAPSE: collapse; MARGIN-BOTTOM: 20px
}
.people TABLE THEAD TD {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: =
#f0f1f1; FONT-WEIGHT: bold; PADDING-TOP: 5px
}
.people TABLE THEAD TD.user {
	PADDING-LEFT: 10px
}
.people TABLE THEAD TD.strength {
	TEXT-ALIGN: center; WIDTH: 80px
}
.people TABLE THEAD TD.rating {
	TEXT-ALIGN: center; WIDTH: 80px
}
.people TABLE THEAD TD.date {
	TEXT-ALIGN: center; WIDTH: 150px
}
.people TABLE TBODY TD {
	BORDER-BOTTOM: #ddd 1px solid; PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; COLOR: #999; FONT-SIZE: 11px; PADDING-TOP: 5px
}
.people TABLE TBODY TD SPAN {
	COLOR: #6ec80d
}
.people TABLE TBODY TD.user {
	PADDING-LEFT: 10px; OVERFLOW: hidden; _height: 1%
}
.people TABLE TBODY TD.user IMG {
	WIDTH: 24px; FLOAT: left; HEIGHT: 24px; MARGIN-RIGHT: 7px
}
.people TABLE TBODY TD.user A.link {
	POSITION: relative; COLOR: #999; TOP: 1px; FONT-WEIGHT: bold
}
.people TABLE TBODY TD.karma {
	COLOR: #6ec80d; FONT-WEIGHT: bold
}
.people TABLE TBODY TD.strength {
	TEXT-ALIGN: center; COLOR: #70aae0; FONT-WEIGHT: bold
}
.people TABLE TBODY TD.date {
	TEXT-ALIGN: center
}
.people TABLE TBODY TD.rating {
	TEXT-ALIGN: center
}
.people TABLE TBODY TD.rating SPAN {
	PADDING-RIGHT: 12px
}
.people TABLE TBODY TD.up.rating SPAN {
	BACKGROUND: url(../images/blog-rating-up.gif) no-repeat right 3px
}
.people TABLE TBODY TD.down.rating SPAN {
	BACKGROUND: url(../images/blog-rating-down.gif) no-repeat right 3px
}
.people TABLE TBODY TD.rating STRONG {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND: #ff68cf; COLOR: #fff; PADDING-TOP: 5px
}
.top-blogs.people THEAD TD.user {
	PADDING-LEFT: 32px
}
.top-blogs.people THEAD TD.join-head {
	TEXT-ALIGN: center; WIDTH: 40px
}
.top-blogs.people THEAD TD.readers {
	TEXT-ALIGN: center; WIDTH: 100px
}
.top-blogs.people TBODY TD.readers {
	TEXT-ALIGN: center; WIDTH: 100px
}
.top-blogs.people TBODY TD {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 7px
}
.top-blogs.people TD.name {
	OVERFLOW: hidden
}
.top-blogs.people TD.name IMG {
	PADDING-BOTTOM: 5px; WIDTH: 24px; FLOAT: left; HEIGHT: 24px; =
MARGIN-RIGHT: 7px
}
.top-blogs.people TD.name A.title {
	LINE-HEIGHT: 14px; FONT-SIZE: 18px
}
.top-blogs.people TD.name A.author {
	LINE-HEIGHT: 18px; PADDING-LEFT: 12px; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -108px; COLOR: #999; FONT-WEIGHT: =
bold
}
.top-blogs.people .join {
	TEXT-ALIGN: center
}
.top-blogs.people .join A {
	MARGIN: 0px auto; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; =
OUTLINE-WIDTH: medium; WIDTH: 10px; ZOOM: 1; DISPLAY: block; BACKGROUND: =
url(../images/icons.gif) no-repeat 0px -250px; HEIGHT: 10px
}
.top-blogs.people .join A:hover {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.top-blogs.people .active.join A {
	BACKGROUND: url(../images/icons.gif) no-repeat -10px -250px
}
.top-blogs.people THEAD TD.fav-head {
	TEXT-ALIGN: center; WIDTH: 40px
}
.top-blogs.people .fav {
	TEXT-ALIGN: center
}
.top-blogs.people .fav A {
	MARGIN: 0px auto; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/star-off.gif) no-repeat; HEIGHT: 10px
}
.top-blogs.people .fav A:hover {
	BACKGROUND: url(../images/star.gif) no-repeat
}
.top-blogs.people .active.fav A {
	BACKGROUND: url(../images/star.gif) no-repeat
}
.talk-table.people THEAD TD.user {
	PADDING-LEFT: 10px
}
.talk-table.people .author {
	MARGIN-LEFT: 10px
}
.top.topic {
	PADDING-LEFT: 40px; MARGIN-BOTTOM: 5px
}
.top.topic H1 SPAN {
	COLOR: #6ec80d
}
.top.topic .block-nav {
	MARGIN-BOTTOM: 5px
}
.top-topics .topic {
	PADDING-LEFT: 0px !important
}
#footer .right {
	FLOAT: right
}
.lsCmtTree_visible {
	DISPLAY: block
}
.lsCmtTree_hidden {
	DISPLAY: none
}
.lite-header {
	PADDING-BOTTOM: 30px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 30px
}
.lite-header A {
	COLOR: #c7c7c7; FONT-SIZE: 26px; TEXT-DECORATION: none
}
.lite-header A SPAN {
	COLOR: #dedede
}
.lite-header A:hover {
	COLOR: #333
}
.lite-header A:hover SPAN {
	COLOR: #777
}
.lite-center {
	MARGIN: 0px auto 20px; WIDTH: 400px; COLOR: #888; TOP: 200px
}
.lite-center H3 {
	MARGIN-BOTTOM: 20px; COLOR: #bec0bf
}
.login-popup H3 {
	MARGIN-BOTTOM: 20px; COLOR: #bec0bf
}
.lite-center BUTTON {
	FLOAT: right
}
.login-popup BUTTON {
	FLOAT: right
}
.lite-center .input-text {
	BORDER-BOTTOM: #d7d7d7 1px solid; BORDER-LEFT: #d7d7d7 1px solid; =
PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; WIDTH: 400px; PADDING-RIGHT: =
0px; COLOR: #555; FONT-SIZE: 18px; BORDER-TOP: #d7d7d7 1px solid; =
BORDER-RIGHT: #d7d7d7 1px solid; PADDING-TOP: 4px
}
.login-popup .input-text {
	BORDER-BOTTOM: #d7d7d7 1px solid; BORDER-LEFT: #d7d7d7 1px solid; =
PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; WIDTH: 400px; PADDING-RIGHT: =
0px; COLOR: #555; FONT-SIZE: 18px; BORDER-TOP: #d7d7d7 1px solid; =
BORDER-RIGHT: #d7d7d7 1px solid; PADDING-TOP: 4px
}
.lite-center .input-checkbox {
	PADDING-TOP: 7px
}
.login-popup .input-checkbox {
	PADDING-TOP: 7px
}
.lite-center .input-checkbox INPUT {
	POSITION: relative; TOP: 2px
}
.login-popup .input-checkbox INPUT {
	POSITION: relative; TOP: 2px
}
.lite-center .input-note {
	LINE-HEIGHT: 14px; DISPLAY: block; COLOR: #bbb; FONT-SIZE: 11px
}
.error.lite-center H1 {
	COLOR: #888; FONT-SIZE: 28px
}
.error.lite-center P {
	MARGIN-BOTTOM: 10px; COLOR: #888
}
.register.lite-center {
	POSITION: static; MARGIN: 0px auto
}
.lite-note {
	ZOOM: 1; OVERFLOW: hidden
}
.lite-note A {
	FLOAT: right; FONT-SIZE: 11px
}
.login-popup {
	Z-INDEX: 100; WIDTH: 492px
}
.login-popup .input-text {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 5px; WIDTH: 402px; PADDING-RIGHT: =
5px; PADDING-TOP: 4px
}
.login-popup .content {
	PADDING-BOTTOM: 15px; PADDING-LEFT: 40px; PADDING-RIGHT: 40px; =
BACKGROUND: url(../images/login-popup-bg.gif) #dcdedd repeat-x; =
PADDING-TOP: 15px
}
.login-popup .login-popup-top {
	POSITION: relative; WIDTH: 492px; BACKGROUND: =
url(../images/login-popup-top.gif) no-repeat; HEIGHT: 14px
}
.login-popup .login-popup-bottom {
	WIDTH: 492px; BACKGROUND: url(../images/login-popup-bottom.gif) =
no-repeat; HEIGHT: 14px
}
.login-popup .close-block {
	POSITION: absolute; WIDTH: 14px; BACKGROUND: =
url(../images/close-block.gif) no-repeat; HEIGHT: 14px; TOP: 10px; =
RIGHT: 10px
}
.upload-image P {
	MARGIN-BOTTOM: 5px
}
.upload-image LABEL {
	COLOR: #aaa
}
.tags-input {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 6px; PADDING-LEFT: 4px; WIDTH: 400px; PADDING-RIGHT: =
4px; BACKGROUND: #fafafa; COLOR: #555; FONT-SIZE: 18px; BORDER-TOP: #ccc =
1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 4px
}
BUTTON {
	BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium =
none; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
FONT-FAMILY: Tahoma, sans-serif; WHITE-SPACE: nowrap; BACKGROUND: none =
transparent scroll repeat 0% 0%; FONT-SIZE: 14px; OVERFLOW: visible; =
BORDER-TOP: medium none; CURSOR: pointer; BORDER-RIGHT: medium none; =
PADDING-TOP: 0px
}
A.button {
	BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium =
none; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
FONT-FAMILY: Tahoma, sans-serif; WHITE-SPACE: nowrap; BACKGROUND: none =
transparent scroll repeat 0% 0%; FONT-SIZE: 14px; OVERFLOW: visible; =
BORDER-TOP: medium none; CURSOR: pointer; BORDER-RIGHT: medium none; =
PADDING-TOP: 0px
}
BUTTON SPAN {
	LINE-HEIGHT: 31px; MARGIN: 0px; DISPLAY: block; HEIGHT: 31px; COLOR: =
#333
}
BUTTON EM {
	LINE-HEIGHT: 31px; MARGIN: 0px; DISPLAY: block; HEIGHT: 31px; COLOR: =
#333
}
A.button SPAN {
	LINE-HEIGHT: 31px; MARGIN: 0px; DISPLAY: block; HEIGHT: 31px; COLOR: =
#333
}
A.button EM {
	LINE-HEIGHT: 31px; MARGIN: 0px; DISPLAY: block; HEIGHT: 31px; COLOR: =
#333
}
BUTTON SPAN {
	BACKGROUND: url(../images/button.gif) no-repeat 0px 0px; MARGIN-RIGHT: =
20px
}
A.button SPAN {
	BACKGROUND: url(../images/button.gif) no-repeat 0px 0px; MARGIN-RIGHT: =
20px
}
BUTTON EM {
	POSITION: relative; FONT-STYLE: normal; PADDING-RIGHT: 20px; =
BACKGROUND: url(../images/button.gif) no-repeat right 0px; RIGHT: -20px
}
A.button EM {
	POSITION: relative; FONT-STYLE: normal; PADDING-RIGHT: 20px; =
BACKGROUND: url(../images/button.gif) no-repeat right 0px; RIGHT: -20px
}
A.small.button {
	FONT-SIZE: 12px; TEXT-DECORATION: none
}
A.small.button SPAN {
	LINE-HEIGHT: 22px; HEIGHT: 22px
}
A.small.button EM {
	LINE-HEIGHT: 22px; HEIGHT: 22px
}
A.small.button SPAN {
	BACKGROUND: url(../images/button-small.gif) no-repeat 0px 0px; =
MARGIN-RIGHT: 20px
}
A.small.button EM {
	BACKGROUND: url(../images/button-small.gif) no-repeat right 0px
}
#system_messages_error {
	BORDER-BOTTOM: #ff8181 1px solid; BORDER-LEFT: #ff8181 1px solid; =
PADDING-BOTTOM: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
MARGIN-BOTTOM: 15px; BACKGROUND: #f0c8c8; COLOR: #b22626; BORDER-TOP: =
#ff8181 1px solid; BORDER-RIGHT: #ff8181 1px solid; PADDING-TOP: 15px
}
#system_messages_notice {
	BORDER-BOTTOM: #83c460 1px solid; BORDER-LEFT: #83c460 1px solid; =
PADDING-BOTTOM: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
MARGIN-BOTTOM: 15px; BACKGROUND: #dafad8; COLOR: #4bb23b; BORDER-TOP: =
#83c460 1px solid; BORDER-RIGHT: #83c460 1px solid; PADDING-TOP: 15px
}
.table-blog-users {
	MARGIN-TOP: 20px; WIDTH: 100%; MARGIN-BOTTOM: 30px
}
.table-blog-users THEAD TD {
	TEXT-ALIGN: center; PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: #f1f1f1; COLOR: #555; PADDING-TOP: 10px
}
.table-blog-users TBODY TD {
	TEXT-ALIGN: center; PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: #fafafa; PADDING-TOP: 5px
}
.table-blog-users TBODY TD.username {
	TEXT-ALIGN: left
}
.table-blog-users TBODY TR.even TD {
	BACKGROUND: #f5f5f5
}
.searched-item {
	BACKGROUND: #fffacd
}
TABLE.admin_page TH {
	BORDER-BOTTOM: #b0c1d3 1px solid; BORDER-LEFT: medium none; =
PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.65em; PADDING-RIGHT: 0.6em; =
BACKGROUND: #e2e4e4; COLOR: #6e6e6e; FONT-SIZE: 0.9em; VERTICAL-ALIGN: =
bottom; BORDER-TOP: medium none; FONT-WEIGHT: normal; BORDER-RIGHT: =
medium none; PADDING-TOP: 0.2em
}
TABLE.admin_page TD {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
6px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; BORDER-TOP: medium none; =
BORDER-RIGHT: #b0c1d3 1px solid; PADDING-TOP: 6px
}
TABLE.admin_page TR.colored TD {
	BACKGROUND-COLOR: #eef6fb
}
TABLE.admin_page TR.colored_sel TD {
	BACKGROUND-COLOR: #d9fbc2
}
TABLE.admin_page {
	BORDER-BOTTOM: #b0c1d3 1px solid; BORDER-LEFT: medium none; MARGIN: =
20px 0px 30px; FONT-SIZE: 0.9em; BORDER-TOP: medium none; BORDER-RIGHT: =
medium none
}
TABLE.admin_page TD:first-child {
	BORDER-LEFT: #b0c1d3 1px solid
}
TABLE.admin_page TD {
=09
}
TABLE.admin_page IMG {
	MARGIN: 0px
}
.hidden {
	DISPLAY: none
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/ie7.css?v=1

#header H1 {
	PADDING-TOP: 29px
}
#header .nav-main {
	PADDING-TOP: 31px
}
.comment .info IMG.avatar {
	MARGIN: 2px 7px 0px 0px
}
#nav .nav-blog LI UL LI A {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 11px; =
PADDING-TOP: 4px
}
.people TABLE TBODY TD.up.rating SPAN {
	BACKGROUND: url(../images/blog-rating-up.gif) no-repeat right 8px
}
.people TABLE TBODY TD.down.rating SPAN {
	BACKGROUND: url(../images/blog-rating-down.gif) no-repeat right 8px
}
.top-blogs.people TD.name A.author {
	LINE-HEIGHT: 25px
}
.top-blogs.people .join A {
	POSITION: relative; TOP: 1px
}
.overlay {
	FILTER: alpha(opacity=3D50); ZOOM: 1; BACKGROUND: #000
}
.login-popup .content {
	PADDING-RIGHT: 38px
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/Roar.css

.roar-error-body {
	Z-INDEX: 999; POSITION: absolute; TEXT-ALIGN: left; FONT: 12px/14px =
"Lucida Grande", Arial, Helvetica, Verdana, sans-serif; COLOR: #fff
}
.roar-error {
	POSITION: absolute; WIDTH: 300px; CURSOR: pointer
}
.roar-error-bg {
	Z-INDEX: 1000; POSITION: absolute; BACKGROUND-COLOR: #f00; WIDTH: 100%; =
HEIGHT: 100%; TOP: 0px; LEFT: 0px; -moz-border-radius: 10px; =
-webkit-border-radius: 5px; -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, =
0.5)
}
.roar-error-body-ugly .roar-error {
	BACKGROUND-COLOR: #bf0000
}
.roar-error-body-ugly .roar-error-bg {
	DISPLAY: none
}
.roar-error H3 {
	Z-INDEX: 1002; BORDER-BOTTOM: 0px; POSITION: relative; BORDER-LEFT: =
0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; COLOR: #fff; FONT-SIZE: 15px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px; PADDING-TOP: 15px
}
.roar-error P {
	Z-INDEX: 1002; POSITION: relative; PADDING-BOTTOM: 15px; MARGIN: 0px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; COLOR: #fff; FONT-SIZE: 12px; =
PADDING-TOP: 10px
}
.roar-notice-body {
	Z-INDEX: 999; POSITION: absolute; TEXT-ALIGN: left; FONT: 12px/14px =
"Lucida Grande", Arial, Helvetica, Verdana, sans-serif; COLOR: #fff
}
.roar-notice {
	POSITION: absolute; WIDTH: 300px; CURSOR: pointer
}
.roar-notice-bg {
	Z-INDEX: 1000; POSITION: absolute; BACKGROUND-COLOR: #399f2f; WIDTH: =
100%; HEIGHT: 100%; TOP: 0px; LEFT: 0px; -moz-border-radius: 10px; =
-webkit-border-radius: 5px; -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, =
0.5)
}
.roar-notice-body-ugly .roar-notice {
	BACKGROUND-COLOR: #399f2f
}
.roar-notice-body-ugly .roar-notice-bg {
	DISPLAY: none
}
.roar-notice H3 {
	Z-INDEX: 1002; BORDER-BOTTOM: 0px; POSITION: relative; BORDER-LEFT: =
0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; COLOR: #fff; FONT-SIZE: 15px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px; PADDING-TOP: 15px
}
.roar-notice P {
	Z-INDEX: 1002; POSITION: relative; PADDING-BOTTOM: 15px; MARGIN: 0px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; COLOR: #fff; FONT-SIZE: 12px; =
PADDING-TOP: 10px
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/piechart.css

.pieChartContainer {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; PADDING-LEFT: 15px; =
PADDING-RIGHT: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; =
FONT-SIZE: 12px; PADDING-TOP: 20px
}
.pieChartWrapper {
	POSITION: relative; PADDING-RIGHT: 12px; FLOAT: left
}
.pieChartWrapper IMG {
	POSITION: absolute; TOP: 0px; LEFT: 0px
}
.clear {
	CLEAR: both
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/Autocompleter.css

UL.autocompleter-choices {
	Z-INDEX: 50; BORDER-BOTTOM: #bbb 1px solid; POSITION: absolute; =
TEXT-ALIGN: left; BORDER-LEFT: #bbb 1px solid; PADDING-BOTTOM: 0px; =
BACKGROUND-COLOR: #fff; LIST-STYLE-TYPE: none; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Verdana, Arial, =
Geneva, Helvetica, sans-serif; COLOR: #333; BORDER-TOP: #bbb 1px solid; =
LIST-STYLE-IMAGE: none; BORDER-RIGHT: #bbb 1px solid; PADDING-TOP: 0px
}
UL.autocompleter-choices LI {
	POSITION: relative; PADDING-BOTTOM: 0.2em; LINE-HEIGHT: 16px; MARGIN: =
-2px 0px 0px; PADDING-LEFT: 1em; PADDING-RIGHT: 1.5em; DISPLAY: block; =
WHITE-SPACE: nowrap; FLOAT: none !important; FONT-SIZE: 11px; CURSOR: =
pointer; FONT-WEIGHT: normal; PADDING-TOP: 0.2em
}
UL.autocompleter-choices LI.autocompleter-selected {
	BACKGROUND-COLOR: #0a246a; COLOR: #fff
}
UL.autocompleter-choices SPAN.autocompleter-queried {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; DISPLAY: inline; FLOAT: none; FONT-WEIGHT: bold; PADDING-TOP: 0px
}
UL.autocompleter-choices LI.autocompleter-selected =
SPAN.autocompleter-queried {
	COLOR: #fff60b
}
INPUT.autocompleter-loading {
	BACKGROUND-IMAGE: url(../img/spinner.gif); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: right 50%
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/prettify.css

.str {
	COLOR: #080
}
.kwd {
	COLOR: #008
}
.com {
	COLOR: #800
}
.typ {
	COLOR: #606
}
.lit {
	COLOR: #066
}
.pun {
	COLOR: #660
}
.pln {
	COLOR: #000
}
.tag {
	COLOR: #008
}
.atn {
	COLOR: #606
}
.atv {
	COLOR: #080
}
.dec {
	COLOR: #606
}
PRE.prettyprint {
	BORDER-BOTTOM: #888 1px solid; BORDER-LEFT: #888 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; BORDER-TOP: =
#888 1px solid; BORDER-RIGHT: #888 1px solid; PADDING-TOP: 2px
}

@media Print   =20
{
.str {
	COLOR: #060
}
.kwd {
	COLOR: #006; FONT-WEIGHT: bold
}
.com {
	FONT-STYLE: italic; COLOR: #600
}
.typ {
	COLOR: #404; FONT-WEIGHT: bold
}
.lit {
	COLOR: #044
}
.pun {
	COLOR: #440
}
.pln {
	COLOR: #000
}
.tag {
	COLOR: #006; FONT-WEIGHT: bold
}
.atn {
	COLOR: #404
}
.atv {
	COLOR: #060
}

}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/simple_comments.css

.comment .content .tb {
	BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 7px; =
OVERFLOW: hidden
}
.comment .content .tl {
	BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 7px
}
.comment .content .tr {
	BORDER-LEFT: #dddede 1px solid; BACKGROUND: none transparent scroll =
repeat 0% 0%; HEIGHT: 7px; BORDER-TOP: #dddede 1px solid; BORDER-RIGHT: =
#dddede 1px solid
}
.comment .content .bb {
	BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 7px; =
MARGIN-LEFT: 0px; OVERFLOW: hidden
}
.comment .content .bl {
	BORDER-BOTTOM: #dddede 1px solid; BORDER-LEFT: #dddede 1px solid; =
MARGIN-BOTTOM: 5px; BACKGROUND: none transparent scroll repeat 0% 0%; =
HEIGHT: 7px; BORDER-RIGHT: #dddede 1px solid
}
.comment .content .br {
	BACKGROUND: none transparent scroll repeat 0% 0%; HEIGHT: 7px
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: text/css;
	charset="koi8-r"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/css/banner-slider.css

.slide-banner-arrow {
	POSITION: absolute; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; =
OUTLINE-WIDTH: medium; WIDTH: 24px; DISPLAY: block; BACKGROUND: =
url(../images/arrow-downup.png) no-repeat 0px -24px; HEIGHT: 24px; =
MARGIN-LEFT: 0px; TOP: 155px; LEFT: 50%
}
.opened.slide-banner-arrow {
	BACKGROUND-POSITION: 0px 0px
}
.slide-banner-text {
	COLOR: #999999; FONT-SIZE: 15px
}
.slide-banner-text A {
	TEXT-DECORATION: none
}
.slide-banner-big {
	FONT-STYLE: italic; FONT-FAMILY: Georgia; COLOR: black; FONT-SIZE: =
22px; FONT-WEIGHT: bold
}
.slide-banner-average {
	FONT-STYLE: italic; FONT-FAMILY: Georgia; COLOR: black; FONT-SIZE: =
16px; FONT-WEIGHT: bold
}

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/JsHttpRequest/JsHttpRequest.js

/**
 * JsHttpRequest: JavaScript "AJAX" data loader
 * Minimized version: see debug directory for the complete one.
 *
 * @license LGPL
 * @author Dmitry Koterov, http://en.dklab.ru/lib/JsHttpRequest/
 * @version 5.x $Id$
 */
function JsHttpRequest(){
var t=3Dthis;
t.onreadystatechange=3Dnull;
t.readyState=3D0;
t.responseText=3Dnull;
t.responseXML=3Dnull;
t.status=3D200;
t.statusText=3D"OK";
t.responseJS=3Dnull;
t.caching=3Dfalse;
t.loader=3Dnull;
t.session_name=3D"PHPSESSID";
t._ldObj=3Dnull;
t._reqHeaders=3D[];
t._openArgs=3Dnull;
t._errors=3D{inv_form_el:"Invalid FORM element detected: name=3D%, =
tag=3D%",must_be_single_el:"If used, <form> must be a single HTML =
element in the list.",js_invalid:"JavaScript code generated by backend =
is invalid!\n%",url_too_long:"Cannot use so long query with GET request =
(URL is larger than % bytes)",unk_loader:"Unknown loader: =
%",no_loaders:"No loaders registered at all, please check =
JsHttpRequest.LOADERS array",no_loader_matched:"Cannot find a loader =
which may process the request. Notices are:\n%"};
t.abort=3Dfunction(){
with(this){
if(_ldObj&&_ldObj.abort){
_ldObj.abort();
}
_cleanup();
if(readyState=3D=3D0){
return;
}
if(readyState=3D=3D1&&!_ldObj){
readyState=3D0;
return;
}
_changeReadyState(4,true);
}
};
t.open=3Dfunction(_2,_3,_4,_5,_6){
with(this){
if(_3.match(/^((\w+)\.)?(GET|POST)\s+(.*)/i)){
this.loader=3DRegExp.$2?RegExp.$2:null;
_2=3DRegExp.$3;
_3=3DRegExp.$4;
}
try{
if(document.location.search.match(new =
RegExp("[&?]"+session_name+"=3D([^&?]*)"))||document.cookie.match(new =
RegExp("(?:;|^)\\s*"+session_name+"=3D([^;]*)"))){
_3+=3D(_3.indexOf("?")>=3D0?"&":"?")+session_name+"=3D"+this.escape(RegEx=
p.$1);
}
}
catch(e){
}
_openArgs=3D{method:(_2||"").toUpperCase(),url:_3,asyncFlag:_4,username:_=
5!=3Dnull?_5:"",password:_6!=3Dnull?_6:""};
_ldObj=3Dnull;
_changeReadyState(1,true);
return true;
}
};
t.send=3Dfunction(_7){
if(!this.readyState){
return;
}
this._changeReadyState(1,true);
this._ldObj=3Dnull;
var _8=3D[];
var _9=3D[];
if(!this._hash2query(_7,null,_8,_9)){
return;
}
var _a=3Dnull;
if(this.caching&&!_9.length){
_a=3Dthis._openArgs.username+":"+this._openArgs.password+"@"+this._openAr=
gs.url+"|"+_8+"#"+this._openArgs.method;
var _b=3DJsHttpRequest.CACHE[_a];
if(_b){
this._dataReady(_b[0],_b[1]);
return false;
}
}
var _c=3D(this.loader||"").toLowerCase();
if(_c&&!JsHttpRequest.LOADERS[_c]){
return this._error("unk_loader",_c);
}
var _d=3D[];
var _e=3DJsHttpRequest.LOADERS;
for(var _f in _e){
var ldr=3D_e[_f].loader;
if(!ldr){
continue;
}
if(_c&&_f!=3D_c){
continue;
}
var _11=3Dnew ldr(this);
JsHttpRequest.extend(_11,this._openArgs);
JsHttpRequest.extend(_11,{queryText:_8.join("&"),queryElem:_9,id:(new =
Date().getTime())+""+JsHttpRequest.COUNT++,hash:_a,span:null});
var _12=3D_11.load();
if(!_12){
this._ldObj=3D_11;
JsHttpRequest.PENDING[_11.id]=3Dthis;
return true;
}
if(!_c){
_d[_d.length]=3D"- "+_f.toUpperCase()+": "+this._l(_12);
}else{
return this._error(_12);
}
}
return =
_f?this._error("no_loader_matched",_d.join("\n")):this._error("no_loaders=
");
};
t.getAllResponseHeaders=3Dfunction(){
with(this){
return =
_ldObj&&_ldObj.getAllResponseHeaders?_ldObj.getAllResponseHeaders():[];
}
};
t.getResponseHeader=3Dfunction(_13){
with(this){
return =
_ldObj&&_ldObj.getResponseHeader?_ldObj.getResponseHeader(_13):null;
}
};
t.setRequestHeader=3Dfunction(_14,_15){
with(this){
_reqHeaders[_reqHeaders.length]=3D[_14,_15];
}
};
t._dataReady=3Dfunction(_16,js){
with(this){
if(caching&&_ldObj){
JsHttpRequest.CACHE[_ldObj.hash]=3D[_16,js];
}
responseText=3DresponseXML=3D_16;
responseJS=3Djs;
if(js!=3D=3Dnull){
status=3D200;
statusText=3D"OK";
}else{
status=3D500;
statusText=3D"Internal Server Error";
}
_changeReadyState(2);
_changeReadyState(3);
_changeReadyState(4);
_cleanup();
}
};
t._l=3Dfunction(_18){
var i=3D0,p=3D0,msg=3Dthis._errors[_18[0]];
while((p=3Dmsg.indexOf("%",p))>=3D0){
var a=3D_18[++i]+"";
msg=3Dmsg.substring(0,p)+a+msg.substring(p+1,msg.length);
p+=3D1+a.length;
}
return msg;
};
t._error=3Dfunction(msg){
msg=3Dthis._l(typeof (msg)=3D=3D"string"?arguments:msg);
msg=3D"JsHttpRequest: "+msg;
if(!window.Error){
throw msg;
}else{
if((new Error(1,"test")).description=3D=3D"test"){
throw new Error(1,msg);
}else{
throw new Error(msg);
}
}
};
t._hash2query=3Dfunction(_1e,_1f,_20,_21){
if(_1f=3D=3Dnull){
_1f=3D"";
}
if((""+typeof (_1e)).toLowerCase()=3D=3D"object"){
var _22=3Dfalse;
if(_1e&&_1e.parentNode&&_1e.parentNode.appendChild&&_1e.tagName&&_1e.tagN=
ame.toUpperCase()=3D=3D"FORM"){
_1e=3D{form:_1e};
}
for(var k in _1e){
var v=3D_1e[k];
if(v instanceof Function){
continue;
}
var _25=3D_1f?_1f+"["+this.escape(k)+"]":this.escape(k);
var _26=3Dv&&v.parentNode&&v.parentNode.appendChild&&v.tagName;
if(_26){
var tn=3Dv.tagName.toUpperCase();
if(tn=3D=3D"FORM"){
_22=3Dtrue;
}else{
if(tn=3D=3D"INPUT"||tn=3D=3D"TEXTAREA"||tn=3D=3D"SELECT"){
}else{
return this._error("inv_form_el",(v.name||""),v.tagName);
}
}
_21[_21.length]=3D{name:_25,e:v};
}else{
if(v instanceof Object){
this._hash2query(v,_25,_20,_21);
}else{
if(v=3D=3D=3Dnull){
continue;
}
if(v=3D=3D=3Dtrue){
v=3D1;
}
if(v=3D=3D=3Dfalse){
v=3D"";
}
_20[_20.length]=3D_25+"=3D"+this.escape(""+v);
}
}
if(_22&&_21.length>1){
return this._error("must_be_single_el");
}
}
}else{
_20[_20.length]=3D_1e;
}
return true;
};
t._cleanup=3Dfunction(){
var _28=3Dthis._ldObj;
if(!_28){
return;
}
JsHttpRequest.PENDING[_28.id]=3Dfalse;
var _29=3D_28.span;
if(!_29){
return;
}
_28.span=3Dnull;
var _2a=3Dfunction(){
_29.parentNode.removeChild(_29);
};
JsHttpRequest.setTimeout(_2a,50);
};
t._changeReadyState=3Dfunction(s,_2c){
with(this){
if(_2c){
status=3DstatusText=3DresponseJS=3Dnull;
responseText=3D"";
}
readyState=3Ds;
if(onreadystatechange){
onreadystatechange();
}
}
};
t.escape=3Dfunction(s){
return escape(s).replace(new RegExp("\\+","g"),"%2B");
};
}
JsHttpRequest.COUNT=3D0;
JsHttpRequest.MAX_URL_LEN=3D2000;
JsHttpRequest.CACHE=3D{};
JsHttpRequest.PENDING=3D{};
JsHttpRequest.LOADERS=3D{};
JsHttpRequest._dummy=3Dfunction(){
};
JsHttpRequest.TIMEOUTS=3D{s:window.setTimeout,c:window.clearTimeout};
JsHttpRequest.setTimeout=3Dfunction(_2e,dt){
window.JsHttpRequest_tmp=3DJsHttpRequest.TIMEOUTS.s;
if(typeof (_2e)=3D=3D"string"){
id=3Dwindow.JsHttpRequest_tmp(_2e,dt);
}else{
var id=3Dnull;
var _31=3Dfunction(){
_2e();
delete JsHttpRequest.TIMEOUTS[id];
};
id=3Dwindow.JsHttpRequest_tmp(_31,dt);
JsHttpRequest.TIMEOUTS[id]=3D_31;
}
window.JsHttpRequest_tmp=3Dnull;
return id;
};
JsHttpRequest.clearTimeout=3Dfunction(id){
window.JsHttpRequest_tmp=3DJsHttpRequest.TIMEOUTS.c;
delete JsHttpRequest.TIMEOUTS[id];
var r=3Dwindow.JsHttpRequest_tmp(id);
window.JsHttpRequest_tmp=3Dnull;
return r;
};
JsHttpRequest.query=3Dfunction(url,_35,_36,_37){
var req=3Dnew this();
req.caching=3D!_37;
req.onreadystatechange=3Dfunction(){
if(req.readyState=3D=3D4){
_36(req.responseJS,req.responseText);
}
};
req.open(null,url,true);
req.send(_35);
};
JsHttpRequest.dataReady=3Dfunction(d){
var th=3Dthis.PENDING[d.id];
delete this.PENDING[d.id];
if(th){
th._dataReady(d.text,d.js);
}else{
if(th!=3D=3Dfalse){
throw "dataReady(): unknown pending id: "+d.id;
}
}
};
JsHttpRequest.extend=3Dfunction(_3b,src){
for(var k in src){
_3b[k]=3Dsrc[k];
}
};
JsHttpRequest.LOADERS.xml=3D{loader:function(req){
JsHttpRequest.extend(req._errors,{xml_no:"Cannot use XMLHttpRequest or =
ActiveX loader: not supported",xml_no_diffdom:"Cannot use XMLHttpRequest =
to load data from different domain %",xml_no_headers:"Cannot use =
XMLHttpRequest loader or ActiveX loader, POST method: headers setting is =
not supported, needed to work with encodings =
correctly",xml_no_form_upl:"Cannot use XMLHttpRequest loader: direct =
form elements using and uploading are not implemented"});
this.load=3Dfunction(){
if(this.queryElem.length){
return ["xml_no_form_upl"];
}
if(this.url.match(new RegExp("^([a-z]+://[^\\/]+)(.*)","i"))){
if(RegExp.$1.toLowerCase()!=3Ddocument.location.protocol+"//"+document.lo=
cation.hostname.toLowerCase()){
return ["xml_no_diffdom",RegExp.$1];
}
}
var xr=3Dnull;
if(window.XMLHttpRequest){
try{
xr=3Dnew XMLHttpRequest();
}
catch(e){
}
}else{
if(window.ActiveXObject){
try{
xr=3Dnew ActiveXObject("Microsoft.XMLHTTP");
}
catch(e){
}
if(!xr){
try{
xr=3Dnew ActiveXObject("Msxml2.XMLHTTP");
}
catch(e){
}
}
}
}
if(!xr){
return ["xml_no"];
}
var _40=3Dwindow.ActiveXObject||xr.setRequestHeader;
if(!this.method){
this.method=3D_40&&this.queryText.length?"POST":"GET";
}
if(this.method=3D=3D"GET"){
if(this.queryText){
this.url+=3D(this.url.indexOf("?")>=3D0?"&":"?")+this.queryText;
}
this.queryText=3D"";
if(this.url.length>JsHttpRequest.MAX_URL_LEN){
return ["url_too_long",JsHttpRequest.MAX_URL_LEN];
}
}else{
if(this.method=3D=3D"POST"&&!_40){
return ["xml_no_headers"];
}
}
this.url+=3D(this.url.indexOf("?")>=3D0?"&":"?")+"JsHttpRequest=3D"+(req.=
caching?"0":this.id)+"-xml";
var id=3Dthis.id;
xr.onreadystatechange=3Dfunction(){
if(xr.readyState!=3D4){
return;
}
xr.onreadystatechange=3DJsHttpRequest._dummy;
req.status=3Dnull;
try{
req.status=3Dxr.status;
req.responseText=3Dxr.responseText;
}
catch(e){
}
if(!req.status){
return;
}
try{
eval("JsHttpRequest._tmp =3D function(id) { var d =3D =
"+req.responseText+"; d.id =3D id; JsHttpRequest.dataReady(d); }");
}
catch(e){
return req._error("js_invalid",req.responseText);
}
JsHttpRequest._tmp(id);
JsHttpRequest._tmp=3Dnull;
};
xr.open(this.method,this.url,true,this.username,this.password);
if(_40){
for(var i=3D0;i<req._reqHeaders.length;i++){
xr.setRequestHeader(req._reqHeaders[i][0],req._reqHeaders[i][1]);
}
xr.setRequestHeader("Content-Type","application/octet-stream");
}
xr.send(this.queryText);
this.span=3Dnull;
this.xr=3Dxr;
return null;
};
this.getAllResponseHeaders=3Dfunction(){
return this.xr.getAllResponseHeaders();
};
this.getResponseHeader=3Dfunction(_43){
return this.xr.getResponseHeader(_43);
};
this.abort=3Dfunction(){
this.xr.abort();
this.xr=3Dnull;
};
}};
JsHttpRequest.LOADERS.script=3D{loader:function(req){
JsHttpRequest.extend(req._errors,{script_only_get:"Cannot use SCRIPT =
loader: it supports only GET method",script_no_form:"Cannot use SCRIPT =
loader: direct form elements using and uploading are not implemented"});
this.load=3Dfunction(){
if(this.queryText){
this.url+=3D(this.url.indexOf("?")>=3D0?"&":"?")+this.queryText;
}
this.url+=3D(this.url.indexOf("?")>=3D0?"&":"?")+"JsHttpRequest=3D"+this.=
id+"-"+"script";
this.queryText=3D"";
if(!this.method){
this.method=3D"GET";
}
if(this.method!=3D=3D"GET"){
return ["script_only_get"];
}
if(this.queryElem.length){
return ["script_no_form"];
}
if(this.url.length>JsHttpRequest.MAX_URL_LEN){
return ["url_too_long",JsHttpRequest.MAX_URL_LEN];
}
var th=3Dthis,d=3Ddocument,s=3Dnull,b=3Dd.body;
if(!window.opera){
this.span=3Ds=3Dd.createElement("SCRIPT");
var _49=3Dfunction(){
s.language=3D"JavaScript";
if(s.setAttribute){
s.setAttribute("src",th.url);
}else{
s.src=3Dth.url;
}
b.insertBefore(s,b.lastChild);
};
}else{
this.span=3Ds=3Dd.createElement("SPAN");
s.style.display=3D"none";
b.insertBefore(s,b.lastChild);
s.innerHTML=3D"Workaround for IE.<s"+"cript></"+"script>";
var _49=3Dfunction(){
s=3Ds.getElementsByTagName("SCRIPT")[0];
s.language=3D"JavaScript";
if(s.setAttribute){
s.setAttribute("src",th.url);
}else{
s.src=3Dth.url;
}
};
}
JsHttpRequest.setTimeout(_49,10);
return null;
};
}};
JsHttpRequest.LOADERS.form=3D{loader:function(req){
JsHttpRequest.extend(req._errors,{form_el_not_belong:"Element \"%\" does =
not belong to any form!",form_el_belong_diff:"Element \"%\" belongs to a =
different form. All elements must belong to the same =
form!",form_el_inv_enctype:"Attribute \"enctype\" of the form must be =
\"%\" (for IE), \"%\" given."});
this.load=3Dfunction(){
var th=3Dthis;
if(!th.method){
th.method=3D"POST";
}
th.url+=3D(th.url.indexOf("?")>=3D0?"&":"?")+"JsHttpRequest=3D"+th.id+"-"=
+"form";
if(th.method=3D=3D"GET"){
if(th.queryText){
th.url+=3D(th.url.indexOf("?")>=3D0?"&":"?")+th.queryText;
}
if(th.url.length>JsHttpRequest.MAX_URL_LEN){
return ["url_too_long",JsHttpRequest.MAX_URL_LEN];
}
var p=3Dth.url.split("?",2);
th.url=3Dp[0];
th.queryText=3Dp[1]||"";
}
var _4d=3Dnull;
var _4e=3Dfalse;
if(th.queryElem.length){
if(th.queryElem[0].e.tagName.toUpperCase()=3D=3D"FORM"){
_4d=3Dth.queryElem[0].e;
_4e=3Dtrue;
th.queryElem=3D[];
}else{
_4d=3Dth.queryElem[0].e.form;
for(var i=3D0;i<th.queryElem.length;i++){
var e=3Dth.queryElem[i].e;
if(!e.form){
return ["form_el_not_belong",e.name];
}
if(e.form!=3D_4d){
return ["form_el_belong_diff",e.name];
}
}
}
if(th.method=3D=3D"POST"){
var _51=3D"multipart/form-data";
var =
_52=3D(_4d.attributes.encType&&_4d.attributes.encType.nodeValue)||(_4d.at=
tributes.enctype&&_4d.attributes.enctype.value)||_4d.enctype;
if(_52!=3D_51){
return ["form_el_inv_enctype",_51,_52];
}
}
}
var d=3D_4d&&(_4d.ownerDocument||_4d.document)||document;
var _54=3D"jshr_i_"+th.id;
var s=3Dth.span=3Dd.createElement("DIV");
s.style.position=3D"absolute";
s.style.display=3D"none";
s.style.visibility=3D"hidden";
s.innerHTML=3D(_4d?"":"<form"+(th.method=3D=3D"POST"?" =
enctype=3D\"multipart/form-data\" =
method=3D\"post\"":"")+"></form>")+"<iframe name=3D\""+_54+"\" =
id=3D\""+_54+"\" style=3D\"width:0px; height:0px; overflow:hidden; =
border:none\"></iframe>";
if(!_4d){
_4d=3Dth.span.firstChild;
}
d.body.insertBefore(s,d.body.lastChild);
var _56=3Dfunction(e,_58){
var sv=3D[];
var _5a=3De;
if(e.mergeAttributes){
var _5a=3Dd.createElement("form");
_5a.mergeAttributes(e,false);
}
for(var i=3D0;i<_58.length;i++){
var k=3D_58[i][0],v=3D_58[i][1];
sv[sv.length]=3D[k,_5a.getAttribute(k)];
_5a.setAttribute(k,v);
}
if(e.mergeAttributes){
e.mergeAttributes(_5a,false);
}
return sv;
};
var _5e=3Dfunction(){
top.JsHttpRequestGlobal=3DJsHttpRequest;
var _5f=3D[];
if(!_4e){
for(var i=3D0,n=3D_4d.elements.length;i<n;i++){
_5f[i]=3D_4d.elements[i].name;
_4d.elements[i].name=3D"";
}
}
var qt=3Dth.queryText.split("&");
for(var i=3Dqt.length-1;i>=3D0;i--){
var _63=3Dqt[i].split("=3D",2);
var e=3Dd.createElement("INPUT");
e.type=3D"hidden";
e.name=3Dunescape(_63[0]);
e.value=3D_63[1]!=3Dnull?unescape(_63[1]):"";
_4d.appendChild(e);
}
for(var i=3D0;i<th.queryElem.length;i++){
th.queryElem[i].e.name=3Dth.queryElem[i].name;
}
var =
sv=3D_56(_4d,[["action",th.url],["method",th.method],["onsubmit",null],["=
target",_54]]);
_4d.submit();
_56(_4d,sv);
for(var i=3D0;i<qt.length;i++){
_4d.lastChild.parentNode.removeChild(_4d.lastChild);
}
if(!_4e){
for(var i=3D0,n=3D_4d.elements.length;i<n;i++){
_4d.elements[i].name=3D_5f[i];
}
}
};
JsHttpRequest.setTimeout(_5e,100);
return null;
};
}};


------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/mootools-1.2.js?v=1.2.2

/*=0A=
Script: Core.js=0A=
	MooTools - My Object Oriented JavaScript Tools.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
Copyright:=0A=
	Copyright (c) 2006-2008 [Valerio Proietti](http://mad4milk.net/).=0A=
=0A=
Code & Documentation:=0A=
	[The MooTools production team](http://mootools.net/developers/).=0A=
=0A=
Inspiration:=0A=
	- Class implementation inspired by =
[Base.js](http://dean.edwards.name/weblog/2006/03/base/) Copyright (c) =
2006 Dean Edwards, [GNU Lesser General Public =
License](http://opensource.org/licenses/lgpl-license.php)=0A=
	- Some functionality inspired by [Prototype.js](http://prototypejs.org) =
Copyright (c) 2005-2007 Sam Stephenson, [MIT =
License](http://opensource.org/licenses/mit-license.php)=0A=
*/=0A=
=0A=
var MooTools =3D {=0A=
	'version': '1.2.2',=0A=
	'build': '2.0.1'=0A=
};=0A=
=0A=
var Native =3D function(options){=0A=
	options =3D options || {};=0A=
	var name =3D options.name;=0A=
	var legacy =3D options.legacy;=0A=
	var protect =3D options.protect;=0A=
	var methods =3D options.implement;=0A=
	var generics =3D options.generics;=0A=
	var initialize =3D options.initialize;=0A=
	var afterImplement =3D options.afterImplement || function(){};=0A=
	var object =3D initialize || legacy;=0A=
	generics =3D generics !=3D=3D false;=0A=
=0A=
	object.constructor =3D Native;=0A=
	object.$family =3D {name: 'native'};=0A=
	if (legacy && initialize) object.prototype =3D legacy.prototype;=0A=
	object.prototype.constructor =3D object;=0A=
=0A=
	if (name){=0A=
		var family =3D name.toLowerCase();=0A=
		object.prototype.$family =3D {name: family};=0A=
		Native.typize(object, family);=0A=
	}=0A=
=0A=
	var add =3D function(obj, name, method, force){=0A=
		if (!protect || force || !obj.prototype[name]) obj.prototype[name] =3D =
method;=0A=
		if (generics) Native.genericize(obj, name, protect);=0A=
		afterImplement.call(obj, name, method);=0A=
		return obj;=0A=
	};=0A=
=0A=
	object.alias =3D function(a1, a2, a3){=0A=
		if (typeof a1 =3D=3D 'string'){=0A=
			if ((a1 =3D this.prototype[a1])) return add(this, a2, a1, a3);=0A=
		}=0A=
		for (var a in a1) this.alias(a, a1[a], a2);=0A=
		return this;=0A=
	};=0A=
=0A=
	object.implement =3D function(a1, a2, a3){=0A=
		if (typeof a1 =3D=3D 'string') return add(this, a1, a2, a3);=0A=
		for (var p in a1) add(this, p, a1[p], a2);=0A=
		return this;=0A=
	};=0A=
=0A=
	if (methods) object.implement(methods);=0A=
=0A=
	return object;=0A=
};=0A=
=0A=
Native.genericize =3D function(object, property, check){=0A=
	if ((!check || !object[property]) && typeof object.prototype[property] =
=3D=3D 'function') object[property] =3D function(){=0A=
		var args =3D Array.prototype.slice.call(arguments);=0A=
		return object.prototype[property].apply(args.shift(), args);=0A=
	};=0A=
};=0A=
=0A=
Native.implement =3D function(objects, properties){=0A=
	for (var i =3D 0, l =3D objects.length; i < l; i++) =
objects[i].implement(properties);=0A=
};=0A=
=0A=
Native.typize =3D function(object, family){=0A=
	if (!object.type) object.type =3D function(item){=0A=
		return ($type(item) =3D=3D=3D family);=0A=
	};=0A=
};=0A=
=0A=
(function(){=0A=
	var natives =3D {'Array': Array, 'Date': Date, 'Function': Function, =
'Number': Number, 'RegExp': RegExp, 'String': String};=0A=
	for (var n in natives) new Native({name: n, initialize: natives[n], =
protect: true});=0A=
=0A=
	var types =3D {'boolean': Boolean, 'native': Native, 'object': Object};=0A=
	for (var t in types) Native.typize(types[t], t);=0A=
=0A=
	var generics =3D {=0A=
		'Array': ["concat", "indexOf", "join", "lastIndexOf", "pop", "push", =
"reverse", "shift", "slice", "sort", "splice", "toString", "unshift", =
"valueOf"],=0A=
		'String': ["charAt", "charCodeAt", "concat", "indexOf", "lastIndexOf", =
"match", "replace", "search", "slice", "split", "substr", "substring", =
"toLowerCase", "toUpperCase", "valueOf"]=0A=
	};=0A=
	for (var g in generics){=0A=
		for (var i =3D generics[g].length; i--;) Native.genericize(window[g], =
generics[g][i], true);=0A=
	}=0A=
})();=0A=
=0A=
var Hash =3D new Native({=0A=
=0A=
	name: 'Hash',=0A=
=0A=
	initialize: function(object){=0A=
		if ($type(object) =3D=3D 'hash') object =3D $unlink(object.getClean());=0A=
		for (var key in object) this[key] =3D object[key];=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Hash.implement({=0A=
=0A=
	forEach: function(fn, bind){=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key)) fn.call(bind, this[key], key, this);=0A=
		}=0A=
	},=0A=
=0A=
	getClean: function(){=0A=
		var clean =3D {};=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key)) clean[key] =3D this[key];=0A=
		}=0A=
		return clean;=0A=
	},=0A=
=0A=
	getLength: function(){=0A=
		var length =3D 0;=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key)) length++;=0A=
		}=0A=
		return length;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Hash.alias('forEach', 'each');=0A=
=0A=
Array.implement({=0A=
=0A=
	forEach: function(fn, bind){=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++) fn.call(bind, =
this[i], i, this);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Array.alias('forEach', 'each');=0A=
=0A=
function $A(iterable){=0A=
	if (iterable.item){=0A=
		var l =3D iterable.length, array =3D new Array(l);=0A=
		while (l--) array[l] =3D iterable[l];=0A=
		return array;=0A=
	}=0A=
	return Array.prototype.slice.call(iterable);=0A=
};=0A=
=0A=
function $arguments(i){=0A=
	return function(){=0A=
		return arguments[i];=0A=
	};=0A=
};=0A=
=0A=
function $chk(obj){=0A=
	return !!(obj || obj =3D=3D=3D 0);=0A=
};=0A=
=0A=
function $clear(timer){=0A=
	clearTimeout(timer);=0A=
	clearInterval(timer);=0A=
	return null;=0A=
};=0A=
=0A=
function $defined(obj){=0A=
	return (obj !=3D undefined);=0A=
};=0A=
=0A=
function $each(iterable, fn, bind){=0A=
	var type =3D $type(iterable);=0A=
	((type =3D=3D 'arguments' || type =3D=3D 'collection' || type =3D=3D =
'array') ? Array : Hash).each(iterable, fn, bind);=0A=
};=0A=
=0A=
function $empty(){};=0A=
=0A=
function $extend(original, extended){=0A=
	for (var key in (extended || {})) original[key] =3D extended[key];=0A=
	return original;=0A=
};=0A=
=0A=
function $H(object){=0A=
	return new Hash(object);=0A=
};=0A=
=0A=
function $lambda(value){=0A=
	return (typeof value =3D=3D 'function') ? value : function(){=0A=
		return value;=0A=
	};=0A=
};=0A=
=0A=
function $merge(){=0A=
	var args =3D Array.slice(arguments);=0A=
	args.unshift({});=0A=
	return $mixin.apply(null, args);=0A=
};=0A=
=0A=
function $mixin(mix){=0A=
	for (var i =3D 1, l =3D arguments.length; i < l; i++){=0A=
		var object =3D arguments[i];=0A=
		if ($type(object) !=3D 'object') continue;=0A=
		for (var key in object){=0A=
			var op =3D object[key], mp =3D mix[key];=0A=
			mix[key] =3D (mp && $type(op) =3D=3D 'object' && $type(mp) =3D=3D =
'object') ? $mixin(mp, op) : $unlink(op);=0A=
		}=0A=
	}=0A=
	return mix;=0A=
};=0A=
=0A=
function $pick(){=0A=
	for (var i =3D 0, l =3D arguments.length; i < l; i++){=0A=
		if (arguments[i] !=3D undefined) return arguments[i];=0A=
	}=0A=
	return null;=0A=
};=0A=
=0A=
function $random(min, max){=0A=
	return Math.floor(Math.random() * (max - min + 1) + min);=0A=
};=0A=
=0A=
function $splat(obj){=0A=
	var type =3D $type(obj);=0A=
	return (type) ? ((type !=3D 'array' && type !=3D 'arguments') ? [obj] : =
obj) : [];=0A=
};=0A=
=0A=
var $time =3D Date.now || function(){=0A=
	return +new Date;=0A=
};=0A=
=0A=
function $try(){=0A=
	for (var i =3D 0, l =3D arguments.length; i < l; i++){=0A=
		try {=0A=
			return arguments[i]();=0A=
		} catch(e){}=0A=
	}=0A=
	return null;=0A=
};=0A=
=0A=
function $type(obj){=0A=
	if (obj =3D=3D undefined) return false;=0A=
	if (obj.$family) return (obj.$family.name =3D=3D 'number' && =
!isFinite(obj)) ? false : obj.$family.name;=0A=
	if (obj.nodeName){=0A=
		switch (obj.nodeType){=0A=
			case 1: return 'element';=0A=
			case 3: return (/\S/).test(obj.nodeValue) ? 'textnode' : 'whitespace';=0A=
		}=0A=
	} else if (typeof obj.length =3D=3D 'number'){=0A=
		if (obj.callee) return 'arguments';=0A=
		else if (obj.item) return 'collection';=0A=
	}=0A=
	return typeof obj;=0A=
};=0A=
=0A=
function $unlink(object){=0A=
	var unlinked;=0A=
	switch ($type(object)){=0A=
		case 'object':=0A=
			unlinked =3D {};=0A=
			for (var p in object) unlinked[p] =3D $unlink(object[p]);=0A=
		break;=0A=
		case 'hash':=0A=
			unlinked =3D new Hash(object);=0A=
		break;=0A=
		case 'array':=0A=
			unlinked =3D [];=0A=
			for (var i =3D 0, l =3D object.length; i < l; i++) unlinked[i] =3D =
$unlink(object[i]);=0A=
		break;=0A=
		default: return object;=0A=
	}=0A=
	return unlinked;=0A=
};=0A=
=0A=
=0A=
/*=0A=
Script: Browser.js=0A=
	The Browser Core. Contains Browser initialization, Window and Document, =
and the Browser Hash.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Browser =3D $merge({=0A=
=0A=
	Engine: {name: 'unknown', version: 0},=0A=
=0A=
	Platform: {name: (window.orientation !=3D undefined) ? 'ipod' : =
(navigator.platform.match(/mac|win|linux/i) || =
['other'])[0].toLowerCase()},=0A=
=0A=
	Features: {xpath: !!(document.evaluate), air: !!(window.runtime), =
query: !!(document.querySelector)},=0A=
=0A=
	Plugins: {},=0A=
=0A=
	Engines: {=0A=
=0A=
		presto: function(){=0A=
			return (!window.opera) ? false : ((arguments.callee.caller) ? 960 : =
((document.getElementsByClassName) ? 950 : 925));=0A=
		},=0A=
=0A=
		trident: function(){=0A=
			return (!window.ActiveXObject) ? false : ((window.XMLHttpRequest) ? 5 =
: 4);=0A=
		},=0A=
=0A=
		webkit: function(){=0A=
			return (navigator.taintEnabled) ? false : ((Browser.Features.xpath) ? =
((Browser.Features.query) ? 525 : 420) : 419);=0A=
		},=0A=
=0A=
		gecko: function(){=0A=
			return (document.getBoxObjectFor =3D=3D undefined) ? false : =
((document.getElementsByClassName) ? 19 : 18);=0A=
		}=0A=
=0A=
	}=0A=
=0A=
}, Browser || {});=0A=
=0A=
Browser.Platform[Browser.Platform.name] =3D true;=0A=
=0A=
Browser.detect =3D function(){=0A=
=0A=
	for (var engine in this.Engines){=0A=
		var version =3D this.Engines[engine]();=0A=
		if (version){=0A=
			this.Engine =3D {name: engine, version: version};=0A=
			this.Engine[engine] =3D this.Engine[engine + version] =3D true;=0A=
			break;=0A=
		}=0A=
	}=0A=
=0A=
	return {name: engine, version: version};=0A=
=0A=
};=0A=
=0A=
Browser.detect();=0A=
=0A=
Browser.Request =3D function(){=0A=
	return $try(function(){=0A=
		return new XMLHttpRequest();=0A=
	}, function(){=0A=
		return new ActiveXObject('MSXML2.XMLHTTP');=0A=
	});=0A=
};=0A=
=0A=
Browser.Features.xhr =3D !!(Browser.Request());=0A=
=0A=
Browser.Plugins.Flash =3D (function(){=0A=
	var version =3D ($try(function(){=0A=
		return navigator.plugins['Shockwave Flash'].description;=0A=
	}, function(){=0A=
		return new =
ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version');=0A=
	}) || '0 r0').match(/\d+/g);=0A=
	return {version: parseInt(version[0] || 0 + '.' + version[1], 10) || 0, =
build: parseInt(version[2], 10) || 0};=0A=
})();=0A=
=0A=
function $exec(text){=0A=
	if (!text) return text;=0A=
	if (window.execScript){=0A=
		window.execScript(text);=0A=
	} else {=0A=
		var script =3D document.createElement('script');=0A=
		script.setAttribute('type', 'text/javascript');=0A=
		script[(Browser.Engine.webkit && Browser.Engine.version < 420) ? =
'innerText' : 'text'] =3D text;=0A=
		document.head.appendChild(script);=0A=
		document.head.removeChild(script);=0A=
	}=0A=
	return text;=0A=
};=0A=
=0A=
Native.UID =3D 1;=0A=
=0A=
var $uid =3D (Browser.Engine.trident) ? function(item){=0A=
	return (item.uid || (item.uid =3D [Native.UID++]))[0];=0A=
} : function(item){=0A=
	return item.uid || (item.uid =3D Native.UID++);=0A=
};=0A=
=0A=
var Window =3D new Native({=0A=
=0A=
	name: 'Window',=0A=
=0A=
	legacy: (Browser.Engine.trident) ? null: window.Window,=0A=
=0A=
	initialize: function(win){=0A=
		$uid(win);=0A=
		if (!win.Element){=0A=
			win.Element =3D $empty;=0A=
			if (Browser.Engine.webkit) win.document.createElement("iframe"); =
//fixes safari 2=0A=
			win.Element.prototype =3D (Browser.Engine.webkit) ? =
window["[[DOMElement.prototype]]"] : {};=0A=
		}=0A=
		win.document.window =3D win;=0A=
		return $extend(win, Window.Prototype);=0A=
	},=0A=
=0A=
	afterImplement: function(property, value){=0A=
		window[property] =3D Window.Prototype[property] =3D value;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Window.Prototype =3D {$family: {name: 'window'}};=0A=
=0A=
new Window(window);=0A=
=0A=
var Document =3D new Native({=0A=
=0A=
	name: 'Document',=0A=
=0A=
	legacy: (Browser.Engine.trident) ? null: window.Document,=0A=
=0A=
	initialize: function(doc){=0A=
		$uid(doc);=0A=
		doc.head =3D doc.getElementsByTagName('head')[0];=0A=
		doc.html =3D doc.getElementsByTagName('html')[0];=0A=
		if (Browser.Engine.trident && Browser.Engine.version <=3D 4) =
$try(function(){=0A=
			doc.execCommand("BackgroundImageCache", false, true);=0A=
		});=0A=
		if (Browser.Engine.trident) doc.window.attachEvent('onunload', =
function() {=0A=
			doc.window.detachEvent('onunload', arguments.callee);=0A=
			doc.head =3D doc.html =3D doc.window =3D null;=0A=
		});=0A=
		return $extend(doc, Document.Prototype);=0A=
	},=0A=
=0A=
	afterImplement: function(property, value){=0A=
		document[property] =3D Document.Prototype[property] =3D value;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Document.Prototype =3D {$family: {name: 'document'}};=0A=
=0A=
new Document(document);=0A=
=0A=
=0A=
/*=0A=
Script: Array.js=0A=
	Contains Array Prototypes like each, contains, and erase.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Array.implement({=0A=
=0A=
	every: function(fn, bind){=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++){=0A=
			if (!fn.call(bind, this[i], i, this)) return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	filter: function(fn, bind){=0A=
		var results =3D [];=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++){=0A=
			if (fn.call(bind, this[i], i, this)) results.push(this[i]);=0A=
		}=0A=
		return results;=0A=
	},=0A=
=0A=
	clean: function() {=0A=
		return this.filter($defined);=0A=
	},=0A=
=0A=
	indexOf: function(item, from){=0A=
		var len =3D this.length;=0A=
		for (var i =3D (from < 0) ? Math.max(0, len + from) : from || 0; i < =
len; i++){=0A=
			if (this[i] =3D=3D=3D item) return i;=0A=
		}=0A=
		return -1;=0A=
	},=0A=
=0A=
	map: function(fn, bind){=0A=
		var results =3D [];=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++) results[i] =3D =
fn.call(bind, this[i], i, this);=0A=
		return results;=0A=
	},=0A=
=0A=
	some: function(fn, bind){=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++){=0A=
			if (fn.call(bind, this[i], i, this)) return true;=0A=
		}=0A=
		return false;=0A=
	},=0A=
=0A=
	associate: function(keys){=0A=
		var obj =3D {}, length =3D Math.min(this.length, keys.length);=0A=
		for (var i =3D 0; i < length; i++) obj[keys[i]] =3D this[i];=0A=
		return obj;=0A=
	},=0A=
=0A=
	link: function(object){=0A=
		var result =3D {};=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++){=0A=
			for (var key in object){=0A=
				if (object[key](this[i])){=0A=
					result[key] =3D this[i];=0A=
					delete object[key];=0A=
					break;=0A=
				}=0A=
			}=0A=
		}=0A=
		return result;=0A=
	},=0A=
=0A=
	contains: function(item, from){=0A=
		return this.indexOf(item, from) !=3D -1;=0A=
	},=0A=
=0A=
	extend: function(array){=0A=
		for (var i =3D 0, j =3D array.length; i < j; i++) this.push(array[i]);=0A=
		return this;=0A=
	},=0A=
	=0A=
	getLast: function(){=0A=
		return (this.length) ? this[this.length - 1] : null;=0A=
	},=0A=
=0A=
	getRandom: function(){=0A=
		return (this.length) ? this[$random(0, this.length - 1)] : null;=0A=
	},=0A=
=0A=
	include: function(item){=0A=
		if (!this.contains(item)) this.push(item);=0A=
		return this;=0A=
	},=0A=
=0A=
	combine: function(array){=0A=
		for (var i =3D 0, l =3D array.length; i < l; i++) =
this.include(array[i]);=0A=
		return this;=0A=
	},=0A=
=0A=
	erase: function(item){=0A=
		for (var i =3D this.length; i--; i){=0A=
			if (this[i] =3D=3D=3D item) this.splice(i, 1);=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	empty: function(){=0A=
		this.length =3D 0;=0A=
		return this;=0A=
	},=0A=
=0A=
	flatten: function(){=0A=
		var array =3D [];=0A=
		for (var i =3D 0, l =3D this.length; i < l; i++){=0A=
			var type =3D $type(this[i]);=0A=
			if (!type) continue;=0A=
			array =3D array.concat((type =3D=3D 'array' || type =3D=3D =
'collection' || type =3D=3D 'arguments') ? Array.flatten(this[i]) : =
this[i]);=0A=
		}=0A=
		return array;=0A=
	},=0A=
=0A=
	hexToRgb: function(array){=0A=
		if (this.length !=3D 3) return null;=0A=
		var rgb =3D this.map(function(value){=0A=
			if (value.length =3D=3D 1) value +=3D value;=0A=
			return value.toInt(16);=0A=
		});=0A=
		return (array) ? rgb : 'rgb(' + rgb + ')';=0A=
	},=0A=
=0A=
	rgbToHex: function(array){=0A=
		if (this.length < 3) return null;=0A=
		if (this.length =3D=3D 4 && this[3] =3D=3D 0 && !array) return =
'transparent';=0A=
		var hex =3D [];=0A=
		for (var i =3D 0; i < 3; i++){=0A=
			var bit =3D (this[i] - 0).toString(16);=0A=
			hex.push((bit.length =3D=3D 1) ? '0' + bit : bit);=0A=
		}=0A=
		return (array) ? hex : '#' + hex.join('');=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Function.js=0A=
	Contains Function Prototypes like create, bind, pass, and delay.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Function.implement({=0A=
=0A=
	extend: function(properties){=0A=
		for (var property in properties) this[property] =3D =
properties[property];=0A=
		return this;=0A=
	},=0A=
=0A=
	create: function(options){=0A=
		var self =3D this;=0A=
		options =3D options || {};=0A=
		return function(event){=0A=
			var args =3D options.arguments;=0A=
			args =3D (args !=3D undefined) ? $splat(args) : =
Array.slice(arguments, (options.event) ? 1 : 0);=0A=
			if (options.event) args =3D [event || window.event].extend(args);=0A=
			var returns =3D function(){=0A=
				return self.apply(options.bind || null, args);=0A=
			};=0A=
			if (options.delay) return setTimeout(returns, options.delay);=0A=
			if (options.periodical) return setInterval(returns, =
options.periodical);=0A=
			if (options.attempt) return $try(returns);=0A=
			return returns();=0A=
		};=0A=
	},=0A=
=0A=
	run: function(args, bind){=0A=
		return this.apply(bind, $splat(args));=0A=
	},=0A=
=0A=
	pass: function(args, bind){=0A=
		return this.create({bind: bind, arguments: args});=0A=
	},=0A=
=0A=
	bind: function(bind, args){=0A=
		return this.create({bind: bind, arguments: args});=0A=
	},=0A=
=0A=
	bindWithEvent: function(bind, args){=0A=
		return this.create({bind: bind, arguments: args, event: true});=0A=
	},=0A=
=0A=
	attempt: function(args, bind){=0A=
		return this.create({bind: bind, arguments: args, attempt: true})();=0A=
	},=0A=
=0A=
	delay: function(delay, bind, args){=0A=
		return this.create({bind: bind, arguments: args, delay: delay})();=0A=
	},=0A=
=0A=
	periodical: function(periodical, bind, args){=0A=
		return this.create({bind: bind, arguments: args, periodical: =
periodical})();=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Number.js=0A=
	Contains Number Prototypes like limit, round, times, and ceil.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Number.implement({=0A=
=0A=
	limit: function(min, max){=0A=
		return Math.min(max, Math.max(min, this));=0A=
	},=0A=
=0A=
	round: function(precision){=0A=
		precision =3D Math.pow(10, precision || 0);=0A=
		return Math.round(this * precision) / precision;=0A=
	},=0A=
=0A=
	times: function(fn, bind){=0A=
		for (var i =3D 0; i < this; i++) fn.call(bind, i, this);=0A=
	},=0A=
=0A=
	toFloat: function(){=0A=
		return parseFloat(this);=0A=
	},=0A=
=0A=
	toInt: function(base){=0A=
		return parseInt(this, base || 10);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Number.alias('times', 'each');=0A=
=0A=
(function(math){=0A=
	var methods =3D {};=0A=
	math.each(function(name){=0A=
		if (!Number[name]) methods[name] =3D function(){=0A=
			return Math[name].apply(null, [this].concat($A(arguments)));=0A=
		};=0A=
	});=0A=
	Number.implement(methods);=0A=
})(['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos', 'exp', =
'floor', 'log', 'max', 'min', 'pow', 'sin', 'sqrt', 'tan']);=0A=
=0A=
=0A=
/*=0A=
Script: String.js=0A=
	Contains String Prototypes like camelCase, capitalize, test, and toInt.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
String.implement({=0A=
=0A=
	test: function(regex, params){=0A=
		return ((typeof regex =3D=3D 'string') ? new RegExp(regex, params) : =
regex).test(this);=0A=
	},=0A=
=0A=
	contains: function(string, separator){=0A=
		return (separator) ? (separator + this + separator).indexOf(separator =
+ string + separator) > -1 : this.indexOf(string) > -1;=0A=
	},=0A=
=0A=
	trim: function(){=0A=
		return this.replace(/^\s+|\s+$/g, '');=0A=
	},=0A=
=0A=
	clean: function(){=0A=
		return this.replace(/\s+/g, ' ').trim();=0A=
	},=0A=
=0A=
	camelCase: function(){=0A=
		return this.replace(/-\D/g, function(match){=0A=
			return match.charAt(1).toUpperCase();=0A=
		});=0A=
	},=0A=
=0A=
	hyphenate: function(){=0A=
		return this.replace(/[A-Z]/g, function(match){=0A=
			return ('-' + match.charAt(0).toLowerCase());=0A=
		});=0A=
	},=0A=
=0A=
	capitalize: function(){=0A=
		return this.replace(/\b[a-z]/g, function(match){=0A=
			return match.toUpperCase();=0A=
		});=0A=
	},=0A=
=0A=
	escapeRegExp: function(){=0A=
		return this.replace(/([-.*+?^${}()|[\]\/\\])/g, '\\$1');=0A=
	},=0A=
=0A=
	toInt: function(base){=0A=
		return parseInt(this, base || 10);=0A=
	},=0A=
=0A=
	toFloat: function(){=0A=
		return parseFloat(this);=0A=
	},=0A=
=0A=
	hexToRgb: function(array){=0A=
		var hex =3D this.match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);=0A=
		return (hex) ? hex.slice(1).hexToRgb(array) : null;=0A=
	},=0A=
=0A=
	rgbToHex: function(array){=0A=
		var rgb =3D this.match(/\d{1,3}/g);=0A=
		return (rgb) ? rgb.rgbToHex(array) : null;=0A=
	},=0A=
=0A=
	stripScripts: function(option){=0A=
		var scripts =3D '';=0A=
		var text =3D this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, =
function(){=0A=
			scripts +=3D arguments[1] + '\n';=0A=
			return '';=0A=
		});=0A=
		if (option =3D=3D=3D true) $exec(scripts);=0A=
		else if ($type(option) =3D=3D 'function') option(scripts, text);=0A=
		return text;=0A=
	},=0A=
=0A=
	substitute: function(object, regexp){=0A=
		return this.replace(regexp || (/\\?\{([^{}]+)\}/g), function(match, =
name){=0A=
			if (match.charAt(0) =3D=3D '\\') return match.slice(1);=0A=
			return (object[name] !=3D undefined) ? object[name] : '';=0A=
		});=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Hash.js=0A=
	Contains Hash Prototypes. Provides a means for overcoming the =
JavaScript practical impossibility of extending native Objects.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Hash.implement({=0A=
=0A=
	has: Object.prototype.hasOwnProperty,=0A=
=0A=
	keyOf: function(value){=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key) && this[key] =3D=3D=3D value) return key;=0A=
		}=0A=
		return null;=0A=
	},=0A=
=0A=
	hasValue: function(value){=0A=
		return (Hash.keyOf(this, value) !=3D=3D null);=0A=
	},=0A=
=0A=
	extend: function(properties){=0A=
		Hash.each(properties, function(value, key){=0A=
			Hash.set(this, key, value);=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	combine: function(properties){=0A=
		Hash.each(properties, function(value, key){=0A=
			Hash.include(this, key, value);=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	erase: function(key){=0A=
		if (this.hasOwnProperty(key)) delete this[key];=0A=
		return this;=0A=
	},=0A=
=0A=
	get: function(key){=0A=
		return (this.hasOwnProperty(key)) ? this[key] : null;=0A=
	},=0A=
=0A=
	set: function(key, value){=0A=
		if (!this[key] || this.hasOwnProperty(key)) this[key] =3D value;=0A=
		return this;=0A=
	},=0A=
=0A=
	empty: function(){=0A=
		Hash.each(this, function(value, key){=0A=
			delete this[key];=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	include: function(key, value){=0A=
		if (this[key] =3D=3D undefined) this[key] =3D value;=0A=
		return this;=0A=
	},=0A=
=0A=
	map: function(fn, bind){=0A=
		var results =3D new Hash;=0A=
		Hash.each(this, function(value, key){=0A=
			results.set(key, fn.call(bind, value, key, this));=0A=
		}, this);=0A=
		return results;=0A=
	},=0A=
=0A=
	filter: function(fn, bind){=0A=
		var results =3D new Hash;=0A=
		Hash.each(this, function(value, key){=0A=
			if (fn.call(bind, value, key, this)) results.set(key, value);=0A=
		}, this);=0A=
		return results;=0A=
	},=0A=
=0A=
	every: function(fn, bind){=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key) && !fn.call(bind, this[key], key)) =
return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	some: function(fn, bind){=0A=
		for (var key in this){=0A=
			if (this.hasOwnProperty(key) && fn.call(bind, this[key], key)) return =
true;=0A=
		}=0A=
		return false;=0A=
	},=0A=
=0A=
	getKeys: function(){=0A=
		var keys =3D [];=0A=
		Hash.each(this, function(value, key){=0A=
			keys.push(key);=0A=
		});=0A=
		return keys;=0A=
	},=0A=
=0A=
	getValues: function(){=0A=
		var values =3D [];=0A=
		Hash.each(this, function(value){=0A=
			values.push(value);=0A=
		});=0A=
		return values;=0A=
	},=0A=
=0A=
	toQueryString: function(base){=0A=
		var queryString =3D [];=0A=
		Hash.each(this, function(value, key){=0A=
			if (base) key =3D base + '[' + key + ']';=0A=
			var result;=0A=
			switch ($type(value)){=0A=
				case 'object': result =3D Hash.toQueryString(value, key); break;=0A=
				case 'array':=0A=
					var qs =3D {};=0A=
					value.each(function(val, i){=0A=
						qs[i] =3D val;=0A=
					});=0A=
					result =3D Hash.toQueryString(qs, key);=0A=
				break;=0A=
				default: result =3D key + '=3D' + encodeURIComponent(value);=0A=
			}=0A=
			if (value !=3D undefined) queryString.push(result);=0A=
		});=0A=
=0A=
		return queryString.join('&');=0A=
	}=0A=
=0A=
});=0A=
=0A=
Hash.alias({keyOf: 'indexOf', hasValue: 'contains'});=0A=
=0A=
=0A=
/*=0A=
Script: Event.js=0A=
	Contains the Event Native, to make the event object completely =
crossbrowser.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Event =3D new Native({=0A=
=0A=
	name: 'Event',=0A=
=0A=
	initialize: function(event, win){=0A=
		win =3D win || window;=0A=
		var doc =3D win.document;=0A=
		event =3D event || win.event;=0A=
		if (event.$extended) return event;=0A=
		this.$extended =3D true;=0A=
		var type =3D event.type;=0A=
		var target =3D event.target || event.srcElement;=0A=
		while (target && target.nodeType =3D=3D 3) target =3D =
target.parentNode;=0A=
=0A=
		if (type.test(/key/)){=0A=
			var code =3D event.which || event.keyCode;=0A=
			var key =3D Event.Keys.keyOf(code);=0A=
			if (type =3D=3D 'keydown'){=0A=
				var fKey =3D code - 111;=0A=
				if (fKey > 0 && fKey < 13) key =3D 'f' + fKey;=0A=
			}=0A=
			key =3D key || String.fromCharCode(code).toLowerCase();=0A=
		} else if (type.match(/(click|mouse|menu)/i)){=0A=
			doc =3D (!doc.compatMode || doc.compatMode =3D=3D 'CSS1Compat') ? =
doc.html : doc.body;=0A=
			var page =3D {=0A=
				x: event.pageX || event.clientX + doc.scrollLeft,=0A=
				y: event.pageY || event.clientY + doc.scrollTop=0A=
			};=0A=
			var client =3D {=0A=
				x: (event.pageX) ? event.pageX - win.pageXOffset : event.clientX,=0A=
				y: (event.pageY) ? event.pageY - win.pageYOffset : event.clientY=0A=
			};=0A=
			if (type.match(/DOMMouseScroll|mousewheel/)){=0A=
				var wheel =3D (event.wheelDelta) ? event.wheelDelta / 120 : =
-(event.detail || 0) / 3;=0A=
			}=0A=
			var rightClick =3D (event.which =3D=3D 3) || (event.button =3D=3D 2);=0A=
			var related =3D null;=0A=
			if (type.match(/over|out/)){=0A=
				switch (type){=0A=
					case 'mouseover': related =3D event.relatedTarget || =
event.fromElement; break;=0A=
					case 'mouseout': related =3D event.relatedTarget || event.toElement;=0A=
				}=0A=
				if (!(function(){=0A=
					while (related && related.nodeType =3D=3D 3) related =3D =
related.parentNode;=0A=
					return true;=0A=
				}).create({attempt: Browser.Engine.gecko})()) related =3D false;=0A=
			}=0A=
		}=0A=
=0A=
		return $extend(this, {=0A=
			event: event,=0A=
			type: type,=0A=
=0A=
			page: page,=0A=
			client: client,=0A=
			rightClick: rightClick,=0A=
=0A=
			wheel: wheel,=0A=
=0A=
			relatedTarget: related,=0A=
			target: target,=0A=
=0A=
			code: code,=0A=
			key: key,=0A=
=0A=
			shift: event.shiftKey,=0A=
			control: event.ctrlKey,=0A=
			alt: event.altKey,=0A=
			meta: event.metaKey=0A=
		});=0A=
	}=0A=
=0A=
});=0A=
=0A=
Event.Keys =3D new Hash({=0A=
	'enter': 13,=0A=
	'up': 38,=0A=
	'down': 40,=0A=
	'left': 37,=0A=
	'right': 39,=0A=
	'esc': 27,=0A=
	'space': 32,=0A=
	'backspace': 8,=0A=
	'tab': 9,=0A=
	'delete': 46=0A=
});=0A=
=0A=
Event.implement({=0A=
=0A=
	stop: function(){=0A=
		return this.stopPropagation().preventDefault();=0A=
	},=0A=
=0A=
	stopPropagation: function(){=0A=
		if (this.event.stopPropagation) this.event.stopPropagation();=0A=
		else this.event.cancelBubble =3D true;=0A=
		return this;=0A=
	},=0A=
=0A=
	preventDefault: function(){=0A=
		if (this.event.preventDefault) this.event.preventDefault();=0A=
		else this.event.returnValue =3D false;=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Class.js=0A=
	Contains the Class Function for easily creating, extending, and =
implementing reusable Classes.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
function Class(params){=0A=
	=0A=
	if (params instanceof Function) params =3D {initialize: params};=0A=
	=0A=
	var newClass =3D function(){=0A=
		Object.reset(this);=0A=
		if (newClass._prototyping) return this;=0A=
		this._current =3D $empty;=0A=
		var value =3D (this.initialize) ? this.initialize.apply(this, =
arguments) : this;=0A=
		delete this._current; delete this.caller;=0A=
		return value;=0A=
	}.extend(this);=0A=
	=0A=
	newClass.implement(params);=0A=
	=0A=
	newClass.constructor =3D Class;=0A=
	newClass.prototype.constructor =3D newClass;=0A=
=0A=
	return newClass;=0A=
=0A=
};=0A=
=0A=
Function.prototype.protect =3D function(){=0A=
	this._protected =3D true;=0A=
	return this;=0A=
};=0A=
=0A=
Object.reset =3D function(object, key){=0A=
		=0A=
	if (key =3D=3D null){=0A=
		for (var p in object) Object.reset(object, p);=0A=
		return object;=0A=
	}=0A=
	=0A=
	delete object[key];=0A=
	=0A=
	switch ($type(object[key])){=0A=
		case 'object':=0A=
			var F =3D function(){};=0A=
			F.prototype =3D object[key];=0A=
			var i =3D new F;=0A=
			object[key] =3D Object.reset(i);=0A=
		break;=0A=
		case 'array': object[key] =3D $unlink(object[key]); break;=0A=
	}=0A=
	=0A=
	return object;=0A=
	=0A=
};=0A=
=0A=
new Native({name: 'Class', initialize: Class}).extend({=0A=
=0A=
	instantiate: function(F){=0A=
		F._prototyping =3D true;=0A=
		var proto =3D new F;=0A=
		delete F._prototyping;=0A=
		return proto;=0A=
	},=0A=
	=0A=
	wrap: function(self, key, method){=0A=
		if (method._origin) method =3D method._origin;=0A=
		=0A=
		return function(){=0A=
			if (method._protected && this._current =3D=3D null) throw new =
Error('The method "' + key + '" cannot be called.');=0A=
			var caller =3D this.caller, current =3D this._current;=0A=
			this.caller =3D current; this._current =3D arguments.callee;=0A=
			var result =3D method.apply(this, arguments);=0A=
			this._current =3D current; this.caller =3D caller;=0A=
			return result;=0A=
		}.extend({_owner: self, _origin: method, _name: key});=0A=
=0A=
	}=0A=
	=0A=
});=0A=
=0A=
Class.implement({=0A=
	=0A=
	implement: function(key, value){=0A=
		=0A=
		if ($type(key) =3D=3D 'object'){=0A=
			for (var p in key) this.implement(p, key[p]);=0A=
			return this;=0A=
		}=0A=
		=0A=
		var mutator =3D Class.Mutators[key];=0A=
		=0A=
		if (mutator){=0A=
			value =3D mutator.call(this, value);=0A=
			if (value =3D=3D null) return this;=0A=
		}=0A=
		=0A=
		var proto =3D this.prototype;=0A=
=0A=
		switch ($type(value)){=0A=
			=0A=
			case 'function':=0A=
				if (value._hidden) return this;=0A=
				proto[key] =3D Class.wrap(this, key, value);=0A=
			break;=0A=
			=0A=
			case 'object':=0A=
				var previous =3D proto[key];=0A=
				if ($type(previous) =3D=3D 'object') $mixin(previous, value);=0A=
				else proto[key] =3D $unlink(value);=0A=
			break;=0A=
			=0A=
			case 'array':=0A=
				proto[key] =3D $unlink(value);=0A=
			break;=0A=
			=0A=
			default: proto[key] =3D value;=0A=
=0A=
		}=0A=
		=0A=
		return this;=0A=
=0A=
	}=0A=
	=0A=
});=0A=
=0A=
Class.Mutators =3D {=0A=
	=0A=
	Extends: function(parent){=0A=
=0A=
		this.parent =3D parent;=0A=
		this.prototype =3D Class.instantiate(parent);=0A=
=0A=
		this.implement('parent', function(){=0A=
			var name =3D this.caller._name, previous =3D =
this.caller._owner.parent.prototype[name];=0A=
			if (!previous) throw new Error('The method "' + name + '" has no =
parent.');=0A=
			return previous.apply(this, arguments);=0A=
		}.protect());=0A=
=0A=
	},=0A=
=0A=
	Implements: function(items){=0A=
		$splat(items).each(function(item){=0A=
			if (item instanceof Function) item =3D Class.instantiate(item);=0A=
			this.implement(item);=0A=
		}, this);=0A=
=0A=
	}=0A=
	=0A=
};=0A=
=0A=
=0A=
/*=0A=
Script: Class.Extras.js=0A=
	Contains Utility Classes that can be implemented into your own Classes =
to ease the execution of many common tasks.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Chain =3D new Class({=0A=
=0A=
	$chain: [],=0A=
=0A=
	chain: function(){=0A=
		this.$chain.extend(Array.flatten(arguments));=0A=
		return this;=0A=
	},=0A=
=0A=
	callChain: function(){=0A=
		return (this.$chain.length) ? this.$chain.shift().apply(this, =
arguments) : false;=0A=
	},=0A=
=0A=
	clearChain: function(){=0A=
		this.$chain.empty();=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
var Events =3D new Class({=0A=
=0A=
	$events: {},=0A=
=0A=
	addEvent: function(type, fn, internal){=0A=
		type =3D Events.removeOn(type);=0A=
		if (fn !=3D $empty){=0A=
			this.$events[type] =3D this.$events[type] || [];=0A=
			this.$events[type].include(fn);=0A=
			if (internal) fn.internal =3D true;=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	addEvents: function(events){=0A=
		for (var type in events) this.addEvent(type, events[type]);=0A=
		return this;=0A=
	},=0A=
=0A=
	fireEvent: function(type, args, delay){=0A=
		type =3D Events.removeOn(type);=0A=
		if (!this.$events || !this.$events[type]) return this;=0A=
		this.$events[type].each(function(fn){=0A=
			fn.create({'bind': this, 'delay': delay, 'arguments': args})();=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeEvent: function(type, fn){=0A=
		type =3D Events.removeOn(type);=0A=
		if (!this.$events[type]) return this;=0A=
		if (!fn.internal) this.$events[type].erase(fn);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeEvents: function(events){=0A=
		if ($type(events) =3D=3D 'object'){=0A=
			for (var type in events) this.removeEvent(type, events[type]);=0A=
			return this;=0A=
		}=0A=
		if (events) events =3D Events.removeOn(events);=0A=
		for (var type in this.$events){=0A=
			if (events && events !=3D type) continue;=0A=
			var fns =3D this.$events[type];=0A=
			for (var i =3D fns.length; i--; i) this.removeEvent(type, fns[i]);=0A=
		}=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Events.removeOn =3D function(string){=0A=
	return string.replace(/^on([A-Z])/, function(full, first) {=0A=
		return first.toLowerCase();=0A=
	});=0A=
};=0A=
=0A=
var Options =3D new Class({=0A=
=0A=
	setOptions: function(){=0A=
		this.options =3D $merge.run([this.options].extend(arguments));=0A=
		if (!this.addEvent) return this;=0A=
		for (var option in this.options){=0A=
			if ($type(this.options[option]) !=3D 'function' || =
!(/^on[A-Z]/).test(option)) continue;=0A=
			this.addEvent(option, this.options[option]);=0A=
			delete this.options[option];=0A=
		}=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Element.js=0A=
	One of the most important items in MooTools. Contains the dollar =
function, the dollars function, and an handful of cross-browser,=0A=
	time-saver methods to let you easily work with HTML Elements.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Element =3D new Native({=0A=
=0A=
	name: 'Element',=0A=
=0A=
	legacy: window.Element,=0A=
=0A=
	initialize: function(tag, props){=0A=
		var konstructor =3D Element.Constructors.get(tag);=0A=
		if (konstructor) return konstructor(props);=0A=
		if (typeof tag =3D=3D 'string') return document.newElement(tag, props);=0A=
		return $(tag).set(props);=0A=
	},=0A=
=0A=
	afterImplement: function(key, value){=0A=
		Element.Prototype[key] =3D value;=0A=
		if (Array[key]) return;=0A=
		Elements.implement(key, function(){=0A=
			var items =3D [], elements =3D true;=0A=
			for (var i =3D 0, j =3D this.length; i < j; i++){=0A=
				var returns =3D this[i][key].apply(this[i], arguments);=0A=
				items.push(returns);=0A=
				if (elements) elements =3D ($type(returns) =3D=3D 'element');=0A=
			}=0A=
			return (elements) ? new Elements(items) : items;=0A=
		});=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Prototype =3D {$family: {name: 'element'}};=0A=
=0A=
Element.Constructors =3D new Hash;=0A=
=0A=
var IFrame =3D new Native({=0A=
=0A=
	name: 'IFrame',=0A=
=0A=
	generics: false,=0A=
=0A=
	initialize: function(){=0A=
		var params =3D Array.link(arguments, {properties: Object.type, iframe: =
$defined});=0A=
		var props =3D params.properties || {};=0A=
		var iframe =3D $(params.iframe) || false;=0A=
		var onload =3D props.onload || $empty;=0A=
		delete props.onload;=0A=
		props.id =3D props.name =3D $pick(props.id, props.name, iframe.id, =
iframe.name, 'IFrame_' + $time());=0A=
		iframe =3D new Element(iframe || 'iframe', props);=0A=
		var onFrameLoad =3D function(){=0A=
			var host =3D $try(function(){=0A=
				return iframe.contentWindow.location.host;=0A=
			});=0A=
			if (host && host =3D=3D window.location.host){=0A=
				var win =3D new Window(iframe.contentWindow);=0A=
				new Document(iframe.contentWindow.document);=0A=
				$extend(win.Element.prototype, Element.Prototype);=0A=
			}=0A=
			onload.call(iframe.contentWindow, iframe.contentWindow.document);=0A=
		};=0A=
		(window.frames[props.id]) ? onFrameLoad() : iframe.addListener('load', =
onFrameLoad);=0A=
		return iframe;=0A=
	}=0A=
=0A=
});=0A=
=0A=
var Elements =3D new Native({=0A=
=0A=
	initialize: function(elements, options){=0A=
		options =3D $extend({ddup: true, cash: true}, options);=0A=
		elements =3D elements || [];=0A=
		if (options.ddup || options.cash){=0A=
			var uniques =3D {}, returned =3D [];=0A=
			for (var i =3D 0, l =3D elements.length; i < l; i++){=0A=
				var el =3D $.element(elements[i], !options.cash);=0A=
				if (options.ddup){=0A=
					if (uniques[el.uid]) continue;=0A=
					uniques[el.uid] =3D true;=0A=
				}=0A=
				returned.push(el);=0A=
			}=0A=
			elements =3D returned;=0A=
		}=0A=
		return (options.cash) ? $extend(elements, this) : elements;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Elements.implement({=0A=
=0A=
	filter: function(filter, bind){=0A=
		if (!filter) return this;=0A=
		return new Elements(Array.filter(this, (typeof filter =3D=3D 'string') =
? function(item){=0A=
			return item.match(filter);=0A=
		} : filter, bind));=0A=
	}=0A=
=0A=
});=0A=
=0A=
Document.implement({=0A=
=0A=
	newElement: function(tag, props){=0A=
		if (Browser.Engine.trident && props){=0A=
			['name', 'type', 'checked'].each(function(attribute){=0A=
				if (!props[attribute]) return;=0A=
				tag +=3D ' ' + attribute + '=3D"' + props[attribute] + '"';=0A=
				if (attribute !=3D 'checked') delete props[attribute];=0A=
			});=0A=
			tag =3D '<' + tag + '>';=0A=
		}=0A=
		return $.element(this.createElement(tag)).set(props);=0A=
	},=0A=
=0A=
	newTextNode: function(text){=0A=
		return this.createTextNode(text);=0A=
	},=0A=
=0A=
	getDocument: function(){=0A=
		return this;=0A=
	},=0A=
=0A=
	getWindow: function(){=0A=
		return this.window;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Window.implement({=0A=
=0A=
	$: function(el, nocash){=0A=
		if (el && el.$family && el.uid) return el;=0A=
		var type =3D $type(el);=0A=
		return ($[type]) ? $[type](el, nocash, this.document) : null;=0A=
	},=0A=
=0A=
	$$: function(selector){=0A=
		if (arguments.length =3D=3D 1 && typeof selector =3D=3D 'string') =
return this.document.getElements(selector);=0A=
		var elements =3D [];=0A=
		var args =3D Array.flatten(arguments);=0A=
		for (var i =3D 0, l =3D args.length; i < l; i++){=0A=
			var item =3D args[i];=0A=
			switch ($type(item)){=0A=
				case 'element': elements.push(item); break;=0A=
				case 'string': elements.extend(this.document.getElements(item, =
true));=0A=
			}=0A=
		}=0A=
		return new Elements(elements);=0A=
	},=0A=
=0A=
	getDocument: function(){=0A=
		return this.document;=0A=
	},=0A=
=0A=
	getWindow: function(){=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
$.string =3D function(id, nocash, doc){=0A=
	id =3D doc.getElementById(id);=0A=
	return (id) ? $.element(id, nocash) : null;=0A=
};=0A=
=0A=
$.element =3D function(el, nocash){=0A=
	$uid(el);=0A=
	if (!nocash && !el.$family && !(/^object|embed$/i).test(el.tagName)){=0A=
		var proto =3D Element.Prototype;=0A=
		for (var p in proto) el[p] =3D proto[p];=0A=
	};=0A=
	return el;=0A=
};=0A=
=0A=
$.object =3D function(obj, nocash, doc){=0A=
	if (obj.toElement) return $.element(obj.toElement(doc), nocash);=0A=
	return null;=0A=
};=0A=
=0A=
$.textnode =3D $.whitespace =3D $.window =3D $.document =3D =
$arguments(0);=0A=
=0A=
Native.implement([Element, Document], {=0A=
=0A=
	getElement: function(selector, nocash){=0A=
		return $(this.getElements(selector, true)[0] || null, nocash);=0A=
	},=0A=
=0A=
	getElements: function(tags, nocash){=0A=
		tags =3D tags.split(',');=0A=
		var elements =3D [];=0A=
		var ddup =3D (tags.length > 1);=0A=
		tags.each(function(tag){=0A=
			var partial =3D this.getElementsByTagName(tag.trim());=0A=
			(ddup) ? elements.extend(partial) : elements =3D partial;=0A=
		}, this);=0A=
		return new Elements(elements, {ddup: ddup, cash: !nocash});=0A=
	}=0A=
=0A=
});=0A=
=0A=
(function(){=0A=
=0A=
var collected =3D {}, storage =3D {};=0A=
var props =3D {input: 'checked', option: 'selected', textarea: =
(Browser.Engine.webkit && Browser.Engine.version < 420) ? 'innerHTML' : =
'value'};=0A=
=0A=
var get =3D function(uid){=0A=
	return (storage[uid] || (storage[uid] =3D {}));=0A=
};=0A=
=0A=
var clean =3D function(item, retain){=0A=
	if (!item) return;=0A=
	var uid =3D item.uid;=0A=
	if (Browser.Engine.trident){=0A=
		if (item.clearAttributes){=0A=
			var clone =3D retain && item.cloneNode(false);=0A=
			item.clearAttributes();=0A=
			if (clone) item.mergeAttributes(clone);=0A=
		} else if (item.removeEvents){=0A=
			item.removeEvents();=0A=
		}=0A=
		if ((/object/i).test(item.tagName)){=0A=
			for (var p in item){=0A=
				if (typeof item[p] =3D=3D 'function') item[p] =3D $empty;=0A=
			}=0A=
			Element.dispose(item);=0A=
		}=0A=
	}	=0A=
	if (!uid) return;=0A=
	collected[uid] =3D storage[uid] =3D null;=0A=
};=0A=
=0A=
var purge =3D function(){=0A=
	Hash.each(collected, clean);=0A=
	if (Browser.Engine.trident) =
$A(document.getElementsByTagName('object')).each(clean);=0A=
	if (window.CollectGarbage) CollectGarbage();=0A=
	collected =3D storage =3D null;=0A=
};=0A=
=0A=
var walk =3D function(element, walk, start, match, all, nocash){=0A=
	var el =3D element[start || walk];=0A=
	var elements =3D [];=0A=
	while (el){=0A=
		if (el.nodeType =3D=3D 1 && (!match || Element.match(el, match))){=0A=
			if (!all) return $(el, nocash);=0A=
			elements.push(el);=0A=
		}=0A=
		el =3D el[walk];=0A=
	}=0A=
	return (all) ? new Elements(elements, {ddup: false, cash: !nocash}) : =
null;=0A=
};=0A=
=0A=
var attributes =3D {=0A=
	'html': 'innerHTML',=0A=
	'class': 'className',=0A=
	'for': 'htmlFor',=0A=
	'text': (Browser.Engine.trident || (Browser.Engine.webkit && =
Browser.Engine.version < 420)) ? 'innerText' : 'textContent'=0A=
};=0A=
var bools =3D ['compact', 'nowrap', 'ismap', 'declare', 'noshade', =
'checked', 'disabled', 'readonly', 'multiple', 'selected', 'noresize', =
'defer'];=0A=
var camels =3D ['value', 'accessKey', 'cellPadding', 'cellSpacing', =
'colSpan', 'frameBorder', 'maxLength', 'readOnly', 'rowSpan', =
'tabIndex', 'useMap'];=0A=
=0A=
bools =3D bools.associate(bools);=0A=
=0A=
Hash.extend(attributes, bools);=0A=
Hash.extend(attributes, =
camels.associate(camels.map(String.toLowerCase)));=0A=
=0A=
var inserters =3D {=0A=
=0A=
	before: function(context, element){=0A=
		if (element.parentNode) element.parentNode.insertBefore(context, =
element);=0A=
	},=0A=
=0A=
	after: function(context, element){=0A=
		if (!element.parentNode) return;=0A=
		var next =3D element.nextSibling;=0A=
		(next) ? element.parentNode.insertBefore(context, next) : =
element.parentNode.appendChild(context);=0A=
	},=0A=
=0A=
	bottom: function(context, element){=0A=
		element.appendChild(context);=0A=
	},=0A=
=0A=
	top: function(context, element){=0A=
		var first =3D element.firstChild;=0A=
		(first) ? element.insertBefore(context, first) : =
element.appendChild(context);=0A=
	}=0A=
=0A=
};=0A=
=0A=
inserters.inside =3D inserters.bottom;=0A=
=0A=
Hash.each(inserters, function(inserter, where){=0A=
=0A=
	where =3D where.capitalize();=0A=
=0A=
	Element.implement('inject' + where, function(el){=0A=
		inserter(this, $(el, true));=0A=
		return this;=0A=
	});=0A=
=0A=
	Element.implement('grab' + where, function(el){=0A=
		inserter($(el, true), this);=0A=
		return this;=0A=
	});=0A=
=0A=
});=0A=
=0A=
Element.implement({=0A=
=0A=
	set: function(prop, value){=0A=
		switch ($type(prop)){=0A=
			case 'object':=0A=
				for (var p in prop) this.set(p, prop[p]);=0A=
				break;=0A=
			case 'string':=0A=
				var property =3D Element.Properties.get(prop);=0A=
				(property && property.set) ? property.set.apply(this, =
Array.slice(arguments, 1)) : this.setProperty(prop, value);=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	get: function(prop){=0A=
		var property =3D Element.Properties.get(prop);=0A=
		return (property && property.get) ? property.get.apply(this, =
Array.slice(arguments, 1)) : this.getProperty(prop);=0A=
	},=0A=
=0A=
	erase: function(prop){=0A=
		var property =3D Element.Properties.get(prop);=0A=
		(property && property.erase) ? property.erase.apply(this) : =
this.removeProperty(prop);=0A=
		return this;=0A=
	},=0A=
=0A=
	setProperty: function(attribute, value){=0A=
		var key =3D attributes[attribute];=0A=
		if (value =3D=3D undefined) return this.removeProperty(attribute);=0A=
		if (key && bools[attribute]) value =3D !!value;=0A=
		(key) ? this[key] =3D value : this.setAttribute(attribute, '' + value);=0A=
		return this;=0A=
	},=0A=
=0A=
	setProperties: function(attributes){=0A=
		for (var attribute in attributes) this.setProperty(attribute, =
attributes[attribute]);=0A=
		return this;=0A=
	},=0A=
=0A=
	getProperty: function(attribute){=0A=
		var key =3D attributes[attribute];=0A=
		var value =3D (key) ? this[key] : this.getAttribute(attribute, 2);=0A=
		return (bools[attribute]) ? !!value : (key) ? value : value || null;=0A=
	},=0A=
=0A=
	getProperties: function(){=0A=
		var args =3D $A(arguments);=0A=
		return args.map(this.getProperty, this).associate(args);=0A=
	},=0A=
=0A=
	removeProperty: function(attribute){=0A=
		var key =3D attributes[attribute];=0A=
		(key) ? this[key] =3D (key && bools[attribute]) ? false : '' : =
this.removeAttribute(attribute);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeProperties: function(){=0A=
		Array.each(arguments, this.removeProperty, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	hasClass: function(className){=0A=
		return this.className.contains(className, ' ');=0A=
	},=0A=
=0A=
	addClass: function(className){=0A=
		if (!this.hasClass(className)) this.className =3D (this.className + ' =
' + className).clean();=0A=
		return this;=0A=
	},=0A=
=0A=
	removeClass: function(className){=0A=
		this.className =3D this.className.replace(new RegExp('(^|\\s)' + =
className + '(?:\\s|$)'), '$1');=0A=
		return this;=0A=
	},=0A=
=0A=
	toggleClass: function(className){=0A=
		return this.hasClass(className) ? this.removeClass(className) : =
this.addClass(className);=0A=
	},=0A=
=0A=
	adopt: function(){=0A=
		Array.flatten(arguments).each(function(element){=0A=
			element =3D $(element, true);=0A=
			if (element) this.appendChild(element);=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	appendText: function(text, where){=0A=
		return this.grab(this.getDocument().newTextNode(text), where);=0A=
	},=0A=
=0A=
	grab: function(el, where){=0A=
		inserters[where || 'bottom']($(el, true), this);=0A=
		return this;=0A=
	},=0A=
=0A=
	inject: function(el, where){=0A=
		inserters[where || 'bottom'](this, $(el, true));=0A=
		return this;=0A=
	},=0A=
=0A=
	replaces: function(el){=0A=
		el =3D $(el, true);=0A=
		el.parentNode.replaceChild(this, el);=0A=
		return this;=0A=
	},=0A=
=0A=
	wraps: function(el, where){=0A=
		el =3D $(el, true);=0A=
		return this.replaces(el).grab(el, where);=0A=
	},=0A=
=0A=
	getPrevious: function(match, nocash){=0A=
		return walk(this, 'previousSibling', null, match, false, nocash);=0A=
	},=0A=
=0A=
	getAllPrevious: function(match, nocash){=0A=
		return walk(this, 'previousSibling', null, match, true, nocash);=0A=
	},=0A=
=0A=
	getNext: function(match, nocash){=0A=
		return walk(this, 'nextSibling', null, match, false, nocash);=0A=
	},=0A=
=0A=
	getAllNext: function(match, nocash){=0A=
		return walk(this, 'nextSibling', null, match, true, nocash);=0A=
	},=0A=
=0A=
	getFirst: function(match, nocash){=0A=
		return walk(this, 'nextSibling', 'firstChild', match, false, nocash);=0A=
	},=0A=
=0A=
	getLast: function(match, nocash){=0A=
		return walk(this, 'previousSibling', 'lastChild', match, false, =
nocash);=0A=
	},=0A=
=0A=
	getParent: function(match, nocash){=0A=
		return walk(this, 'parentNode', null, match, false, nocash);=0A=
	},=0A=
=0A=
	getParents: function(match, nocash){=0A=
		return walk(this, 'parentNode', null, match, true, nocash);=0A=
	},=0A=
	=0A=
	getSiblings: function(match, nocash) {=0A=
		return this.getParent().getChildren(match, nocash).erase(this);=0A=
	},=0A=
=0A=
	getChildren: function(match, nocash){=0A=
		return walk(this, 'nextSibling', 'firstChild', match, true, nocash);=0A=
	},=0A=
=0A=
	getWindow: function(){=0A=
		return this.ownerDocument.window;=0A=
	},=0A=
=0A=
	getDocument: function(){=0A=
		return this.ownerDocument;=0A=
	},=0A=
=0A=
	getElementById: function(id, nocash){=0A=
		var el =3D this.ownerDocument.getElementById(id);=0A=
		if (!el) return null;=0A=
		for (var parent =3D el.parentNode; parent !=3D this; parent =3D =
parent.parentNode){=0A=
			if (!parent) return null;=0A=
		}=0A=
		return $.element(el, nocash);=0A=
	},=0A=
=0A=
	getSelected: function(){=0A=
		return new Elements($A(this.options).filter(function(option){=0A=
			return option.selected;=0A=
		}));=0A=
	},=0A=
=0A=
	getComputedStyle: function(property){=0A=
		if (this.currentStyle) return this.currentStyle[property.camelCase()];=0A=
		var computed =3D this.getDocument().defaultView.getComputedStyle(this, =
null);=0A=
		return (computed) ? computed.getPropertyValue([property.hyphenate()]) =
: null;=0A=
	},=0A=
=0A=
	toQueryString: function(){=0A=
		var queryString =3D [];=0A=
		this.getElements('input, select, textarea', true).each(function(el){=0A=
			if (!el.name || el.disabled) return;=0A=
			var value =3D (el.tagName.toLowerCase() =3D=3D 'select') ? =
Element.getSelected(el).map(function(opt){=0A=
				return opt.value;=0A=
			}) : ((el.type =3D=3D 'radio' || el.type =3D=3D 'checkbox') && =
!el.checked) ? null : el.value;=0A=
			$splat(value).each(function(val){=0A=
				if (typeof val !=3D 'undefined') queryString.push(el.name + '=3D' + =
encodeURIComponent(val));=0A=
			});=0A=
		});=0A=
		return queryString.join('&');=0A=
	},=0A=
=0A=
	clone: function(contents, keepid){=0A=
		contents =3D contents !=3D=3D false;=0A=
		var clone =3D this.cloneNode(contents);=0A=
		var clean =3D function(node, element){=0A=
			if (!keepid) node.removeAttribute('id');=0A=
			if (Browser.Engine.trident){=0A=
				node.clearAttributes();=0A=
				node.mergeAttributes(element);=0A=
				node.removeAttribute('uid');=0A=
				if (node.options){=0A=
					var no =3D node.options, eo =3D element.options;=0A=
					for (var j =3D no.length; j--;) no[j].selected =3D eo[j].selected;=0A=
				}=0A=
			}=0A=
			var prop =3D props[element.tagName.toLowerCase()];=0A=
			if (prop && element[prop]) node[prop] =3D element[prop];=0A=
		};=0A=
=0A=
		if (contents){=0A=
			var ce =3D clone.getElementsByTagName('*'), te =3D =
this.getElementsByTagName('*');=0A=
			for (var i =3D ce.length; i--;) clean(ce[i], te[i]);=0A=
		}=0A=
=0A=
		clean(clone, this);=0A=
		return $(clone);=0A=
	},=0A=
=0A=
	destroy: function(){=0A=
		Element.empty(this);=0A=
		Element.dispose(this);=0A=
		clean(this, true);=0A=
		return null;=0A=
	},=0A=
=0A=
	empty: function(){=0A=
		$A(this.childNodes).each(function(node){=0A=
			Element.destroy(node);=0A=
		});=0A=
		return this;=0A=
	},=0A=
=0A=
	dispose: function(){=0A=
		return (this.parentNode) ? this.parentNode.removeChild(this) : this;=0A=
	},=0A=
=0A=
	hasChild: function(el){=0A=
		el =3D $(el, true);=0A=
		if (!el) return false;=0A=
		if (Browser.Engine.webkit && Browser.Engine.version < 420) return =
$A(this.getElementsByTagName(el.tagName)).contains(el);=0A=
		return (this.contains) ? (this !=3D el && this.contains(el)) : =
!!(this.compareDocumentPosition(el) & 16);=0A=
	},=0A=
=0A=
	match: function(tag){=0A=
		return (!tag || (tag =3D=3D this) || (Element.get(this, 'tag') =3D=3D =
tag));=0A=
	}=0A=
=0A=
});=0A=
=0A=
Native.implement([Element, Window, Document], {=0A=
=0A=
	addListener: function(type, fn){=0A=
		if (type =3D=3D 'unload'){=0A=
			var old =3D fn, self =3D this;=0A=
			fn =3D function(){=0A=
				self.removeListener('unload', fn);=0A=
				old();=0A=
			};=0A=
		} else {=0A=
			collected[this.uid] =3D this;=0A=
		}=0A=
		if (this.addEventListener) this.addEventListener(type, fn, false);=0A=
		else this.attachEvent('on' + type, fn);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeListener: function(type, fn){=0A=
		if (this.removeEventListener) this.removeEventListener(type, fn, =
false);=0A=
		else this.detachEvent('on' + type, fn);=0A=
		return this;=0A=
	},=0A=
=0A=
	retrieve: function(property, dflt){=0A=
		var storage =3D get(this.uid), prop =3D storage[property];=0A=
		if (dflt !=3D undefined && prop =3D=3D undefined) prop =3D =
storage[property] =3D dflt;=0A=
		return $pick(prop);=0A=
	},=0A=
=0A=
	store: function(property, value){=0A=
		var storage =3D get(this.uid);=0A=
		storage[property] =3D value;=0A=
		return this;=0A=
	},=0A=
=0A=
	eliminate: function(property){=0A=
		var storage =3D get(this.uid);=0A=
		delete storage[property];=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
window.addListener('unload', purge);=0A=
=0A=
})();=0A=
=0A=
Element.Properties =3D new Hash;=0A=
=0A=
Element.Properties.style =3D {=0A=
=0A=
	set: function(style){=0A=
		this.style.cssText =3D style;=0A=
	},=0A=
=0A=
	get: function(){=0A=
		return this.style.cssText;=0A=
	},=0A=
=0A=
	erase: function(){=0A=
		this.style.cssText =3D '';=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.Properties.tag =3D {=0A=
=0A=
	get: function(){=0A=
		return this.tagName.toLowerCase();=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.Properties.html =3D (function(){=0A=
	var wrapper =3D document.createElement('div');=0A=
=0A=
	var translations =3D {=0A=
		table: [1, '<table>', '</table>'],=0A=
		select: [1, '<select>', '</select>'],=0A=
		tbody: [2, '<table><tbody>', '</tbody></table>'],=0A=
		tr: [3, '<table><tbody><tr>', '</tr></tbody></table>']=0A=
	};=0A=
	translations.thead =3D translations.tfoot =3D translations.tbody;=0A=
=0A=
	var html =3D {=0A=
		set: function(){=0A=
			var html =3D Array.flatten(arguments).join('');=0A=
			var wrap =3D Browser.Engine.trident && translations[this.get('tag')];=0A=
			if (wrap){=0A=
				var first =3D wrapper;=0A=
				first.innerHTML =3D wrap[1] + html + wrap[2];=0A=
				for (var i =3D wrap[0]; i--;) first =3D first.firstChild;=0A=
				this.empty().adopt(first.childNodes);=0A=
			} else {=0A=
				this.innerHTML =3D html;=0A=
			}=0A=
		}=0A=
	};=0A=
=0A=
	html.erase =3D html.set;=0A=
=0A=
	return html;=0A=
})();=0A=
=0A=
if (Browser.Engine.webkit && Browser.Engine.version < 420) =
Element.Properties.text =3D {=0A=
	get: function(){=0A=
		if (this.innerText) return this.innerText;=0A=
		var temp =3D this.ownerDocument.newElement('div', {html: =
this.innerHTML}).inject(this.ownerDocument.body);=0A=
		var text =3D temp.innerText;=0A=
		temp.destroy();=0A=
		return text;=0A=
	}=0A=
};=0A=
=0A=
=0A=
/*=0A=
Script: Element.Event.js=0A=
	Contains Element methods for dealing with events, and custom Events.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Element.Properties.events =3D {set: function(events){=0A=
	this.addEvents(events);=0A=
}};=0A=
=0A=
Native.implement([Element, Window, Document], {=0A=
=0A=
	addEvent: function(type, fn){=0A=
		var events =3D this.retrieve('events', {});=0A=
		events[type] =3D events[type] || {'keys': [], 'values': []};=0A=
		if (events[type].keys.contains(fn)) return this;=0A=
		events[type].keys.push(fn);=0A=
		var realType =3D type, custom =3D Element.Events.get(type), condition =
=3D fn, self =3D this;=0A=
		if (custom){=0A=
			if (custom.onAdd) custom.onAdd.call(this, fn);=0A=
			if (custom.condition){=0A=
				condition =3D function(event){=0A=
					if (custom.condition.call(this, event)) return fn.call(this, event);=0A=
					return true;=0A=
				};=0A=
			}=0A=
			realType =3D custom.base || realType;=0A=
		}=0A=
		var defn =3D function(){=0A=
			return fn.call(self);=0A=
		};=0A=
		var nativeEvent =3D Element.NativeEvents[realType];=0A=
		if (nativeEvent){=0A=
			if (nativeEvent =3D=3D 2){=0A=
				defn =3D function(event){=0A=
					event =3D new Event(event, self.getWindow());=0A=
					if (condition.call(self, event) =3D=3D=3D false) event.stop();=0A=
				};=0A=
			}=0A=
			this.addListener(realType, defn);=0A=
		}=0A=
		events[type].values.push(defn);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeEvent: function(type, fn){=0A=
		var events =3D this.retrieve('events');=0A=
		if (!events || !events[type]) return this;=0A=
		var pos =3D events[type].keys.indexOf(fn);=0A=
		if (pos =3D=3D -1) return this;=0A=
		events[type].keys.splice(pos, 1);=0A=
		var value =3D events[type].values.splice(pos, 1)[0];=0A=
		var custom =3D Element.Events.get(type);=0A=
		if (custom){=0A=
			if (custom.onRemove) custom.onRemove.call(this, fn);=0A=
			type =3D custom.base || type;=0A=
		}=0A=
		return (Element.NativeEvents[type]) ? this.removeListener(type, value) =
: this;=0A=
	},=0A=
=0A=
	addEvents: function(events){=0A=
		for (var event in events) this.addEvent(event, events[event]);=0A=
		return this;=0A=
	},=0A=
=0A=
	removeEvents: function(events){=0A=
		if ($type(events) =3D=3D 'object'){=0A=
			for (var type in events) this.removeEvent(type, events[type]);=0A=
			return this;=0A=
		}=0A=
		var attached =3D this.retrieve('events');=0A=
		if (!attached) return this;=0A=
		if (!events){=0A=
			for (var type in attached) this.removeEvents(type);=0A=
			this.eliminate('events');=0A=
		} else if (attached[events]){=0A=
			while (attached[events].keys[0]) this.removeEvent(events, =
attached[events].keys[0]);=0A=
			attached[events] =3D null;=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	fireEvent: function(type, args, delay){=0A=
		var events =3D this.retrieve('events');=0A=
		if (!events || !events[type]) return this;=0A=
		events[type].keys.each(function(fn){=0A=
			fn.create({'bind': this, 'delay': delay, 'arguments': args})();=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
=0A=
	cloneEvents: function(from, type){=0A=
		from =3D $(from);=0A=
		var fevents =3D from.retrieve('events');=0A=
		if (!fevents) return this;=0A=
		if (!type){=0A=
			for (var evType in fevents) this.cloneEvents(from, evType);=0A=
		} else if (fevents[type]){=0A=
			fevents[type].keys.each(function(fn){=0A=
				this.addEvent(type, fn);=0A=
			}, this);=0A=
		}=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.NativeEvents =3D {=0A=
	click: 2, dblclick: 2, mouseup: 2, mousedown: 2, contextmenu: 2, =
//mouse buttons=0A=
	mousewheel: 2, DOMMouseScroll: 2, //mouse wheel=0A=
	mouseover: 2, mouseout: 2, mousemove: 2, selectstart: 2, selectend: 2, =
//mouse movement=0A=
	keydown: 2, keypress: 2, keyup: 2, //keyboard=0A=
	focus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, //form =
elements=0A=
	load: 1, unload: 1, beforeunload: 2, resize: 1, move: 1, =
DOMContentLoaded: 1, readystatechange: 1, //window=0A=
	error: 1, abort: 1, scroll: 1 //misc=0A=
};=0A=
=0A=
(function(){=0A=
=0A=
var $check =3D function(event){=0A=
	var related =3D event.relatedTarget;=0A=
	if (related =3D=3D undefined) return true;=0A=
	if (related =3D=3D=3D false) return false;=0A=
	return ($type(this) !=3D 'document' && related !=3D this && =
related.prefix !=3D 'xul' && !this.hasChild(related));=0A=
};=0A=
=0A=
Element.Events =3D new Hash({=0A=
=0A=
	mouseenter: {=0A=
		base: 'mouseover',=0A=
		condition: $check=0A=
	},=0A=
=0A=
	mouseleave: {=0A=
		base: 'mouseout',=0A=
		condition: $check=0A=
	},=0A=
=0A=
	mousewheel: {=0A=
		base: (Browser.Engine.gecko) ? 'DOMMouseScroll' : 'mousewheel'=0A=
	}=0A=
=0A=
});=0A=
=0A=
})();=0A=
=0A=
=0A=
/*=0A=
Script: Element.Style.js=0A=
	Contains methods for interacting with the styles of Elements in a =
fashionable way.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Element.Properties.styles =3D {set: function(styles){=0A=
	this.setStyles(styles);=0A=
}};=0A=
=0A=
Element.Properties.opacity =3D {=0A=
=0A=
	set: function(opacity, novisibility){=0A=
		if (!novisibility){=0A=
			if (opacity =3D=3D 0){=0A=
				if (this.style.visibility !=3D 'hidden') this.style.visibility =3D =
'hidden';=0A=
			} else {=0A=
				if (this.style.visibility !=3D 'visible') this.style.visibility =3D =
'visible';=0A=
			}=0A=
		}=0A=
		if (!this.currentStyle || !this.currentStyle.hasLayout) =
this.style.zoom =3D 1;=0A=
		if (Browser.Engine.trident) this.style.filter =3D (opacity =3D=3D 1) ? =
'' : 'alpha(opacity=3D' + opacity * 100 + ')';=0A=
		this.style.opacity =3D opacity;=0A=
		this.store('opacity', opacity);=0A=
	},=0A=
=0A=
	get: function(){=0A=
		return this.retrieve('opacity', 1);=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.implement({=0A=
=0A=
	setOpacity: function(value){=0A=
		return this.set('opacity', value, true);=0A=
	},=0A=
=0A=
	getOpacity: function(){=0A=
		return this.get('opacity');=0A=
	},=0A=
=0A=
	setStyle: function(property, value){=0A=
		switch (property){=0A=
			case 'opacity': return this.set('opacity', parseFloat(value));=0A=
			case 'float': property =3D (Browser.Engine.trident) ? 'styleFloat' : =
'cssFloat';=0A=
		}=0A=
		property =3D property.camelCase();=0A=
		if ($type(value) !=3D 'string'){=0A=
			var map =3D (Element.Styles.get(property) || '@').split(' ');=0A=
			value =3D $splat(value).map(function(val, i){=0A=
				if (!map[i]) return '';=0A=
				return ($type(val) =3D=3D 'number') ? map[i].replace('@', =
Math.round(val)) : val;=0A=
			}).join(' ');=0A=
		} else if (value =3D=3D String(Number(value))){=0A=
			value =3D Math.round(value);=0A=
		}=0A=
		this.style[property] =3D value;=0A=
		return this;=0A=
	},=0A=
=0A=
	getStyle: function(property){=0A=
		switch (property){=0A=
			case 'opacity': return this.get('opacity');=0A=
			case 'float': property =3D (Browser.Engine.trident) ? 'styleFloat' : =
'cssFloat';=0A=
		}=0A=
		property =3D property.camelCase();=0A=
		var result =3D this.style[property];=0A=
		if (!$chk(result)){=0A=
			result =3D [];=0A=
			for (var style in Element.ShortStyles){=0A=
				if (property !=3D style) continue;=0A=
				for (var s in Element.ShortStyles[style]) =
result.push(this.getStyle(s));=0A=
				return result.join(' ');=0A=
			}=0A=
			result =3D this.getComputedStyle(property);=0A=
		}=0A=
		if (result){=0A=
			result =3D String(result);=0A=
			var color =3D result.match(/rgba?\([\d\s,]+\)/);=0A=
			if (color) result =3D result.replace(color[0], color[0].rgbToHex());=0A=
		}=0A=
		if (Browser.Engine.presto || (Browser.Engine.trident && =
!$chk(parseInt(result, 10)))){=0A=
			if (property.test(/^(height|width)$/)){=0A=
				var values =3D (property =3D=3D 'width') ? ['left', 'right'] : =
['top', 'bottom'], size =3D 0;=0A=
				values.each(function(value){=0A=
					size +=3D this.getStyle('border-' + value + '-width').toInt() + =
this.getStyle('padding-' + value).toInt();=0A=
				}, this);=0A=
				return this['offset' + property.capitalize()] - size + 'px';=0A=
			}=0A=
			if ((Browser.Engine.presto) && String(result).test('px')) return =
result;=0A=
			if (property.test(/(border(.+)Width|margin|padding)/)) return '0px';=0A=
		}=0A=
		return result;=0A=
	},=0A=
=0A=
	setStyles: function(styles){=0A=
		for (var style in styles) this.setStyle(style, styles[style]);=0A=
		return this;=0A=
	},=0A=
=0A=
	getStyles: function(){=0A=
		var result =3D {};=0A=
		Array.each(arguments, function(key){=0A=
			result[key] =3D this.getStyle(key);=0A=
		}, this);=0A=
		return result;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Styles =3D new Hash({=0A=
	left: '@px', top: '@px', bottom: '@px', right: '@px',=0A=
	width: '@px', height: '@px', maxWidth: '@px', maxHeight: '@px', =
minWidth: '@px', minHeight: '@px',=0A=
	backgroundColor: 'rgb(@, @, @)', backgroundPosition: '@px @px', color: =
'rgb(@, @, @)',=0A=
	fontSize: '@px', letterSpacing: '@px', lineHeight: '@px', clip: =
'rect(@px @px @px @px)',=0A=
	margin: '@px @px @px @px', padding: '@px @px @px @px', border: '@px @ =
rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)',=0A=
	borderWidth: '@px @px @px @px', borderStyle: '@ @ @ @', borderColor: =
'rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)',=0A=
	zIndex: '@', 'zoom': '@', fontWeight: '@', textIndent: '@px', opacity: =
'@'=0A=
});=0A=
=0A=
Element.ShortStyles =3D {margin: {}, padding: {}, border: {}, =
borderWidth: {}, borderStyle: {}, borderColor: {}};=0A=
=0A=
['Top', 'Right', 'Bottom', 'Left'].each(function(direction){=0A=
	var Short =3D Element.ShortStyles;=0A=
	var All =3D Element.Styles;=0A=
	['margin', 'padding'].each(function(style){=0A=
		var sd =3D style + direction;=0A=
		Short[style][sd] =3D All[sd] =3D '@px';=0A=
	});=0A=
	var bd =3D 'border' + direction;=0A=
	Short.border[bd] =3D All[bd] =3D '@px @ rgb(@, @, @)';=0A=
	var bdw =3D bd + 'Width', bds =3D bd + 'Style', bdc =3D bd + 'Color';=0A=
	Short[bd] =3D {};=0A=
	Short.borderWidth[bdw] =3D Short[bd][bdw] =3D All[bdw] =3D '@px';=0A=
	Short.borderStyle[bds] =3D Short[bd][bds] =3D All[bds] =3D '@';=0A=
	Short.borderColor[bdc] =3D Short[bd][bdc] =3D All[bdc] =3D 'rgb(@, @, =
@)';=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Element.Dimensions.js=0A=
	Contains methods to work with size, scroll, or positioning of Elements =
and the window object.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
Credits:=0A=
	- Element positioning based on the [qooxdoo](http://qooxdoo.org/) code =
and smart browser fixes, [LGPL =
License](http://www.gnu.org/licenses/lgpl.html).=0A=
	- Viewport dimensions based on [YUI](http://developer.yahoo.com/yui/) =
code, [BSD License](http://developer.yahoo.com/yui/license.html).=0A=
*/=0A=
=0A=
(function(){=0A=
=0A=
Element.implement({=0A=
=0A=
	scrollTo: function(x, y){=0A=
		if (isBody(this)){=0A=
			this.getWindow().scrollTo(x, y);=0A=
		} else {=0A=
			this.scrollLeft =3D x;=0A=
			this.scrollTop =3D y;=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	getSize: function(){=0A=
		if (isBody(this)) return this.getWindow().getSize();=0A=
		return {x: this.offsetWidth, y: this.offsetHeight};=0A=
	},=0A=
=0A=
	getScrollSize: function(){=0A=
		if (isBody(this)) return this.getWindow().getScrollSize();=0A=
		return {x: this.scrollWidth, y: this.scrollHeight};=0A=
	},=0A=
=0A=
	getScroll: function(){=0A=
		if (isBody(this)) return this.getWindow().getScroll();=0A=
		return {x: this.scrollLeft, y: this.scrollTop};=0A=
	},=0A=
=0A=
	getScrolls: function(){=0A=
		var element =3D this, position =3D {x: 0, y: 0};=0A=
		while (element && !isBody(element)){=0A=
			position.x +=3D element.scrollLeft;=0A=
			position.y +=3D element.scrollTop;=0A=
			element =3D element.parentNode;=0A=
		}=0A=
		return position;=0A=
	},=0A=
=0A=
	getOffsetParent: function(){=0A=
		var element =3D this;=0A=
		if (isBody(element)) return null;=0A=
		if (!Browser.Engine.trident) return element.offsetParent;=0A=
		while ((element =3D element.parentNode) && !isBody(element)){=0A=
			if (styleString(element, 'position') !=3D 'static') return element;=0A=
		}=0A=
		return null;=0A=
	},=0A=
=0A=
	getOffsets: function(){		=0A=
		if (Browser.Engine.trident){=0A=
			var bound =3D this.getBoundingClientRect(), html =3D =
this.getDocument().documentElement;=0A=
			var isFixed =3D styleString(this, 'position') =3D=3D 'fixed';=0A=
			return {=0A=
				x: bound.left + ((isFixed) ? 0 : html.scrollLeft) - html.clientLeft,=0A=
				y: bound.top +  ((isFixed) ? 0 : html.scrollTop)  - html.clientTop=0A=
			};=0A=
		}=0A=
=0A=
		var element =3D this, position =3D {x: 0, y: 0};=0A=
		if (isBody(this)) return position;=0A=
=0A=
		while (element && !isBody(element)){=0A=
			position.x +=3D element.offsetLeft;=0A=
			position.y +=3D element.offsetTop;=0A=
=0A=
			if (Browser.Engine.gecko){=0A=
				if (!borderBox(element)){=0A=
					position.x +=3D leftBorder(element);=0A=
					position.y +=3D topBorder(element);=0A=
				}=0A=
				var parent =3D element.parentNode;=0A=
				if (parent && styleString(parent, 'overflow') !=3D 'visible'){=0A=
					position.x +=3D leftBorder(parent);=0A=
					position.y +=3D topBorder(parent);=0A=
				}=0A=
			} else if (element !=3D this && Browser.Engine.webkit){=0A=
				position.x +=3D leftBorder(element);=0A=
				position.y +=3D topBorder(element);=0A=
			}=0A=
=0A=
			element =3D element.offsetParent;=0A=
		}=0A=
		if (Browser.Engine.gecko && !borderBox(this)){=0A=
			position.x -=3D leftBorder(this);=0A=
			position.y -=3D topBorder(this);=0A=
		}=0A=
		return position;=0A=
	},=0A=
=0A=
	getPosition: function(relative){=0A=
		if (isBody(this)) return {x: 0, y: 0};=0A=
		var offset =3D this.getOffsets(), scroll =3D this.getScrolls();=0A=
		var position =3D {x: offset.x - scroll.x, y: offset.y - scroll.y};=0A=
		var relativePosition =3D (relative && (relative =3D $(relative))) ? =
relative.getPosition() : {x: 0, y: 0};=0A=
		return {x: position.x - relativePosition.x, y: position.y - =
relativePosition.y};=0A=
	},=0A=
=0A=
	getCoordinates: function(element){=0A=
		if (isBody(this)) return this.getWindow().getCoordinates();=0A=
		var position =3D this.getPosition(element), size =3D this.getSize();=0A=
		var obj =3D {left: position.x, top: position.y, width: size.x, height: =
size.y};=0A=
		obj.right =3D obj.left + obj.width;=0A=
		obj.bottom =3D obj.top + obj.height;=0A=
		return obj;=0A=
	},=0A=
=0A=
	computePosition: function(obj){=0A=
		return {left: obj.x - styleNumber(this, 'margin-left'), top: obj.y - =
styleNumber(this, 'margin-top')};=0A=
	},=0A=
=0A=
	setPosition: function(obj){=0A=
		return this.setStyles(this.computePosition(obj));=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
Native.implement([Document, Window], {=0A=
=0A=
	getSize: function(){=0A=
		if (Browser.Engine.presto || Browser.Engine.webkit) {=0A=
			var win =3D this.getWindow();=0A=
			return {x: win.innerWidth, y: win.innerHeight};=0A=
		}=0A=
		var doc =3D getCompatElement(this);=0A=
		return {x: doc.clientWidth, y: doc.clientHeight};=0A=
	},=0A=
=0A=
	getScroll: function(){=0A=
		var win =3D this.getWindow(), doc =3D getCompatElement(this);=0A=
		return {x: win.pageXOffset || doc.scrollLeft, y: win.pageYOffset || =
doc.scrollTop};=0A=
	},=0A=
=0A=
	getScrollSize: function(){=0A=
		var doc =3D getCompatElement(this), min =3D this.getSize();=0A=
		return {x: Math.max(doc.scrollWidth, min.x), y: =
Math.max(doc.scrollHeight, min.y)};=0A=
	},=0A=
=0A=
	getPosition: function(){=0A=
		return {x: 0, y: 0};=0A=
	},=0A=
=0A=
	getCoordinates: function(){=0A=
		var size =3D this.getSize();=0A=
		return {top: 0, left: 0, bottom: size.y, right: size.x, height: =
size.y, width: size.x};=0A=
	}=0A=
=0A=
});=0A=
=0A=
// private methods=0A=
=0A=
var styleString =3D Element.getComputedStyle;=0A=
=0A=
function styleNumber(element, style){=0A=
	return styleString(element, style).toInt() || 0;=0A=
};=0A=
=0A=
function borderBox(element){=0A=
	return styleString(element, '-moz-box-sizing') =3D=3D 'border-box';=0A=
};=0A=
=0A=
function topBorder(element){=0A=
	return styleNumber(element, 'border-top-width');=0A=
};=0A=
=0A=
function leftBorder(element){=0A=
	return styleNumber(element, 'border-left-width');=0A=
};=0A=
=0A=
function isBody(element){=0A=
	return (/^(?:body|html)$/i).test(element.tagName);=0A=
};=0A=
=0A=
function getCompatElement(element){=0A=
	var doc =3D element.getDocument();=0A=
	return (!doc.compatMode || doc.compatMode =3D=3D 'CSS1Compat') ? =
doc.html : doc.body;=0A=
};=0A=
=0A=
})();=0A=
=0A=
//aliases=0A=
=0A=
Element.alias('position', 'setPosition'); //compatability=0A=
=0A=
Native.implement([Window, Document, Element], {=0A=
=0A=
	getHeight: function(){=0A=
		return this.getSize().y;=0A=
	},=0A=
=0A=
	getWidth: function(){=0A=
		return this.getSize().x;=0A=
	},=0A=
=0A=
	getScrollTop: function(){=0A=
		return this.getScroll().y;=0A=
	},=0A=
=0A=
	getScrollLeft: function(){=0A=
		return this.getScroll().x;=0A=
	},=0A=
=0A=
	getScrollHeight: function(){=0A=
		return this.getScrollSize().y;=0A=
	},=0A=
=0A=
	getScrollWidth: function(){=0A=
		return this.getScrollSize().x;=0A=
	},=0A=
=0A=
	getTop: function(){=0A=
		return this.getPosition().y;=0A=
	},=0A=
=0A=
	getLeft: function(){=0A=
		return this.getPosition().x;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Selectors.js=0A=
	Adds advanced CSS Querying capabilities for targeting elements. Also =
includes pseudoselectors support.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Native.implement([Document, Element], {=0A=
=0A=
	getElements: function(expression, nocash){=0A=
		expression =3D expression.split(',');=0A=
		var items, local =3D {};=0A=
		for (var i =3D 0, l =3D expression.length; i < l; i++){=0A=
			var selector =3D expression[i], elements =3D =
Selectors.Utils.search(this, selector, local);=0A=
			if (i !=3D 0 && elements.item) elements =3D $A(elements);=0A=
			items =3D (i =3D=3D 0) ? elements : (items.item) ? =
$A(items).concat(elements) : items.concat(elements);=0A=
		}=0A=
		return new Elements(items, {ddup: (expression.length > 1), cash: =
!nocash});=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.implement({=0A=
=0A=
	match: function(selector){=0A=
		if (!selector || (selector =3D=3D this)) return true;=0A=
		var tagid =3D Selectors.Utils.parseTagAndID(selector);=0A=
		var tag =3D tagid[0], id =3D tagid[1];=0A=
		if (!Selectors.Filters.byID(this, id) || =
!Selectors.Filters.byTag(this, tag)) return false;=0A=
		var parsed =3D Selectors.Utils.parseSelector(selector);=0A=
		return (parsed) ? Selectors.Utils.filter(this, parsed, {}) : true;=0A=
	}=0A=
=0A=
});=0A=
=0A=
var Selectors =3D {Cache: {nth: {}, parsed: {}}};=0A=
=0A=
Selectors.RegExps =3D {=0A=
	id: (/#([\w-]+)/),=0A=
	tag: (/^(\w+|\*)/),=0A=
	quick: (/^(\w+|\*)$/),=0A=
	splitter: (/\s*([+>~\s])\s*([a-zA-Z#.*:\[])/g),=0A=
	combined: =
(/\.([\w-]+)|\[(\w+)(?:([!*^$~|]?=3D)(["']?)([^\4]*?)\4)?\]|:([\w-]+)(?:\=
(["']?(.*?)?["']?\)|$)/g)=0A=
};=0A=
=0A=
Selectors.Utils =3D {=0A=
=0A=
	chk: function(item, uniques){=0A=
		if (!uniques) return true;=0A=
		var uid =3D $uid(item);=0A=
		if (!uniques[uid]) return uniques[uid] =3D true;=0A=
		return false;=0A=
	},=0A=
=0A=
	parseNthArgument: function(argument){=0A=
		if (Selectors.Cache.nth[argument]) return =
Selectors.Cache.nth[argument];=0A=
		var parsed =3D argument.match(/^([+-]?\d*)?([a-z]+)?([+-]?\d*)?$/);=0A=
		if (!parsed) return false;=0A=
		var inta =3D parseInt(parsed[1], 10);=0A=
		var a =3D (inta || inta =3D=3D=3D 0) ? inta : 1;=0A=
		var special =3D parsed[2] || false;=0A=
		var b =3D parseInt(parsed[3], 10) || 0;=0A=
		if (a !=3D 0){=0A=
			b--;=0A=
			while (b < 1) b +=3D a;=0A=
			while (b >=3D a) b -=3D a;=0A=
		} else {=0A=
			a =3D b;=0A=
			special =3D 'index';=0A=
		}=0A=
		switch (special){=0A=
			case 'n': parsed =3D {a: a, b: b, special: 'n'}; break;=0A=
			case 'odd': parsed =3D {a: 2, b: 0, special: 'n'}; break;=0A=
			case 'even': parsed =3D {a: 2, b: 1, special: 'n'}; break;=0A=
			case 'first': parsed =3D {a: 0, special: 'index'}; break;=0A=
			case 'last': parsed =3D {special: 'last-child'}; break;=0A=
			case 'only': parsed =3D {special: 'only-child'}; break;=0A=
			default: parsed =3D {a: (a - 1), special: 'index'};=0A=
		}=0A=
=0A=
		return Selectors.Cache.nth[argument] =3D parsed;=0A=
	},=0A=
=0A=
	parseSelector: function(selector){=0A=
		if (Selectors.Cache.parsed[selector]) return =
Selectors.Cache.parsed[selector];=0A=
		var m, parsed =3D {classes: [], pseudos: [], attributes: []};=0A=
		while ((m =3D Selectors.RegExps.combined.exec(selector))){=0A=
			var cn =3D m[1], an =3D m[2], ao =3D m[3], av =3D m[5], pn =3D m[6], =
pa =3D m[7];=0A=
			if (cn){=0A=
				parsed.classes.push(cn);=0A=
			} else if (pn){=0A=
				var parser =3D Selectors.Pseudo.get(pn);=0A=
				if (parser) parsed.pseudos.push({parser: parser, argument: pa});=0A=
				else parsed.attributes.push({name: pn, operator: '=3D', value: pa});=0A=
			} else if (an){=0A=
				parsed.attributes.push({name: an, operator: ao, value: av});=0A=
			}=0A=
		}=0A=
		if (!parsed.classes.length) delete parsed.classes;=0A=
		if (!parsed.attributes.length) delete parsed.attributes;=0A=
		if (!parsed.pseudos.length) delete parsed.pseudos;=0A=
		if (!parsed.classes && !parsed.attributes && !parsed.pseudos) parsed =
=3D null;=0A=
		return Selectors.Cache.parsed[selector] =3D parsed;=0A=
	},=0A=
=0A=
	parseTagAndID: function(selector){=0A=
		var tag =3D selector.match(Selectors.RegExps.tag);=0A=
		var id =3D selector.match(Selectors.RegExps.id);=0A=
		return [(tag) ? tag[1] : '*', (id) ? id[1] : false];=0A=
	},=0A=
=0A=
	filter: function(item, parsed, local){=0A=
		var i;=0A=
		if (parsed.classes){=0A=
			for (i =3D parsed.classes.length; i--; i){=0A=
				var cn =3D parsed.classes[i];=0A=
				if (!Selectors.Filters.byClass(item, cn)) return false;=0A=
			}=0A=
		}=0A=
		if (parsed.attributes){=0A=
			for (i =3D parsed.attributes.length; i--; i){=0A=
				var att =3D parsed.attributes[i];=0A=
				if (!Selectors.Filters.byAttribute(item, att.name, att.operator, =
att.value)) return false;=0A=
			}=0A=
		}=0A=
		if (parsed.pseudos){=0A=
			for (i =3D parsed.pseudos.length; i--; i){=0A=
				var psd =3D parsed.pseudos[i];=0A=
				if (!Selectors.Filters.byPseudo(item, psd.parser, psd.argument, =
local)) return false;=0A=
			}=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	getByTagAndID: function(ctx, tag, id){=0A=
		if (id){=0A=
			var item =3D (ctx.getElementById) ? ctx.getElementById(id, true) : =
Element.getElementById(ctx, id, true);=0A=
			return (item && Selectors.Filters.byTag(item, tag)) ? [item] : [];=0A=
		} else {=0A=
			return ctx.getElementsByTagName(tag);=0A=
		}=0A=
	},=0A=
=0A=
	search: function(self, expression, local){=0A=
		var splitters =3D [];=0A=
=0A=
		var selectors =3D =
expression.trim().replace(Selectors.RegExps.splitter, function(m0, m1, =
m2){=0A=
			splitters.push(m1);=0A=
			return ':)' + m2;=0A=
		}).split(':)');=0A=
=0A=
		var items, filtered, item;=0A=
=0A=
		for (var i =3D 0, l =3D selectors.length; i < l; i++){=0A=
=0A=
			var selector =3D selectors[i];=0A=
=0A=
			if (i =3D=3D 0 && Selectors.RegExps.quick.test(selector)){=0A=
				items =3D self.getElementsByTagName(selector);=0A=
				continue;=0A=
			}=0A=
=0A=
			var splitter =3D splitters[i - 1];=0A=
=0A=
			var tagid =3D Selectors.Utils.parseTagAndID(selector);=0A=
			var tag =3D tagid[0], id =3D tagid[1];=0A=
=0A=
			if (i =3D=3D 0){=0A=
				items =3D Selectors.Utils.getByTagAndID(self, tag, id);=0A=
			} else {=0A=
				var uniques =3D {}, found =3D [];=0A=
				for (var j =3D 0, k =3D items.length; j < k; j++) found =3D =
Selectors.Getters[splitter](found, items[j], tag, id, uniques);=0A=
				items =3D found;=0A=
			}=0A=
=0A=
			var parsed =3D Selectors.Utils.parseSelector(selector);=0A=
=0A=
			if (parsed){=0A=
				filtered =3D [];=0A=
				for (var m =3D 0, n =3D items.length; m < n; m++){=0A=
					item =3D items[m];=0A=
					if (Selectors.Utils.filter(item, parsed, local)) =
filtered.push(item);=0A=
				}=0A=
				items =3D filtered;=0A=
			}=0A=
=0A=
		}=0A=
=0A=
		return items;=0A=
=0A=
	}=0A=
=0A=
};=0A=
=0A=
Selectors.Getters =3D {=0A=
=0A=
	' ': function(found, self, tag, id, uniques){=0A=
		var items =3D Selectors.Utils.getByTagAndID(self, tag, id);=0A=
		for (var i =3D 0, l =3D items.length; i < l; i++){=0A=
			var item =3D items[i];=0A=
			if (Selectors.Utils.chk(item, uniques)) found.push(item);=0A=
		}=0A=
		return found;=0A=
	},=0A=
=0A=
	'>': function(found, self, tag, id, uniques){=0A=
		var children =3D Selectors.Utils.getByTagAndID(self, tag, id);=0A=
		for (var i =3D 0, l =3D children.length; i < l; i++){=0A=
			var child =3D children[i];=0A=
			if (child.parentNode =3D=3D self && Selectors.Utils.chk(child, =
uniques)) found.push(child);=0A=
		}=0A=
		return found;=0A=
	},=0A=
=0A=
	'+': function(found, self, tag, id, uniques){=0A=
		while ((self =3D self.nextSibling)){=0A=
			if (self.nodeType =3D=3D 1){=0A=
				if (Selectors.Utils.chk(self, uniques) && =
Selectors.Filters.byTag(self, tag) && Selectors.Filters.byID(self, id)) =
found.push(self);=0A=
				break;=0A=
			}=0A=
		}=0A=
		return found;=0A=
	},=0A=
=0A=
	'~': function(found, self, tag, id, uniques){=0A=
		while ((self =3D self.nextSibling)){=0A=
			if (self.nodeType =3D=3D 1){=0A=
				if (!Selectors.Utils.chk(self, uniques)) break;=0A=
				if (Selectors.Filters.byTag(self, tag) && =
Selectors.Filters.byID(self, id)) found.push(self);=0A=
			}=0A=
		}=0A=
		return found;=0A=
	}=0A=
=0A=
};=0A=
=0A=
Selectors.Filters =3D {=0A=
=0A=
	byTag: function(self, tag){=0A=
		return (tag =3D=3D '*' || (self.tagName && self.tagName.toLowerCase() =
=3D=3D tag));=0A=
	},=0A=
=0A=
	byID: function(self, id){=0A=
		return (!id || (self.id && self.id =3D=3D id));=0A=
	},=0A=
=0A=
	byClass: function(self, klass){=0A=
		return (self.className && self.className.contains(klass, ' '));=0A=
	},=0A=
=0A=
	byPseudo: function(self, parser, argument, local){=0A=
		return parser.call(self, argument, local);=0A=
	},=0A=
=0A=
	byAttribute: function(self, name, operator, value){=0A=
		var result =3D Element.prototype.getProperty.call(self, name);=0A=
		if (!result) return (operator =3D=3D '!=3D');=0A=
		if (!operator || value =3D=3D undefined) return true;=0A=
		switch (operator){=0A=
			case '=3D': return (result =3D=3D value);=0A=
			case '*=3D': return (result.contains(value));=0A=
			case '^=3D': return (result.substr(0, value.length) =3D=3D value);=0A=
			case '$=3D': return (result.substr(result.length - value.length) =
=3D=3D value);=0A=
			case '!=3D': return (result !=3D value);=0A=
			case '~=3D': return result.contains(value, ' ');=0A=
			case '|=3D': return result.contains(value, '-');=0A=
		}=0A=
		return false;=0A=
	}=0A=
=0A=
};=0A=
=0A=
Selectors.Pseudo =3D new Hash({=0A=
=0A=
	// w3c pseudo selectors=0A=
=0A=
	checked: function(){=0A=
		return this.checked;=0A=
	},=0A=
	=0A=
	empty: function(){=0A=
		return !(this.innerText || this.textContent || '').length;=0A=
	},=0A=
=0A=
	not: function(selector){=0A=
		return !Element.match(this, selector);=0A=
	},=0A=
=0A=
	contains: function(text){=0A=
		return (this.innerText || this.textContent || '').contains(text);=0A=
	},=0A=
=0A=
	'first-child': function(){=0A=
		return Selectors.Pseudo.index.call(this, 0);=0A=
	},=0A=
=0A=
	'last-child': function(){=0A=
		var element =3D this;=0A=
		while ((element =3D element.nextSibling)){=0A=
			if (element.nodeType =3D=3D 1) return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	'only-child': function(){=0A=
		var prev =3D this;=0A=
		while ((prev =3D prev.previousSibling)){=0A=
			if (prev.nodeType =3D=3D 1) return false;=0A=
		}=0A=
		var next =3D this;=0A=
		while ((next =3D next.nextSibling)){=0A=
			if (next.nodeType =3D=3D 1) return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	'nth-child': function(argument, local){=0A=
		argument =3D (argument =3D=3D undefined) ? 'n' : argument;=0A=
		var parsed =3D Selectors.Utils.parseNthArgument(argument);=0A=
		if (parsed.special !=3D 'n') return =
Selectors.Pseudo[parsed.special].call(this, parsed.a, local);=0A=
		var count =3D 0;=0A=
		local.positions =3D local.positions || {};=0A=
		var uid =3D $uid(this);=0A=
		if (!local.positions[uid]){=0A=
			var self =3D this;=0A=
			while ((self =3D self.previousSibling)){=0A=
				if (self.nodeType !=3D 1) continue;=0A=
				count ++;=0A=
				var position =3D local.positions[$uid(self)];=0A=
				if (position !=3D undefined){=0A=
					count =3D position + count;=0A=
					break;=0A=
				}=0A=
			}=0A=
			local.positions[uid] =3D count;=0A=
		}=0A=
		return (local.positions[uid] % parsed.a =3D=3D parsed.b);=0A=
	},=0A=
=0A=
	// custom pseudo selectors=0A=
=0A=
	index: function(index){=0A=
		var element =3D this, count =3D 0;=0A=
		while ((element =3D element.previousSibling)){=0A=
			if (element.nodeType =3D=3D 1 && ++count > index) return false;=0A=
		}=0A=
		return (count =3D=3D index);=0A=
	},=0A=
=0A=
	even: function(argument, local){=0A=
		return Selectors.Pseudo['nth-child'].call(this, '2n+1', local);=0A=
	},=0A=
=0A=
	odd: function(argument, local){=0A=
		return Selectors.Pseudo['nth-child'].call(this, '2n', local);=0A=
	},=0A=
	=0A=
	selected: function() {=0A=
		return this.selected;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Domready.js=0A=
	Contains the domready custom event.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Element.Events.domready =3D {=0A=
=0A=
	onAdd: function(fn){=0A=
		if (Browser.loaded) fn.call(this);=0A=
	}=0A=
=0A=
};=0A=
=0A=
(function(){=0A=
=0A=
	var domready =3D function(){=0A=
		if (Browser.loaded) return;=0A=
		Browser.loaded =3D true;=0A=
		window.fireEvent('domready');=0A=
		document.fireEvent('domready');=0A=
	};=0A=
=0A=
	if (Browser.Engine.trident){=0A=
		var temp =3D document.createElement('div');=0A=
		(function(){=0A=
			($try(function(){=0A=
				temp.doScroll('left');=0A=
				return $(temp).inject(document.body).set('html', 'temp').dispose();=0A=
			})) ? domready() : arguments.callee.delay(50);=0A=
		})();=0A=
	} else if (Browser.Engine.webkit && Browser.Engine.version < 525){=0A=
		(function(){=0A=
			(['loaded', 'complete'].contains(document.readyState)) ? domready() : =
arguments.callee.delay(50);=0A=
		})();=0A=
	} else {=0A=
		window.addEvent('load', domready);=0A=
		document.addEvent('DOMContentLoaded', domready);=0A=
	}=0A=
=0A=
})();=0A=
=0A=
=0A=
/*=0A=
Script: JSON.js=0A=
	JSON encoder and decoder.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
See Also:=0A=
	<http://www.json.org/>=0A=
*/=0A=
=0A=
var JSON =3D new Hash({=0A=
=0A=
	$specialChars: {'\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', =
'\r': '\\r', '"' : '\\"', '\\': '\\\\'},=0A=
=0A=
	$replaceChars: function(chr){=0A=
		return JSON.$specialChars[chr] || '\\u00' + =
Math.floor(chr.charCodeAt() / 16).toString(16) + (chr.charCodeAt() % =
16).toString(16);=0A=
	},=0A=
=0A=
	encode: function(obj){=0A=
		switch ($type(obj)){=0A=
			case 'string':=0A=
				return '"' + obj.replace(/[\x00-\x1f\\"]/g, JSON.$replaceChars) + =
'"';=0A=
			case 'array':=0A=
				return '[' + String(obj.map(JSON.encode).filter($defined)) + ']';=0A=
			case 'object': case 'hash':=0A=
				var string =3D [];=0A=
				Hash.each(obj, function(value, key){=0A=
					var json =3D JSON.encode(value);=0A=
					if (json) string.push(JSON.encode(key) + ':' + json);=0A=
				});=0A=
				return '{' + string + '}';=0A=
			case 'number': case 'boolean': return String(obj);=0A=
			case false: return 'null';=0A=
		}=0A=
		return null;=0A=
	},=0A=
=0A=
	decode: function(string, secure){=0A=
		if ($type(string) !=3D 'string' || !string.length) return null;=0A=
		if (secure && !(/^[,:{}\[\]0-9.\-+Eaeflnr-u =
\n\r\t]*$/).test(string.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, =
''))) return null;=0A=
		return eval('(' + string + ')');=0A=
	}=0A=
=0A=
});=0A=
=0A=
Native.implement([Hash, Array, String, Number], {=0A=
=0A=
	toJSON: function(){=0A=
		return JSON.encode(this);=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Cookie.js=0A=
	Class for creating, loading, and saving browser Cookies.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
Credits:=0A=
	Based on the functions by Peter-Paul Koch (http://quirksmode.org).=0A=
*/=0A=
=0A=
var Cookie =3D new Class({=0A=
=0A=
	Implements: Options,=0A=
=0A=
	options: {=0A=
		path: false,=0A=
		domain: false,=0A=
		duration: false,=0A=
		secure: false,=0A=
		document: document=0A=
	},=0A=
=0A=
	initialize: function(key, options){=0A=
		this.key =3D key;=0A=
		this.setOptions(options);=0A=
	},=0A=
=0A=
	write: function(value){=0A=
		value =3D encodeURIComponent(value);=0A=
		if (this.options.domain) value +=3D '; domain=3D' + =
this.options.domain;=0A=
		if (this.options.path) value +=3D '; path=3D' + this.options.path;=0A=
		if (this.options.duration){=0A=
			var date =3D new Date();=0A=
			date.setTime(date.getTime() + this.options.duration * 24 * 60 * 60 * =
1000);=0A=
			value +=3D '; expires=3D' + date.toGMTString();=0A=
		}=0A=
		if (this.options.secure) value +=3D '; secure';=0A=
		this.options.document.cookie =3D this.key + '=3D' + value;=0A=
		return this;=0A=
	},=0A=
=0A=
	read: function(){=0A=
		var value =3D this.options.document.cookie.match('(?:^|;)\\s*' + =
this.key.escapeRegExp() + '=3D([^;]*)');=0A=
		return (value) ? decodeURIComponent(value[1]) : null;=0A=
	},=0A=
=0A=
	dispose: function(){=0A=
		new Cookie(this.key, $merge(this.options, {duration: -1})).write('');=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Cookie.write =3D function(key, value, options){=0A=
	return new Cookie(key, options).write(value);=0A=
};=0A=
=0A=
Cookie.read =3D function(key){=0A=
	return new Cookie(key).read();=0A=
};=0A=
=0A=
Cookie.dispose =3D function(key, options){=0A=
	return new Cookie(key, options).dispose();=0A=
};=0A=
=0A=
=0A=
/*=0A=
Script: Swiff.js=0A=
	Wrapper for embedding SWF movies. Supports (and fixes) External =
Interface Communication.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
Credits:=0A=
	Flash detection & Internet Explorer + Flash Player 9 fix inspired by =
SWFObject.=0A=
*/=0A=
=0A=
var Swiff =3D new Class({=0A=
=0A=
	Implements: [Options],=0A=
=0A=
	options: {=0A=
		id: null,=0A=
		height: 1,=0A=
		width: 1,=0A=
		container: null,=0A=
		properties: {},=0A=
		params: {=0A=
			quality: 'high',=0A=
			allowScriptAccess: 'always',=0A=
			wMode: 'transparent',=0A=
			swLiveConnect: true=0A=
		},=0A=
		callBacks: {},=0A=
		vars: {}=0A=
	},=0A=
=0A=
	toElement: function(){=0A=
		return this.object;=0A=
	},=0A=
=0A=
	initialize: function(path, options){=0A=
		this.instance =3D 'Swiff_' + $time();=0A=
=0A=
		this.setOptions(options);=0A=
		options =3D this.options;=0A=
		var id =3D this.id =3D options.id || this.instance;=0A=
		var container =3D $(options.container);=0A=
=0A=
		Swiff.CallBacks[this.instance] =3D {};=0A=
=0A=
		var params =3D options.params, vars =3D options.vars, callBacks =3D =
options.callBacks;=0A=
		var properties =3D $extend({height: options.height, width: =
options.width}, options.properties);=0A=
=0A=
		var self =3D this;=0A=
=0A=
		for (var callBack in callBacks){=0A=
			Swiff.CallBacks[this.instance][callBack] =3D (function(option){=0A=
				return function(){=0A=
					return option.apply(self.object, arguments);=0A=
				};=0A=
			})(callBacks[callBack]);=0A=
			vars[callBack] =3D 'Swiff.CallBacks.' + this.instance + '.' + =
callBack;=0A=
		}=0A=
=0A=
		params.flashVars =3D Hash.toQueryString(vars);=0A=
		if (Browser.Engine.trident){=0A=
			properties.classid =3D 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000';=0A=
			params.movie =3D path;=0A=
		} else {=0A=
			properties.type =3D 'application/x-shockwave-flash';=0A=
			properties.data =3D path;=0A=
		}=0A=
		var build =3D '<object id=3D"' + id + '"';=0A=
		for (var property in properties) build +=3D ' ' + property + '=3D"' + =
properties[property] + '"';=0A=
		build +=3D '>';=0A=
		for (var param in params){=0A=
			if (params[param]) build +=3D '<param name=3D"' + param + '" =
value=3D"' + params[param] + '" />';=0A=
		}=0A=
		build +=3D '</object>';=0A=
		this.object =3D ((container) ? container.empty() : new =
Element('div')).set('html', build).firstChild;=0A=
	},=0A=
=0A=
	replaces: function(element){=0A=
		element =3D $(element, true);=0A=
		element.parentNode.replaceChild(this.toElement(), element);=0A=
		return this;=0A=
	},=0A=
=0A=
	inject: function(element){=0A=
		$(element, true).appendChild(this.toElement());=0A=
		return this;=0A=
	},=0A=
=0A=
	remote: function(){=0A=
		return Swiff.remote.apply(Swiff, [this.toElement()].extend(arguments));=0A=
	}=0A=
=0A=
});=0A=
=0A=
Swiff.CallBacks =3D {};=0A=
=0A=
Swiff.remote =3D function(obj, fn){=0A=
	var rs =3D obj.CallFunction('<invoke name=3D"' + fn + '" =
returntype=3D"javascript">' + __flash__argumentsToXML(arguments, 2) + =
'</invoke>');=0A=
	return eval(rs);=0A=
};=0A=
=0A=
=0A=
/*=0A=
Script: Fx.js=0A=
	Contains the basic animation logic to be extended by all other Fx =
Classes.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Fx =3D new Class({=0A=
=0A=
	Implements: [Chain, Events, Options],=0A=
=0A=
	options: {=0A=
		/*=0A=
		onStart: $empty,=0A=
		onCancel: $empty,=0A=
		onComplete: $empty,=0A=
		*/=0A=
		fps: 50,=0A=
		unit: false,=0A=
		duration: 500,=0A=
		link: 'ignore'=0A=
	},=0A=
=0A=
	initialize: function(options){=0A=
		this.subject =3D this.subject || this;=0A=
		this.setOptions(options);=0A=
		this.options.duration =3D Fx.Durations[this.options.duration] || =
this.options.duration.toInt();=0A=
		var wait =3D this.options.wait;=0A=
		if (wait =3D=3D=3D false) this.options.link =3D 'cancel';=0A=
	},=0A=
=0A=
	getTransition: function(){=0A=
		return function(p){=0A=
			return -(Math.cos(Math.PI * p) - 1) / 2;=0A=
		};=0A=
	},=0A=
=0A=
	step: function(){=0A=
		var time =3D $time();=0A=
		if (time < this.time + this.options.duration){=0A=
			var delta =3D this.transition((time - this.time) / =
this.options.duration);=0A=
			this.set(this.compute(this.from, this.to, delta));=0A=
		} else {=0A=
			this.set(this.compute(this.from, this.to, 1));=0A=
			this.complete();=0A=
		}=0A=
	},=0A=
=0A=
	set: function(now){=0A=
		return now;=0A=
	},=0A=
=0A=
	compute: function(from, to, delta){=0A=
		return Fx.compute(from, to, delta);=0A=
	},=0A=
=0A=
	check: function(){=0A=
		if (!this.timer) return true;=0A=
		switch (this.options.link){=0A=
			case 'cancel': this.cancel(); return true;=0A=
			case 'chain': this.chain(this.caller.bind(this, arguments)); return =
false;=0A=
		}=0A=
		return false;=0A=
	},=0A=
=0A=
	start: function(from, to){=0A=
		if (!this.check(from, to)) return this;=0A=
		this.from =3D from;=0A=
		this.to =3D to;=0A=
		this.time =3D 0;=0A=
		this.transition =3D this.getTransition();=0A=
		this.startTimer();=0A=
		this.onStart();=0A=
		return this;=0A=
	},=0A=
=0A=
	complete: function(){=0A=
		if (this.stopTimer()) this.onComplete();=0A=
		return this;=0A=
	},=0A=
=0A=
	cancel: function(){=0A=
		if (this.stopTimer()) this.onCancel();=0A=
		return this;=0A=
	},=0A=
=0A=
	onStart: function(){=0A=
		this.fireEvent('start', this.subject);=0A=
	},=0A=
=0A=
	onComplete: function(){=0A=
		this.fireEvent('complete', this.subject);=0A=
		if (!this.callChain()) this.fireEvent('chainComplete', this.subject);=0A=
	},=0A=
=0A=
	onCancel: function(){=0A=
		this.fireEvent('cancel', this.subject).clearChain();=0A=
	},=0A=
=0A=
	pause: function(){=0A=
		this.stopTimer();=0A=
		return this;=0A=
	},=0A=
=0A=
	resume: function(){=0A=
		this.startTimer();=0A=
		return this;=0A=
	},=0A=
=0A=
	stopTimer: function(){=0A=
		if (!this.timer) return false;=0A=
		this.time =3D $time() - this.time;=0A=
		this.timer =3D $clear(this.timer);=0A=
		return true;=0A=
	},=0A=
=0A=
	startTimer: function(){=0A=
		if (this.timer) return false;=0A=
		this.time =3D $time() - this.time;=0A=
		this.timer =3D this.step.periodical(Math.round(1000 / =
this.options.fps), this);=0A=
		return true;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Fx.compute =3D function(from, to, delta){=0A=
	return (to - from) * delta + from;=0A=
};=0A=
=0A=
Fx.Durations =3D {'short': 250, 'normal': 500, 'long': 1000};=0A=
=0A=
=0A=
/*=0A=
Script: Fx.CSS.js=0A=
	Contains the CSS animation logic. Used by Fx.Tween, Fx.Morph, =
Fx.Elements.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Fx.CSS =3D new Class({=0A=
=0A=
	Extends: Fx,=0A=
=0A=
	//prepares the base from/to object=0A=
=0A=
	prepare: function(element, property, values){=0A=
		values =3D $splat(values);=0A=
		var values1 =3D values[1];=0A=
		if (!$chk(values1)){=0A=
			values[1] =3D values[0];=0A=
			values[0] =3D element.getStyle(property);=0A=
		}=0A=
		var parsed =3D values.map(this.parse);=0A=
		return {from: parsed[0], to: parsed[1]};=0A=
	},=0A=
=0A=
	//parses a value into an array=0A=
=0A=
	parse: function(value){=0A=
		value =3D $lambda(value)();=0A=
		value =3D (typeof value =3D=3D 'string') ? value.split(' ') : =
$splat(value);=0A=
		return value.map(function(val){=0A=
			val =3D String(val);=0A=
			var found =3D false;=0A=
			Fx.CSS.Parsers.each(function(parser, key){=0A=
				if (found) return;=0A=
				var parsed =3D parser.parse(val);=0A=
				if ($chk(parsed)) found =3D {value: parsed, parser: parser};=0A=
			});=0A=
			found =3D found || {value: val, parser: Fx.CSS.Parsers.String};=0A=
			return found;=0A=
		});=0A=
	},=0A=
=0A=
	//computes by a from and to prepared objects, using their parsers.=0A=
=0A=
	compute: function(from, to, delta){=0A=
		var computed =3D [];=0A=
		(Math.min(from.length, to.length)).times(function(i){=0A=
			computed.push({value: from[i].parser.compute(from[i].value, =
to[i].value, delta), parser: from[i].parser});=0A=
		});=0A=
		computed.$family =3D {name: 'fx:css:value'};=0A=
		return computed;=0A=
	},=0A=
=0A=
	//serves the value as settable=0A=
=0A=
	serve: function(value, unit){=0A=
		if ($type(value) !=3D 'fx:css:value') value =3D this.parse(value);=0A=
		var returned =3D [];=0A=
		value.each(function(bit){=0A=
			returned =3D returned.concat(bit.parser.serve(bit.value, unit));=0A=
		});=0A=
		return returned;=0A=
	},=0A=
=0A=
	//renders the change to an element=0A=
=0A=
	render: function(element, property, value, unit){=0A=
		element.setStyle(property, this.serve(value, unit));=0A=
	},=0A=
=0A=
	//searches inside the page css to find the values for a selector=0A=
=0A=
	search: function(selector){=0A=
		if (Fx.CSS.Cache[selector]) return Fx.CSS.Cache[selector];=0A=
		var to =3D {};=0A=
		Array.each(document.styleSheets, function(sheet, j){=0A=
			var href =3D sheet.href;=0A=
			if (href && href.contains('://') && !href.contains(document.domain)) =
return;=0A=
			var rules =3D sheet.rules || sheet.cssRules;=0A=
			Array.each(rules, function(rule, i){=0A=
				if (!rule.style) return;=0A=
				var selectorText =3D (rule.selectorText) ? =
rule.selectorText.replace(/^\w+/, function(m){=0A=
					return m.toLowerCase();=0A=
				}) : null;=0A=
				if (!selectorText || !selectorText.test('^' + selector + '$')) =
return;=0A=
				Element.Styles.each(function(value, style){=0A=
					if (!rule.style[style] || Element.ShortStyles[style]) return;=0A=
					value =3D String(rule.style[style]);=0A=
					to[style] =3D (value.test(/^rgb/)) ? value.rgbToHex() : value;=0A=
				});=0A=
			});=0A=
		});=0A=
		return Fx.CSS.Cache[selector] =3D to;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Fx.CSS.Cache =3D {};=0A=
=0A=
Fx.CSS.Parsers =3D new Hash({=0A=
=0A=
	Color: {=0A=
		parse: function(value){=0A=
			if (value.match(/^#[0-9a-f]{3,6}$/i)) return value.hexToRgb(true);=0A=
			return ((value =3D value.match(/(\d+),\s*(\d+),\s*(\d+)/))) ? =
[value[1], value[2], value[3]] : false;=0A=
		},=0A=
		compute: function(from, to, delta){=0A=
			return from.map(function(value, i){=0A=
				return Math.round(Fx.compute(from[i], to[i], delta));=0A=
			});=0A=
		},=0A=
		serve: function(value){=0A=
			return value.map(Number);=0A=
		}=0A=
	},=0A=
=0A=
	Number: {=0A=
		parse: parseFloat,=0A=
		compute: Fx.compute,=0A=
		serve: function(value, unit){=0A=
			return (unit) ? value + unit : value;=0A=
		}=0A=
	},=0A=
=0A=
	String: {=0A=
		parse: $lambda(false),=0A=
		compute: $arguments(1),=0A=
		serve: $arguments(0)=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.Tween.js=0A=
	Formerly Fx.Style, effect to transition any CSS property for an element.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Fx.Tween =3D new Class({=0A=
=0A=
	Extends: Fx.CSS,=0A=
=0A=
	initialize: function(element, options){=0A=
		this.element =3D this.subject =3D $(element);=0A=
		this.parent(options);=0A=
	},=0A=
=0A=
	set: function(property, now){=0A=
		if (arguments.length =3D=3D 1){=0A=
			now =3D property;=0A=
			property =3D this.property || this.options.property;=0A=
		}=0A=
		this.render(this.element, property, now, this.options.unit);=0A=
		return this;=0A=
	},=0A=
=0A=
	start: function(property, from, to){=0A=
		if (!this.check(property, from, to)) return this;=0A=
		var args =3D Array.flatten(arguments);=0A=
		this.property =3D this.options.property || args.shift();=0A=
		var parsed =3D this.prepare(this.element, this.property, args);=0A=
		return this.parent(parsed.from, parsed.to);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Properties.tween =3D {=0A=
=0A=
	set: function(options){=0A=
		var tween =3D this.retrieve('tween');=0A=
		if (tween) tween.cancel();=0A=
		return this.eliminate('tween').store('tween:options', $extend({link: =
'cancel'}, options));=0A=
	},=0A=
=0A=
	get: function(options){=0A=
		if (options || !this.retrieve('tween')){=0A=
			if (options || !this.retrieve('tween:options')) this.set('tween', =
options);=0A=
			this.store('tween', new Fx.Tween(this, =
this.retrieve('tween:options')));=0A=
		}=0A=
		return this.retrieve('tween');=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.implement({=0A=
=0A=
	tween: function(property, from, to){=0A=
		this.get('tween').start(arguments);=0A=
		return this;=0A=
	},=0A=
=0A=
	fade: function(how){=0A=
		var fade =3D this.get('tween'), o =3D 'opacity', toggle;=0A=
		how =3D $pick(how, 'toggle');=0A=
		switch (how){=0A=
			case 'in': fade.start(o, 1); break;=0A=
			case 'out': fade.start(o, 0); break;=0A=
			case 'show': fade.set(o, 1); break;=0A=
			case 'hide': fade.set(o, 0); break;=0A=
			case 'toggle':=0A=
				var flag =3D this.retrieve('fade:flag', this.get('opacity') =3D=3D =
1);=0A=
				fade.start(o, (flag) ? 0 : 1);=0A=
				this.store('fade:flag', !flag);=0A=
				toggle =3D true;=0A=
			break;=0A=
			default: fade.start(o, arguments);=0A=
		}=0A=
		if (!toggle) this.eliminate('fade:flag');=0A=
		return this;=0A=
	},=0A=
=0A=
	highlight: function(start, end){=0A=
		if (!end){=0A=
			end =3D this.retrieve('highlight:original', =
this.getStyle('background-color'));=0A=
			end =3D (end =3D=3D 'transparent') ? '#fff' : end;=0A=
		}=0A=
		var tween =3D this.get('tween');=0A=
		tween.start('background-color', start || '#ffff88', =
end).chain(function(){=0A=
			this.setStyle('background-color', =
this.retrieve('highlight:original'));=0A=
			tween.callChain();=0A=
		}.bind(this));=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.Morph.js=0A=
	Formerly Fx.Styles, effect to transition any number of CSS properties =
for an element using an object of rules, or CSS based selector rules.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Fx.Morph =3D new Class({=0A=
=0A=
	Extends: Fx.CSS,=0A=
=0A=
	initialize: function(element, options){=0A=
		this.element =3D this.subject =3D $(element);=0A=
		this.parent(options);=0A=
	},=0A=
=0A=
	set: function(now){=0A=
		if (typeof now =3D=3D 'string') now =3D this.search(now);=0A=
		for (var p in now) this.render(this.element, p, now[p], =
this.options.unit);=0A=
		return this;=0A=
	},=0A=
=0A=
	compute: function(from, to, delta){=0A=
		var now =3D {};=0A=
		for (var p in from) now[p] =3D this.parent(from[p], to[p], delta);=0A=
		return now;=0A=
	},=0A=
=0A=
	start: function(properties){=0A=
		if (!this.check(properties)) return this;=0A=
		if (typeof properties =3D=3D 'string') properties =3D =
this.search(properties);=0A=
		var from =3D {}, to =3D {};=0A=
		for (var p in properties){=0A=
			var parsed =3D this.prepare(this.element, p, properties[p]);=0A=
			from[p] =3D parsed.from;=0A=
			to[p] =3D parsed.to;=0A=
		}=0A=
		return this.parent(from, to);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Properties.morph =3D {=0A=
=0A=
	set: function(options){=0A=
		var morph =3D this.retrieve('morph');=0A=
		if (morph) morph.cancel();=0A=
		return this.eliminate('morph').store('morph:options', $extend({link: =
'cancel'}, options));=0A=
	},=0A=
=0A=
	get: function(options){=0A=
		if (options || !this.retrieve('morph')){=0A=
			if (options || !this.retrieve('morph:options')) this.set('morph', =
options);=0A=
			this.store('morph', new Fx.Morph(this, =
this.retrieve('morph:options')));=0A=
		}=0A=
		return this.retrieve('morph');=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.implement({=0A=
=0A=
	morph: function(props){=0A=
		this.get('morph').start(props);=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.Transitions.js=0A=
	Contains a set of advanced transitions to be used with any of the Fx =
Classes.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
=0A=
Credits:=0A=
	Easing Equations by Robert Penner, =
<http://www.robertpenner.com/easing/>, modified and optimized to be used =
with MooTools.=0A=
*/=0A=
=0A=
Fx.implement({=0A=
=0A=
	getTransition: function(){=0A=
		var trans =3D this.options.transition || Fx.Transitions.Sine.easeInOut;=0A=
		if (typeof trans =3D=3D 'string'){=0A=
			var data =3D trans.split(':');=0A=
			trans =3D Fx.Transitions;=0A=
			trans =3D trans[data[0]] || trans[data[0].capitalize()];=0A=
			if (data[1]) trans =3D trans['ease' + data[1].capitalize() + (data[2] =
? data[2].capitalize() : '')];=0A=
		}=0A=
		return trans;=0A=
	}=0A=
=0A=
});=0A=
=0A=
Fx.Transition =3D function(transition, params){=0A=
	params =3D $splat(params);=0A=
	return $extend(transition, {=0A=
		easeIn: function(pos){=0A=
			return transition(pos, params);=0A=
		},=0A=
		easeOut: function(pos){=0A=
			return 1 - transition(1 - pos, params);=0A=
		},=0A=
		easeInOut: function(pos){=0A=
			return (pos <=3D 0.5) ? transition(2 * pos, params) / 2 : (2 - =
transition(2 * (1 - pos), params)) / 2;=0A=
		}=0A=
	});=0A=
};=0A=
=0A=
Fx.Transitions =3D new Hash({=0A=
=0A=
	linear: $arguments(0)=0A=
=0A=
});=0A=
=0A=
Fx.Transitions.extend =3D function(transitions){=0A=
	for (var transition in transitions) Fx.Transitions[transition] =3D new =
Fx.Transition(transitions[transition]);=0A=
};=0A=
=0A=
Fx.Transitions.extend({=0A=
=0A=
	Pow: function(p, x){=0A=
		return Math.pow(p, x[0] || 6);=0A=
	},=0A=
=0A=
	Expo: function(p){=0A=
		return Math.pow(2, 8 * (p - 1));=0A=
	},=0A=
=0A=
	Circ: function(p){=0A=
		return 1 - Math.sin(Math.acos(p));=0A=
	},=0A=
=0A=
	Sine: function(p){=0A=
		return 1 - Math.sin((1 - p) * Math.PI / 2);=0A=
	},=0A=
=0A=
	Back: function(p, x){=0A=
		x =3D x[0] || 1.618;=0A=
		return Math.pow(p, 2) * ((x + 1) * p - x);=0A=
	},=0A=
=0A=
	Bounce: function(p){=0A=
		var value;=0A=
		for (var a =3D 0, b =3D 1; 1; a +=3D b, b /=3D 2){=0A=
			if (p >=3D (7 - 4 * a) / 11){=0A=
				value =3D b * b - Math.pow((11 - 6 * a - 11 * p) / 4, 2);=0A=
				break;=0A=
			}=0A=
		}=0A=
		return value;=0A=
	},=0A=
=0A=
	Elastic: function(p, x){=0A=
		return Math.pow(2, 10 * --p) * Math.cos(20 * p * Math.PI * (x[0] || 1) =
/ 3);=0A=
	}=0A=
=0A=
});=0A=
=0A=
['Quad', 'Cubic', 'Quart', 'Quint'].each(function(transition, i){=0A=
	Fx.Transitions[transition] =3D new Fx.Transition(function(p){=0A=
		return Math.pow(p, [i + 2]);=0A=
	});=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Request.js=0A=
	Powerful all purpose Request Class. Uses XMLHTTPRequest.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
var Request =3D new Class({=0A=
=0A=
	Implements: [Chain, Events, Options],=0A=
=0A=
	options: {/*=0A=
		onRequest: $empty,=0A=
		onComplete: $empty,=0A=
		onCancel: $empty,=0A=
		onSuccess: $empty,=0A=
		onFailure: $empty,=0A=
		onException: $empty,*/=0A=
		url: '',=0A=
		data: '',=0A=
		headers: {=0A=
			'X-Requested-With': 'XMLHttpRequest',=0A=
			'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'=0A=
		},=0A=
		async: true,=0A=
		format: false,=0A=
		method: 'post',=0A=
		link: 'ignore',=0A=
		isSuccess: null,=0A=
		emulation: true,=0A=
		urlEncoded: true,=0A=
		encoding: 'utf-8',=0A=
		evalScripts: false,=0A=
		evalResponse: false,=0A=
		noCache: false=0A=
	},=0A=
=0A=
	initialize: function(options){=0A=
		this.xhr =3D new Browser.Request();=0A=
		this.setOptions(options);=0A=
		this.options.isSuccess =3D this.options.isSuccess || this.isSuccess;=0A=
		this.headers =3D new Hash(this.options.headers);=0A=
	},=0A=
=0A=
	onStateChange: function(){=0A=
		if (this.xhr.readyState !=3D 4 || !this.running) return;=0A=
		this.running =3D false;=0A=
		this.status =3D 0;=0A=
		$try(function(){=0A=
			this.status =3D this.xhr.status;=0A=
		}.bind(this));=0A=
		if (this.options.isSuccess.call(this, this.status)){=0A=
			this.response =3D {text: this.xhr.responseText, xml: =
this.xhr.responseXML};=0A=
			this.success(this.response.text, this.response.xml);=0A=
		} else {=0A=
			this.response =3D {text: null, xml: null};=0A=
			this.failure();=0A=
		}=0A=
		this.xhr.onreadystatechange =3D $empty;=0A=
	},=0A=
=0A=
	isSuccess: function(){=0A=
		return ((this.status >=3D 200) && (this.status < 300));=0A=
	},=0A=
=0A=
	processScripts: function(text){=0A=
		if (this.options.evalResponse || =
(/(ecma|java)script/).test(this.getHeader('Content-type'))) return =
$exec(text);=0A=
		return text.stripScripts(this.options.evalScripts);=0A=
	},=0A=
=0A=
	success: function(text, xml){=0A=
		this.onSuccess(this.processScripts(text), xml);=0A=
	},=0A=
=0A=
	onSuccess: function(){=0A=
		this.fireEvent('complete', arguments).fireEvent('success', =
arguments).callChain();=0A=
	},=0A=
=0A=
	failure: function(){=0A=
		this.onFailure();=0A=
	},=0A=
=0A=
	onFailure: function(){=0A=
		this.fireEvent('complete').fireEvent('failure', this.xhr);=0A=
	},=0A=
=0A=
	setHeader: function(name, value){=0A=
		this.headers.set(name, value);=0A=
		return this;=0A=
	},=0A=
=0A=
	getHeader: function(name){=0A=
		return $try(function(){=0A=
			return this.xhr.getResponseHeader(name);=0A=
		}.bind(this));=0A=
	},=0A=
=0A=
	check: function(){=0A=
		if (!this.running) return true;=0A=
		switch (this.options.link){=0A=
			case 'cancel': this.cancel(); return true;=0A=
			case 'chain': this.chain(this.caller.bind(this, arguments)); return =
false;=0A=
		}=0A=
		return false;=0A=
	},=0A=
=0A=
	send: function(options){=0A=
		if (!this.check(options)) return this;=0A=
		this.running =3D true;=0A=
=0A=
		var type =3D $type(options);=0A=
		if (type =3D=3D 'string' || type =3D=3D 'element') options =3D {data: =
options};=0A=
=0A=
		var old =3D this.options;=0A=
		options =3D $extend({data: old.data, url: old.url, method: =
old.method}, options);=0A=
		var data =3D options.data, url =3D options.url, method =3D =
options.method;=0A=
=0A=
		switch ($type(data)){=0A=
			case 'element': data =3D $(data).toQueryString(); break;=0A=
			case 'object': case 'hash': data =3D Hash.toQueryString(data);=0A=
		}=0A=
=0A=
		if (this.options.format){=0A=
			var format =3D 'format=3D' + this.options.format;=0A=
			data =3D (data) ? format + '&' + data : format;=0A=
		}=0A=
=0A=
		if (this.options.emulation && ['put', 'delete'].contains(method)){=0A=
			var _method =3D '_method=3D' + method;=0A=
			data =3D (data) ? _method + '&' + data : _method;=0A=
			method =3D 'post';=0A=
		}=0A=
=0A=
		if (this.options.urlEncoded && method =3D=3D 'post'){=0A=
			var encoding =3D (this.options.encoding) ? '; charset=3D' + =
this.options.encoding : '';=0A=
			this.headers.set('Content-type', 'application/x-www-form-urlencoded' =
+ encoding);=0A=
		}=0A=
=0A=
		if(this.options.noCache) {=0A=
			var noCache =3D "noCache=3D" + new Date().getTime();=0A=
			data =3D (data) ? noCache + '&' + data : noCache;=0A=
		}=0A=
=0A=
=0A=
		if (data && method =3D=3D 'get'){=0A=
			url =3D url + (url.contains('?') ? '&' : '?') + data;=0A=
			data =3D null;=0A=
		}=0A=
=0A=
=0A=
		this.xhr.open(method.toUpperCase(), url, this.options.async);=0A=
=0A=
		this.xhr.onreadystatechange =3D this.onStateChange.bind(this);=0A=
=0A=
		this.headers.each(function(value, key){=0A=
			try {=0A=
				this.xhr.setRequestHeader(key, value);=0A=
			} catch (e){=0A=
				this.fireEvent('exception', [key, value]);=0A=
			}=0A=
		}, this);=0A=
=0A=
		this.fireEvent('request');=0A=
		this.xhr.send(data);=0A=
		if (!this.options.async) this.onStateChange();=0A=
		return this;=0A=
	},=0A=
=0A=
	cancel: function(){=0A=
		if (!this.running) return this;=0A=
		this.running =3D false;=0A=
		this.xhr.abort();=0A=
		this.xhr.onreadystatechange =3D $empty;=0A=
		this.xhr =3D new Browser.Request();=0A=
		this.fireEvent('cancel');=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
(function(){=0A=
=0A=
var methods =3D {};=0A=
['get', 'post', 'put', 'delete', 'GET', 'POST', 'PUT', =
'DELETE'].each(function(method){=0A=
	methods[method] =3D function(){=0A=
		var params =3D Array.link(arguments, {url: String.type, data: =
$defined});=0A=
		return this.send($extend(params, {method: method.toLowerCase()}));=0A=
	};=0A=
});=0A=
=0A=
Request.implement(methods);=0A=
=0A=
})();=0A=
=0A=
/*=0A=
Script: Request.HTML.js=0A=
	Extends the basic Request Class with additional methods for interacting =
with HTML responses.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Request.HTML =3D new Class({=0A=
=0A=
	Extends: Request,=0A=
=0A=
	options: {=0A=
		update: false,=0A=
		append: false,=0A=
		evalScripts: true,=0A=
		filter: false=0A=
	},=0A=
=0A=
	processHTML: function(text){=0A=
		var match =3D text.match(/<body[^>]*>([\s\S]*?)<\/body>/i);=0A=
		text =3D (match) ? match[1] : text;=0A=
=0A=
		var container =3D new Element('div');=0A=
=0A=
		return $try(function(){=0A=
			var root =3D '<root>' + text + '</root>', doc;=0A=
			if (Browser.Engine.trident){=0A=
				doc =3D new ActiveXObject('Microsoft.XMLDOM');=0A=
				doc.async =3D false;=0A=
				doc.loadXML(root);=0A=
			} else {=0A=
				doc =3D new DOMParser().parseFromString(root, 'text/xml');=0A=
			}=0A=
			root =3D doc.getElementsByTagName('root')[0];=0A=
			if (!root) return;=0A=
			for (var i =3D 0, k =3D root.childNodes.length; i < k; i++){=0A=
				var child =3D Element.clone(root.childNodes[i], true, true);=0A=
				if (child) container.grab(child);=0A=
			}=0A=
			return container;=0A=
		}) || container.set('html', text);=0A=
	},=0A=
=0A=
	success: function(text){=0A=
		var options =3D this.options, response =3D this.response;=0A=
=0A=
		response.html =3D text.stripScripts(function(script){=0A=
			response.javascript =3D script;=0A=
		});=0A=
=0A=
		var temp =3D this.processHTML(response.html);=0A=
=0A=
		response.tree =3D temp.childNodes;=0A=
		response.elements =3D temp.getElements('*');=0A=
=0A=
		if (options.filter) response.tree =3D =
response.elements.filter(options.filter);=0A=
		if (options.update) $(options.update).empty().set('html', =
response.html);=0A=
		else if (options.append) $(options.append).adopt(temp.getChildren());=0A=
		if (options.evalScripts) $exec(response.javascript);=0A=
=0A=
		this.onSuccess(response.tree, response.elements, response.html, =
response.javascript);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Properties.send =3D {=0A=
=0A=
	set: function(options){=0A=
		var send =3D this.retrieve('send');=0A=
		if (send) send.cancel();=0A=
		return this.eliminate('send').store('send:options', $extend({=0A=
			data: this, link: 'cancel', method: this.get('method') || 'post', =
url: this.get('action')=0A=
		}, options));=0A=
	},=0A=
=0A=
	get: function(options){=0A=
		if (options || !this.retrieve('send')){=0A=
			if (options || !this.retrieve('send:options')) this.set('send', =
options);=0A=
			this.store('send', new Request(this.retrieve('send:options')));=0A=
		}=0A=
		return this.retrieve('send');=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.Properties.load =3D {=0A=
=0A=
	set: function(options){=0A=
		var load =3D this.retrieve('load');=0A=
		if (load) load.cancel();=0A=
		return this.eliminate('load').store('load:options', $extend({data: =
this, link: 'cancel', update: this, method: 'get'}, options));=0A=
	},=0A=
=0A=
	get: function(options){=0A=
		if (options || ! this.retrieve('load')){=0A=
			if (options || !this.retrieve('load:options')) this.set('load', =
options);=0A=
			this.store('load', new Request.HTML(this.retrieve('load:options')));=0A=
		}=0A=
		return this.retrieve('load');=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.implement({=0A=
=0A=
	send: function(url){=0A=
		var sender =3D this.get('send');=0A=
		sender.send({data: this, url: url || sender.options.url});=0A=
		return this;=0A=
	},=0A=
=0A=
	load: function(){=0A=
		this.get('load').send(Array.link(arguments, {data: Object.type, url: =
String.type}));=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Request.JSON.js=0A=
	Extends the basic Request Class with additional methods for sending and =
receiving JSON data.=0A=
=0A=
License:=0A=
	MIT-style license.=0A=
*/=0A=
=0A=
Request.JSON =3D new Class({=0A=
=0A=
	Extends: Request,=0A=
=0A=
	options: {=0A=
		secure: true=0A=
	},=0A=
=0A=
	initialize: function(options){=0A=
		this.parent(options);=0A=
		this.headers.extend({'Accept': 'application/json', 'X-Request': =
'JSON'});=0A=
	},=0A=
=0A=
	success: function(text){=0A=
		this.response.json =3D JSON.decode(text, this.options.secure);=0A=
		this.onSuccess(this.response.json, text);=0A=
	}=0A=
=0A=
});=0A=
MooTools.More =3D {=0A=
	'version': '1.2.2.1'=0A=
};=0A=
=0A=
/*=0A=
Script: Class.Binds.js=0A=
	Automagically binds specified methods in a class to the instance of the =
class.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
*/=0A=
=0A=
Class.Mutators.Binds =3D function(binds){=0A=
    return binds;=0A=
};=0A=
=0A=
Class.Mutators.initialize =3D function(initialize){=0A=
	return function(){=0A=
		$splat(this.Binds).each(function(name){=0A=
			var original =3D this[name];=0A=
			if (original) this[name] =3D original.bind(this);=0A=
		}, this);=0A=
		return initialize.apply(this, arguments);=0A=
	};=0A=
};=0A=
=0A=
/*=0A=
Script: Class.Occlude.js=0A=
	Prevents a class from being applied to a DOM element twice.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
*/=0A=
=0A=
Class.Occlude =3D new Class({=0A=
=0A=
	occlude: function(property, element){=0A=
		element =3D $(element || this.element);=0A=
		var instance =3D element.retrieve(property || this.property);=0A=
		if (instance && !$defined(this.occluded)){=0A=
			this.occluded =3D instance;=0A=
		} else {=0A=
			this.occluded =3D false;=0A=
			element.store(property || this.property, this);=0A=
		}=0A=
		return this.occluded;=0A=
	}=0A=
=0A=
});=0A=
=0A=
/*=0A=
Script: Element.Forms.js=0A=
	Extends the Element native object to include methods useful in managing =
inputs.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
=0A=
*/=0A=
Element.implement({=0A=
=0A=
	tidy: function(){=0A=
		this.set('value', this.get('value').tidy());=0A=
	},=0A=
=0A=
	getTextInRange: function(start, end){=0A=
		return this.get('value').substring(start, end);=0A=
	},=0A=
=0A=
	getSelectedText: function(){=0A=
		if (document.selection && document.selection.createRange) return =
document.selection.createRange().text;=0A=
		return this.getTextInRange(this.getSelectionStart(), =
this.getSelectionEnd());=0A=
	},=0A=
=0A=
	getSelectedRange: function() {=0A=
		if ($defined(this.selectionStart)) return {start: this.selectionStart, =
end: this.selectionEnd};=0A=
		var pos =3D {start: 0, end: 0};=0A=
		var range =3D this.getDocument().selection.createRange();=0A=
		if (!range || range.parentElement() !=3D this) return pos;=0A=
		var dup =3D range.duplicate();=0A=
		if (this.type =3D=3D 'text') {=0A=
			pos.start =3D 0 - dup.moveStart('character', -100000);=0A=
			pos.end =3D pos.start + range.text.length;=0A=
		} else {=0A=
			var value =3D this.get('value');=0A=
			var offset =3D value.length - value.match(/[\n\r]*$/)[0].length;=0A=
			dup.moveToElementText(this);=0A=
			dup.setEndPoint('StartToEnd', range);=0A=
			pos.end =3D offset - dup.text.length;=0A=
			dup.setEndPoint('StartToStart', range);=0A=
			pos.start =3D offset - dup.text.length;=0A=
		}=0A=
		return pos;=0A=
	},=0A=
=0A=
	getSelectionStart: function(){=0A=
		return this.getSelectedRange().start;=0A=
	},=0A=
=0A=
	getSelectionEnd: function(){=0A=
		return this.getSelectedRange().end;=0A=
	},=0A=
=0A=
	setCaretPosition: function(pos){=0A=
		if (pos =3D=3D 'end') pos =3D this.get('value').length;=0A=
		this.selectRange(pos, pos);=0A=
		return this;=0A=
	},=0A=
=0A=
	getCaretPosition: function(){=0A=
		return this.getSelectedRange().start;=0A=
	},=0A=
=0A=
	selectRange: function(start, end){=0A=
		if (this.createTextRange){=0A=
			var value =3D this.get('value');=0A=
			var diff =3D value.substr(start, end - start).replace(/\r/g, =
'').length;=0A=
			start =3D value.substr(0, start).replace(/\r/g, '').length;=0A=
			var range =3D this.createTextRange();=0A=
			range.collapse(true);=0A=
			range.moveEnd('character', start + diff);=0A=
			range.moveStart('character', start);=0A=
			range.select();=0A=
		} else {=0A=
			this.focus();=0A=
			this.setSelectionRange(start, end);=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	insertAtCursor: function(value, select){=0A=
		var pos =3D this.getSelectedRange();=0A=
		var text =3D this.get('value');=0A=
		this.set('value', text.substring(0, pos.start) + value + =
text.substring(pos.end, text.length));=0A=
		if ($pick(select, true)) this.selectRange(pos.start, pos.start + =
value.length);=0A=
		else this.setCaretPosition(pos.start + value.length);=0A=
		return this;=0A=
	},=0A=
=0A=
	insertAroundCursor: function(options, select){=0A=
		options =3D $extend({=0A=
			before: '',=0A=
			defaultMiddle: '',=0A=
			after: ''=0A=
		}, options);=0A=
		var value =3D this.getSelectedText() || options.defaultMiddle;=0A=
		var pos =3D this.getSelectedRange();=0A=
		var text =3D this.get('value');=0A=
		if (pos.start =3D=3D pos.end){=0A=
			this.set('value', text.substring(0, pos.start) + options.before + =
value + options.after + text.substring(pos.end, text.length));=0A=
			this.selectRange(pos.start + options.before.length, pos.end + =
options.before.length + value.length);=0A=
		} else {=0A=
			var current =3D text.substring(pos.start, pos.end);=0A=
			this.set('value', text.substring(0, pos.start) + options.before + =
current + options.after + text.substring(pos.end, text.length));=0A=
			var selStart =3D pos.start + options.before.length;=0A=
			if ($pick(select, true)) this.selectRange(selStart, selStart + =
current.length);=0A=
			else this.setCaretPosition(selStart + text.length);=0A=
		}=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
/*=0A=
Script: Element.Measure.js=0A=
	Extends the Element native object to include methods useful in =
measuring dimensions.=0A=
=0A=
	Element.measure / .expose methods by Daniel Steigerwald=0A=
	License: MIT-style license.=0A=
	Copyright: Copyright (c) 2008 Daniel Steigerwald, daniel.steigerwald.cz=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
=0A=
*/=0A=
=0A=
Element.implement({=0A=
=0A=
	measure: function(fn){=0A=
		var vis =3D function(el) {=0A=
			return !!(!el || el.offsetHeight || el.offsetWidth);=0A=
		};=0A=
		if (vis(this)) return fn.apply(this);=0A=
		var parent =3D this.getParent(),=0A=
			toMeasure =3D [], =0A=
			restorers =3D [];=0A=
		while (!vis(parent) && parent !=3D document.body) {=0A=
			toMeasure.push(parent.expose());=0A=
			parent =3D parent.getParent();=0A=
		}=0A=
		var restore =3D this.expose();=0A=
		var result =3D fn.apply(this);=0A=
		restore();=0A=
		toMeasure.each(function(restore){=0A=
			restore();=0A=
		});=0A=
		return result;=0A=
	},=0A=
=0A=
	expose: function(){=0A=
		if (this.getStyle('display') !=3D 'none') return $empty;=0A=
		var before =3D this.getStyles('display', 'position', 'visibility');=0A=
		return this.setStyles({=0A=
			display: 'block',=0A=
			position: 'absolute',=0A=
			visibility: 'hidden'=0A=
		}).setStyles.pass(before, this);=0A=
	},=0A=
=0A=
	getDimensions: function(options){=0A=
		options =3D $merge({computeSize: false},options);=0A=
		var dim =3D {};=0A=
		var getSize =3D function(el, options){=0A=
			return (options.computeSize)?el.getComputedSize(options):el.getSize();=0A=
		};=0A=
		if (this.getStyle('display') =3D=3D 'none'){=0A=
			dim =3D this.measure(function(){=0A=
				return getSize(this, options);=0A=
			});=0A=
		} else {=0A=
			try { //safari sometimes crashes here, so catch it=0A=
				dim =3D getSize(this, options);=0A=
			}catch(e){}=0A=
		}=0A=
		return $chk(dim.x) ? $extend(dim, {width: dim.x, height: dim.y}) : =
$extend(dim, {x: dim.width, y: dim.height});=0A=
	},=0A=
=0A=
	getComputedSize: function(options){=0A=
		options =3D $merge({=0A=
			styles: ['padding','border'],=0A=
			plains: {=0A=
				height: ['top','bottom'],=0A=
				width: ['left','right']=0A=
			},=0A=
			mode: 'both'=0A=
		}, options);=0A=
		var size =3D {width: 0,height: 0};=0A=
		switch (options.mode){=0A=
			case 'vertical':=0A=
				delete size.width;=0A=
				delete options.plains.width;=0A=
				break;=0A=
			case 'horizontal':=0A=
				delete size.height;=0A=
				delete options.plains.height;=0A=
				break;=0A=
		}=0A=
		var getStyles =3D [];=0A=
		//this function might be useful in other places; perhaps it should be =
outside this function?=0A=
		$each(options.plains, function(plain, key){=0A=
			plain.each(function(edge){=0A=
				options.styles.each(function(style){=0A=
					getStyles.push((style =3D=3D 'border') ? style + '-' + edge + '-' + =
'width' : style + '-' + edge);=0A=
				});=0A=
			});=0A=
		});=0A=
		var styles =3D {};=0A=
		getStyles.each(function(style){ styles[style] =3D =
this.getComputedStyle(style); }, this);=0A=
		var subtracted =3D [];=0A=
		$each(options.plains, function(plain, key){ //keys: width, height, =
plains: ['left', 'right'], ['top','bottom']=0A=
			var capitalized =3D key.capitalize();=0A=
			size['total' + capitalized] =3D 0;=0A=
			size['computed' + capitalized] =3D 0;=0A=
			plain.each(function(edge){ //top, left, right, bottom=0A=
				size['computed' + edge.capitalize()] =3D 0;=0A=
				getStyles.each(function(style, i){ //padding, border, etc.=0A=
					//'padding-left'.test('left') size['totalWidth'] =3D size['width'] =
+ [padding-left]=0A=
					if (style.test(edge)){=0A=
						styles[style] =3D styles[style].toInt() || 0; =
//styles['padding-left'] =3D 5;=0A=
						size['total' + capitalized] =3D size['total' + capitalized] + =
styles[style];=0A=
						size['computed' + edge.capitalize()] =3D size['computed' + =
edge.capitalize()] + styles[style];=0A=
					}=0A=
					//if width !=3D width (so, padding-left, for instance), then =
subtract that from the total=0A=
					if (style.test(edge) && key !=3D style &&=0A=
						(style.test('border') || style.test('padding')) && =
!subtracted.contains(style)){=0A=
						subtracted.push(style);=0A=
						size['computed' + capitalized] =3D size['computed' + =
capitalized]-styles[style];=0A=
					}=0A=
				});=0A=
			});=0A=
		});=0A=
=0A=
		['Width', 'Height'].each(function(value){=0A=
			var lower =3D value.toLowerCase();=0A=
			if(!$chk(size[lower])) return;=0A=
=0A=
			size[lower] =3D size[lower] + this['offset' + value] + =
size['computed' + value];=0A=
			size['total' + value] =3D size[lower] + size['total' + value];=0A=
			delete size['computed' + value];=0A=
		}, this);=0A=
=0A=
		return $extend(styles, size);=0A=
	}=0A=
=0A=
});=0A=
=0A=
/*=0A=
Script: Element.Pin.js=0A=
	Extends the Element native object to include the pin method useful for =
fixed positioning for elements.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
*/=0A=
=0A=
(function(){=0A=
	var supportsPositionFixed =3D false;=0A=
	window.addEvent('domready', function(){=0A=
		var test =3D new Element('div').setStyles({=0A=
			position: 'fixed',=0A=
			top: 0,=0A=
			right: 0=0A=
		}).inject(document.body);=0A=
		supportsPositionFixed =3D (test.offsetTop =3D=3D=3D 0);=0A=
		test.dispose();=0A=
	});=0A=
=0A=
	Element.implement({=0A=
=0A=
		pin: function(enable){=0A=
			if (this.getStyle('display') =3D=3D 'none') return null;=0A=
			=0A=
			var p;=0A=
			if (enable !=3D=3D false){=0A=
				p =3D this.getPosition();=0A=
				if (!this.retrieve('pinned')){=0A=
					var pos =3D {=0A=
						top: p.y - window.getScroll().y,=0A=
						left: p.x - window.getScroll().x=0A=
					};=0A=
					if (supportsPositionFixed){=0A=
						this.setStyle('position', 'fixed').setStyles(pos);=0A=
					} else {=0A=
						this.store('pinnedByJS', true);=0A=
						this.setStyles({=0A=
							position: 'absolute',=0A=
							top: p.y,=0A=
							left: p.x=0A=
						});=0A=
						this.store('scrollFixer', (function(){=0A=
							if (this.retrieve('pinned'))=0A=
								this.setStyles({=0A=
									top: pos.top.toInt() + window.getScroll().y,=0A=
									left: pos.left.toInt() + window.getScroll().x=0A=
								});=0A=
						}).bind(this));=0A=
						window.addEvent('scroll', this.retrieve('scrollFixer'));=0A=
					}=0A=
					this.store('pinned', true);=0A=
				}=0A=
			} else {=0A=
				var op;=0A=
				if (!Browser.Engine.trident){=0A=
					if (this.getParent().getComputedStyle('position') !=3D 'static') op =
=3D this.getParent();=0A=
					else op =3D this.getParent().getOffsetParent();=0A=
				}=0A=
				p =3D this.getPosition(op);=0A=
				this.store('pinned', false);=0A=
				var reposition;=0A=
				if (supportsPositionFixed && !this.retrieve('pinnedByJS')){=0A=
					reposition =3D {=0A=
						top: p.y + window.getScroll().y,=0A=
						left: p.x + window.getScroll().x=0A=
					};=0A=
				} else {=0A=
					this.store('pinnedByJS', false);=0A=
					window.removeEvent('scroll', this.retrieve('scrollFixer'));=0A=
					reposition =3D {=0A=
						top: p.y,=0A=
						left: p.x=0A=
					};=0A=
				}=0A=
				this.setStyles($merge(reposition, {position: 'absolute'}));=0A=
			}=0A=
			return this.addClass('isPinned');=0A=
		},=0A=
=0A=
		unpin: function(){=0A=
			return this.pin(false).removeClass('isPinned');=0A=
		},=0A=
=0A=
		togglepin: function(){=0A=
			this.pin(!this.retrieve('pinned'));=0A=
		}=0A=
=0A=
	});=0A=
=0A=
})();=0A=
=0A=
/*=0A=
Script: Element.Position.js=0A=
	Extends the Element native object to include methods useful positioning =
elements relative to others.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
*/=0A=
=0A=
(function(){=0A=
=0A=
var original =3D Element.prototype.position;=0A=
=0A=
Element.implement({=0A=
=0A=
	position: function(options){=0A=
		//call original position if the options are x/y values=0A=
		if (options && ($defined(options.x) || $defined(options.y))) return =
original ? original.apply(this, arguments) : this;=0A=
		$each(options||{}, function(v, k){ if (!$defined(v)) delete =
options[k]; });=0A=
		options =3D $merge({=0A=
			relativeTo: document.body,=0A=
			position: {=0A=
				x: 'center', //left, center, right=0A=
				y: 'center' //top, center, bottom=0A=
			},=0A=
			edge: false,=0A=
			offset: {x: 0, y: 0},=0A=
			returnPos: false,=0A=
			relFixedPosition: false,=0A=
			ignoreMargins: false,=0A=
			allowNegative: false=0A=
		}, options);=0A=
		//compute the offset of the parent positioned element if this element =
is in one=0A=
		var parentOffset =3D {x: 0, y: 0};=0A=
		var parentPositioned =3D false;=0A=
		/* dollar around getOffsetParent should not be necessary, but as it =
does not return=0A=
		 * a mootools extended element in IE, an error occurs on the call to =
expose. See:=0A=
		 * =
http://mootools.lighthouseapp.com/projects/2706/tickets/333-element-getof=
fsetparent-inconsistency-between-ie-and-other-browsers */=0A=
		var offsetParent =3D this.measure(function(){=0A=
			return $(this.getOffsetParent());=0A=
		});=0A=
		if (offsetParent && offsetParent !=3D this.getDocument().body){=0A=
			parentOffset =3D offsetParent.measure(function(){=0A=
				return this.getPosition();=0A=
			});=0A=
			parentPositioned =3D true;=0A=
			options.offset.x =3D options.offset.x - parentOffset.x;=0A=
			options.offset.y =3D options.offset.y - parentOffset.y;=0A=
		}=0A=
		//upperRight, bottomRight, centerRight, upperLeft, bottomLeft, =
centerLeft=0A=
		//topRight, topLeft, centerTop, centerBottom, center=0A=
		var fixValue =3D function(option){=0A=
			if ($type(option) !=3D 'string') return option;=0A=
			option =3D option.toLowerCase();=0A=
			var val =3D {};=0A=
			if (option.test('left')) val.x =3D 'left';=0A=
			else if (option.test('right')) val.x =3D 'right';=0A=
			else val.x =3D 'center';=0A=
			if (option.test('upper') || option.test('top')) val.y =3D 'top';=0A=
			else if (option.test('bottom')) val.y =3D 'bottom';=0A=
			else val.y =3D 'center';=0A=
			return val;=0A=
		};=0A=
		options.edge =3D fixValue(options.edge);=0A=
		options.position =3D fixValue(options.position);=0A=
		if (!options.edge){=0A=
			if (options.position.x =3D=3D 'center' && options.position.y =3D=3D =
'center') options.edge =3D {x:'center', y:'center'};=0A=
			else options.edge =3D {x:'left', y:'top'};=0A=
		}=0A=
=0A=
		this.setStyle('position', 'absolute');=0A=
		var rel =3D $(options.relativeTo) || document.body;=0A=
		var calc =3D rel =3D=3D document.body ? window.getScroll() : =
rel.getPosition();=0A=
		var top =3D calc.y;=0A=
		var left =3D calc.x;=0A=
=0A=
		if (Browser.Engine.trident){=0A=
			var scrolls =3D rel.getScrolls();=0A=
			top +=3D scrolls.y;=0A=
			left +=3D scrolls.x;=0A=
		}=0A=
=0A=
		var dim =3D this.getDimensions({computeSize: true, styles:['padding', =
'border','margin']});=0A=
		if (options.ignoreMargins){=0A=
			options.offset.x =3D options.offset.x - dim['margin-left'];=0A=
			options.offset.y =3D options.offset.y - dim['margin-top'];=0A=
		}=0A=
		var pos =3D {};=0A=
		var prefY =3D options.offset.y;=0A=
		var prefX =3D options.offset.x;=0A=
		var winSize =3D window.getSize();=0A=
		switch(options.position.x){=0A=
			case 'left':=0A=
				pos.x =3D left + prefX;=0A=
				break;=0A=
			case 'right':=0A=
				pos.x =3D left + prefX + rel.offsetWidth;=0A=
				break;=0A=
			default: //center=0A=
				pos.x =3D left + ((rel =3D=3D document.body ? winSize.x : =
rel.offsetWidth)/2) + prefX;=0A=
				break;=0A=
		}=0A=
		switch(options.position.y){=0A=
			case 'top':=0A=
				pos.y =3D top + prefY;=0A=
				break;=0A=
			case 'bottom':=0A=
				pos.y =3D top + prefY + rel.offsetHeight;=0A=
				break;=0A=
			default: //center=0A=
				pos.y =3D top + ((rel =3D=3D document.body ? winSize.y : =
rel.offsetHeight)/2) + prefY;=0A=
				break;=0A=
		}=0A=
=0A=
		if (options.edge){=0A=
			var edgeOffset =3D {};=0A=
=0A=
			switch(options.edge.x){=0A=
				case 'left':=0A=
					edgeOffset.x =3D 0;=0A=
					break;=0A=
				case 'right':=0A=
					edgeOffset.x =3D -dim.x-dim.computedRight-dim.computedLeft;=0A=
					break;=0A=
				default: //center=0A=
					edgeOffset.x =3D -(dim.x/2);=0A=
					break;=0A=
			}=0A=
			switch(options.edge.y){=0A=
				case 'top':=0A=
					edgeOffset.y =3D 0;=0A=
					break;=0A=
				case 'bottom':=0A=
					edgeOffset.y =3D -dim.y-dim.computedTop-dim.computedBottom;=0A=
					break;=0A=
				default: //center=0A=
					edgeOffset.y =3D -(dim.y/2);=0A=
					break;=0A=
			}=0A=
			pos.x =3D pos.x + edgeOffset.x;=0A=
			pos.y =3D pos.y + edgeOffset.y;=0A=
		}=0A=
		pos =3D {=0A=
			left: ((pos.x >=3D 0 || parentPositioned || options.allowNegative) ? =
pos.x : 0).toInt(),=0A=
			top: ((pos.y >=3D 0 || parentPositioned || options.allowNegative) ? =
pos.y : 0).toInt()=0A=
		};=0A=
		if (rel.getStyle('position') =3D=3D 'fixed' || =
options.relFixedPosition){=0A=
			var winScroll =3D window.getScroll();=0A=
			pos.top =3D pos.top.toInt() + winScroll.y;=0A=
			pos.left =3D pos.left.toInt() + winScroll.x;=0A=
		}=0A=
=0A=
		if (options.returnPos) return pos;=0A=
		else this.setStyles(pos);=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
})();=0A=
=0A=
/*=0A=
Script: Element.Shortcuts.js=0A=
	Extends the Element native object to include some shortcut methods.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
=0A=
*/=0A=
=0A=
Element.implement({=0A=
=0A=
	isDisplayed: function(){=0A=
		return this.getStyle('display') !=3D 'none';=0A=
	},=0A=
=0A=
	toggle: function(){=0A=
		return this[this.isDisplayed() ? 'hide' : 'show']();=0A=
	},=0A=
=0A=
	hide: function(){=0A=
		var d;=0A=
		try {=0A=
			//IE fails here if the element is not in the dom=0A=
			if ('none' !=3D this.getStyle('display')) d =3D =
this.getStyle('display');=0A=
		} catch(e){}=0A=
=0A=
		return this.store('originalDisplay', d || 'block').setStyle('display', =
'none');=0A=
	},=0A=
=0A=
	show: function(display){=0A=
		return this.setStyle('display', display || =
this.retrieve('originalDisplay') || 'block');=0A=
	},=0A=
=0A=
	swapClass: function(remove, add){=0A=
		return this.removeClass(remove).addClass(add);=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.Scroll.js=0A=
	Effect to smoothly scroll any element, including the window.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Valerio Proietti=0A=
*/=0A=
=0A=
Fx.Scroll =3D new Class({=0A=
=0A=
	Extends: Fx,=0A=
=0A=
	options: {=0A=
		offset: {x: 0, y: 0},=0A=
		wheelStops: true=0A=
	},=0A=
=0A=
	initialize: function(element, options){=0A=
		this.element =3D this.subject =3D $(element);=0A=
		this.parent(options);=0A=
		var cancel =3D this.cancel.bind(this, false);=0A=
=0A=
		if ($type(this.element) !=3D 'element') this.element =3D =
$(this.element.getDocument().body);=0A=
=0A=
		var stopper =3D this.element;=0A=
=0A=
		if (this.options.wheelStops){=0A=
			this.addEvent('start', function(){=0A=
				stopper.addEvent('mousewheel', cancel);=0A=
			}, true);=0A=
			this.addEvent('complete', function(){=0A=
				stopper.removeEvent('mousewheel', cancel);=0A=
			}, true);=0A=
		}=0A=
	},=0A=
=0A=
	set: function(){=0A=
		var now =3D Array.flatten(arguments);=0A=
		this.element.scrollTo(now[0], now[1]);=0A=
	},=0A=
=0A=
	compute: function(from, to, delta){=0A=
		return [0, 1].map(function(i){=0A=
			return Fx.compute(from[i], to[i], delta);=0A=
		});=0A=
	},=0A=
=0A=
	start: function(x, y){=0A=
		if (!this.check(x, y)) return this;=0A=
		var offsetSize =3D this.element.getSize(), scrollSize =3D =
this.element.getScrollSize();=0A=
		var scroll =3D this.element.getScroll(), values =3D {x: x, y: y};=0A=
		for (var z in values){=0A=
			var max =3D scrollSize[z] - offsetSize[z];=0A=
			if ($chk(values[z])) values[z] =3D ($type(values[z]) =3D=3D 'number') =
? values[z].limit(0, max) : max;=0A=
			else values[z] =3D scroll[z];=0A=
			values[z] +=3D this.options.offset[z];=0A=
		}=0A=
		return this.parent([scroll.x, scroll.y], [values.x, values.y]);=0A=
	},=0A=
=0A=
	toTop: function(){=0A=
		return this.start(false, 0);=0A=
	},=0A=
=0A=
	toLeft: function(){=0A=
		return this.start(0, false);=0A=
	},=0A=
=0A=
	toRight: function(){=0A=
		return this.start('right', false);=0A=
	},=0A=
=0A=
	toBottom: function(){=0A=
		return this.start(false, 'bottom');=0A=
	},=0A=
=0A=
	toElement: function(el){=0A=
		var position =3D $(el).getPosition(this.element);=0A=
		return this.start(position.x, position.y);=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.Slide.js=0A=
	Effect to slide an element in and out of view.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Valerio Proietti=0A=
*/=0A=
=0A=
Fx.Slide =3D new Class({=0A=
=0A=
	Extends: Fx,=0A=
=0A=
	options: {=0A=
		mode: 'vertical'=0A=
	},=0A=
=0A=
	initialize: function(element, options){=0A=
		this.addEvent('complete', function(){=0A=
			this.open =3D (this.wrapper['offset' + this.layout.capitalize()] !=3D =
0);=0A=
			if (this.open && Browser.Engine.webkit419) =
this.element.dispose().inject(this.wrapper);=0A=
		}, true);=0A=
		this.element =3D this.subject =3D $(element);=0A=
		this.parent(options);=0A=
		var wrapper =3D this.element.retrieve('wrapper');=0A=
		this.wrapper =3D wrapper || new Element('div', {=0A=
			styles: $extend(this.element.getStyles('margin', 'position'), =
{overflow: 'hidden'})=0A=
		}).wraps(this.element);=0A=
		this.element.store('wrapper', this.wrapper).setStyle('margin', 0);=0A=
		this.now =3D [];=0A=
		this.open =3D true;=0A=
	},=0A=
=0A=
	vertical: function(){=0A=
		this.margin =3D 'margin-top';=0A=
		this.layout =3D 'height';=0A=
		this.offset =3D this.element.offsetHeight;=0A=
	},=0A=
=0A=
	horizontal: function(){=0A=
		this.margin =3D 'margin-left';=0A=
		this.layout =3D 'width';=0A=
		this.offset =3D this.element.offsetWidth;=0A=
	},=0A=
=0A=
	set: function(now){=0A=
		this.element.setStyle(this.margin, now[0]);=0A=
		this.wrapper.setStyle(this.layout, now[1]);=0A=
		return this;=0A=
	},=0A=
=0A=
	compute: function(from, to, delta){=0A=
		return [0, 1].map(function(i){=0A=
			return Fx.compute(from[i], to[i], delta);=0A=
		});=0A=
	},=0A=
=0A=
	start: function(how, mode){=0A=
		if (!this.check(how, mode)) return this;=0A=
		this[mode || this.options.mode]();=0A=
		var margin =3D this.element.getStyle(this.margin).toInt();=0A=
		var layout =3D this.wrapper.getStyle(this.layout).toInt();=0A=
		var caseIn =3D [[margin, layout], [0, this.offset]];=0A=
		var caseOut =3D [[margin, layout], [-this.offset, 0]];=0A=
		var start;=0A=
		switch (how){=0A=
			case 'in': start =3D caseIn; break;=0A=
			case 'out': start =3D caseOut; break;=0A=
			case 'toggle': start =3D (layout =3D=3D 0) ? caseIn : caseOut;=0A=
		}=0A=
		return this.parent(start[0], start[1]);=0A=
	},=0A=
=0A=
	slideIn: function(mode){=0A=
		return this.start('in', mode);=0A=
	},=0A=
=0A=
	slideOut: function(mode){=0A=
		return this.start('out', mode);=0A=
	},=0A=
=0A=
	hide: function(mode){=0A=
		this[mode || this.options.mode]();=0A=
		this.open =3D false;=0A=
		return this.set([-this.offset, 0]);=0A=
	},=0A=
=0A=
	show: function(mode){=0A=
		this[mode || this.options.mode]();=0A=
		this.open =3D true;=0A=
		return this.set([0, this.offset]);=0A=
	},=0A=
=0A=
	toggle: function(mode){=0A=
		return this.start('toggle', mode);=0A=
	}=0A=
=0A=
});=0A=
=0A=
Element.Properties.slide =3D {=0A=
=0A=
	set: function(options){=0A=
		var slide =3D this.retrieve('slide');=0A=
		if (slide) slide.cancel();=0A=
		return this.eliminate('slide').store('slide:options', $extend({link: =
'cancel'}, options));=0A=
	},=0A=
=0A=
	get: function(options){=0A=
		if (options || !this.retrieve('slide')){=0A=
			if (options || !this.retrieve('slide:options')) this.set('slide', =
options);=0A=
			this.store('slide', new Fx.Slide(this, =
this.retrieve('slide:options')));=0A=
		}=0A=
		return this.retrieve('slide');=0A=
	}=0A=
=0A=
};=0A=
=0A=
Element.implement({=0A=
=0A=
	slide: function(how, mode){=0A=
		how =3D how || 'toggle';=0A=
		var slide =3D this.get('slide'), toggle;=0A=
		switch (how){=0A=
			case 'hide': slide.hide(mode); break;=0A=
			case 'show': slide.show(mode); break;=0A=
			case 'toggle':=0A=
				var flag =3D this.retrieve('slide:flag', slide.open);=0A=
				slide[flag ? 'slideOut' : 'slideIn'](mode);=0A=
				this.store('slide:flag', !flag);=0A=
				toggle =3D true;=0A=
			break;=0A=
			default: slide.start(how, mode);=0A=
		}=0A=
		if (!toggle) this.eliminate('slide:flag');=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: Fx.SmoothScroll.js=0A=
	Class for creating a smooth scrolling effect to all internal links on =
the page.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Valerio Proietti=0A=
*/=0A=
=0A=
var SmoothScroll =3D Fx.SmoothScroll =3D new Class({=0A=
=0A=
	Extends: Fx.Scroll,=0A=
=0A=
	initialize: function(options, context){=0A=
		context =3D context || document;=0A=
		this.doc =3D context.getDocument();=0A=
		var win =3D context.getWindow();=0A=
		this.parent(this.doc, options);=0A=
		this.links =3D this.options.links ? $$(this.options.links) : =
$$(this.doc.links);=0A=
		var location =3D win.location.href.match(/^[^#]*/)[0] + '#';=0A=
		this.links.each(function(link){=0A=
			if (link.href.indexOf(location) !=3D 0) {return;}=0A=
			var anchor =3D link.href.substr(location.length);=0A=
			if (anchor) this.useLink(link, anchor);=0A=
		}, this);=0A=
		if (!Browser.Engine.webkit419) {=0A=
			this.addEvent('complete', function(){=0A=
				win.location.hash =3D this.anchor;=0A=
			}, true);=0A=
		}=0A=
	},=0A=
=0A=
	useLink: function(link, anchor){=0A=
		var el;=0A=
		link.addEvent('click', function(event){=0A=
			if (el !=3D=3D false && !el) el =3D $(anchor) || =
this.doc.getElement('a[name=3D' + anchor + ']');=0A=
			if (el) {=0A=
				event.preventDefault();=0A=
				this.anchor =3D anchor;=0A=
				this.toElement(el);=0A=
				link.blur();=0A=
			}=0A=
		}.bind(this));=0A=
	}=0A=
=0A=
});=0A=
=0A=
/*=0A=
Script: Assets.js=0A=
	Provides methods to dynamically load JavaScript, CSS, and Image files =
into the document.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Valerio Proietti=0A=
*/=0A=
=0A=
var Asset =3D {=0A=
=0A=
	javascript: function(source, properties){=0A=
		properties =3D $extend({=0A=
			onload: $empty,=0A=
			document: document,=0A=
			check: $lambda(true)=0A=
		}, properties);=0A=
=0A=
		var script =3D new Element('script', {src: source, type: =
'text/javascript'});=0A=
=0A=
		var load =3D properties.onload.bind(script), check =3D =
properties.check, doc =3D properties.document;=0A=
		delete properties.onload; delete properties.check; delete =
properties.document;=0A=
=0A=
		script.addEvents({=0A=
			load: load,=0A=
			readystatechange: function(){=0A=
				if (['loaded', 'complete'].contains(this.readyState)) load();=0A=
			}=0A=
		}).set(properties);=0A=
=0A=
		if (Browser.Engine.webkit419) var checker =3D (function(){=0A=
			if (!$try(check)) return;=0A=
			$clear(checker);=0A=
			load();=0A=
		}).periodical(50);=0A=
=0A=
		return script.inject(doc.head);=0A=
	},=0A=
=0A=
	css: function(source, properties){=0A=
		return new Element('link', $merge({=0A=
			rel: 'stylesheet', media: 'screen', type: 'text/css', href: source=0A=
		}, properties)).inject(document.head);=0A=
	},=0A=
=0A=
	image: function(source, properties){=0A=
		properties =3D $merge({=0A=
			onload: $empty,=0A=
			onabort: $empty,=0A=
			onerror: $empty=0A=
		}, properties);=0A=
		var image =3D new Image();=0A=
		var element =3D $(image) || new Element('img');=0A=
		['load', 'abort', 'error'].each(function(name){=0A=
			var type =3D 'on' + name;=0A=
			var event =3D properties[type];=0A=
			delete properties[type];=0A=
			image[type] =3D function(){=0A=
				if (!image) return;=0A=
				if (!element.parentNode){=0A=
					element.width =3D image.width;=0A=
					element.height =3D image.height;=0A=
				}=0A=
				image =3D image.onload =3D image.onabort =3D image.onerror =3D null;=0A=
				event.delay(1, element, element);=0A=
				element.fireEvent(name, element, 1);=0A=
			};=0A=
		});=0A=
		image.src =3D element.src =3D source;=0A=
		if (image && image.complete) image.onload.delay(1);=0A=
		return element.set(properties);=0A=
	},=0A=
=0A=
	images: function(sources, options){=0A=
		options =3D $merge({=0A=
			onComplete: $empty,=0A=
			onProgress: $empty=0A=
		}, options);=0A=
		sources =3D $splat(sources);=0A=
		var images =3D [];=0A=
		var counter =3D 0;=0A=
		return new Elements(sources.map(function(source){=0A=
			return Asset.image(source, {=0A=
				onload: function(){=0A=
					options.onProgress.call(this, counter, sources.indexOf(source));=0A=
					counter++;=0A=
					if (counter =3D=3D sources.length) options.onComplete();=0A=
				}=0A=
			});=0A=
		}));=0A=
	}=0A=
=0A=
};=0A=
=0A=
/*=0A=
Script: IframeShim.js=0A=
	Defines IframeShim, a class for obscuring select lists and flash =
objects in IE.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Aaron Newton=0A=
*/=0A=
=0A=
var IframeShim =3D new Class({=0A=
=0A=
	Implements: [Options, Events, Class.Occlude],=0A=
=0A=
	options: {=0A=
		className: 'iframeShim',=0A=
		display: false,=0A=
		zIndex: null,=0A=
		margin: 0,=0A=
		offset: {x: 0, y: 0},=0A=
		browsers: true || (Browser.Engine.trident4 || (Browser.Engine.gecko && =
!Browser.Engine.gecko19 && Browser.Platform.mac))=0A=
	},=0A=
=0A=
	property: 'IframeShim',=0A=
=0A=
	initialize: function(element, options){=0A=
		this.element =3D $(element);=0A=
		if (this.occlude()) return this.occluded;=0A=
		this.setOptions(options);=0A=
		this.makeShim();=0A=
		return this;=0A=
	},=0A=
=0A=
	makeShim: function(){=0A=
		if(this.options.browsers){=0A=
			var zIndex =3D this.element.getStyle('zIndex').toInt();=0A=
=0A=
			if (!zIndex){=0A=
				var pos =3D this.element.getStyle('position');=0A=
				if (pos =3D=3D 'static' || !pos) this.element.setStyle('position', =
'relative');=0A=
				this.element.setStyle('zIndex', zIndex || 1);=0A=
			}=0A=
			zIndex =3D ($chk(this.options.zIndex) && zIndex > =
this.options.zIndex) ? this.options.zIndex : zIndex - 1;=0A=
			if (zIndex < 0) zIndex =3D 1;=0A=
			this.shim =3D new Element('iframe', {=0A=
				src: (window.location.protocol =3D=3D 'https') ? '://0' : =
'javascript:void(0)',=0A=
				scrolling: 'no',=0A=
				frameborder: 0,=0A=
				styles: {=0A=
					zIndex: zIndex,=0A=
					position: 'absolute',=0A=
					border: 'none',=0A=
					filter: =
'progid:DXImageTransform.Microsoft.Alpha(style=3D0,opacity=3D0)'=0A=
				},=0A=
				'class': this.options.className=0A=
			}).store('IframeShim', this);=0A=
			var inject =3D (function(){=0A=
				this.shim.inject(this.element, 'after');=0A=
				this[this.options.display ? 'show' : 'hide']();=0A=
				this.fireEvent('inject');=0A=
			}).bind(this);=0A=
			if (Browser.Engine.trident && !IframeShim.ready) =
window.addEvent('load', inject);=0A=
			else inject();=0A=
		} else {=0A=
			this.position =3D this.hide =3D this.show =3D this.dispose =3D =
$lambda(this);=0A=
		}=0A=
	},=0A=
=0A=
	position: function(){=0A=
		if (!IframeShim.ready) return this;=0A=
		var size =3D this.element.measure(function(){ return this.getSize(); =
});=0A=
		if ($type(this.options.margin)){=0A=
			size.x =3D size.x - (this.options.margin * 2);=0A=
			size.y =3D size.y - (this.options.margin * 2);=0A=
			this.options.offset.x +=3D this.options.margin;=0A=
			this.options.offset.y +=3D this.options.margin;=0A=
		}=0A=
		if (this.shim) {=0A=
			this.shim.set({width: size.x, height: size.y}).position({=0A=
				relativeTo: this.element,=0A=
				offset: this.options.offset=0A=
			});=0A=
		}=0A=
		return this;=0A=
	},=0A=
=0A=
	hide: function(){=0A=
		if (this.shim) this.shim.setStyle('display', 'none');=0A=
		return this;=0A=
	},=0A=
=0A=
	show: function(){=0A=
		if (this.shim) this.shim.setStyle('display', 'block');=0A=
		return this.position();=0A=
	},=0A=
=0A=
	dispose: function(){=0A=
		if (this.shim) this.shim.dispose();=0A=
		return this;=0A=
	},=0A=
=0A=
	destroy: function(){=0A=
		if (this.shim) this.shim.destroy();=0A=
		return this;=0A=
	}=0A=
=0A=
});=0A=
=0A=
window.addEvent('load', function(){=0A=
	IframeShim.ready =3D true;=0A=
});=0A=
=0A=
/*=0A=
Script: Tips.js=0A=
	Class for creating nice tips that follow the mouse cursor when hovering =
an element.=0A=
=0A=
	License:=0A=
		MIT-style license.=0A=
=0A=
	Authors:=0A=
		Valerio Proietti=0A=
		Christoph Pojer=0A=
*/=0A=
=0A=
var Tips =3D new Class({=0A=
=0A=
	Implements: [Events, Options],=0A=
=0A=
	options: {=0A=
		onShow: function(tip){=0A=
			tip.setStyle('visibility', 'visible');=0A=
		},=0A=
		onHide: function(tip){=0A=
			tip.setStyle('visibility', 'hidden');=0A=
		},=0A=
		title: 'title',=0A=
		text: function(el){=0A=
			return el.get('rel') || el.get('href');=0A=
		},=0A=
		showDelay: 100,=0A=
		hideDelay: 100,=0A=
		className: null,=0A=
		offset: {x: 16, y: 16},=0A=
		fixed: false=0A=
	},=0A=
=0A=
	initialize: function(){=0A=
		var params =3D Array.link(arguments, {options: Object.type, elements: =
$defined});=0A=
		if (params.options && params.options.offsets) params.options.offset =
=3D params.options.offsets;=0A=
		this.setOptions(params.options);=0A=
		this.container =3D new Element('div', {'class': 'tip'});=0A=
		this.tip =3D this.getTip();=0A=
		=0A=
		if (params.elements) this.attach(params.elements);=0A=
	},=0A=
=0A=
	getTip: function(){=0A=
		return new Element('div', {=0A=
			'class': this.options.className,=0A=
			styles: {=0A=
				visibility: 'hidden',=0A=
				display: 'none',=0A=
				position: 'absolute',=0A=
				top: 0,=0A=
				left: 0=0A=
			}=0A=
		}).adopt(=0A=
			new Element('div', {'class': 'tip-top'}),=0A=
			this.container,=0A=
			new Element('div', {'class': 'tip-bottom'})=0A=
		).inject(document.body);=0A=
	},=0A=
=0A=
	attach: function(elements){=0A=
		var read =3D function(option, element){=0A=
			if (option =3D=3D null) return '';=0A=
			return $type(option) =3D=3D 'function' ? option(element) : =
element.get(option);=0A=
		};=0A=
		$$(elements).each(function(element){=0A=
			var title =3D read(this.options.title, element);=0A=
			element.erase('title').store('tip:native', =
title).retrieve('tip:title', title);=0A=
			element.retrieve('tip:text', read(this.options.text, element));=0A=
			=0A=
			var events =3D ['enter', 'leave'];=0A=
			if (!this.options.fixed) events.push('move');=0A=
			=0A=
			events.each(function(value){=0A=
				element.addEvent('mouse' + value, element.retrieve('tip:' + value, =
this['element' + value.capitalize()].bindWithEvent(this, element)));=0A=
			}, this);=0A=
		}, this);=0A=
		=0A=
		return this;=0A=
	},=0A=
=0A=
	detach: function(elements){=0A=
		$$(elements).each(function(element){=0A=
			['enter', 'leave', 'move'].each(function(value){=0A=
				element.removeEvent('mouse' + value, element.retrieve('tip:' + =
value) || $empty);=0A=
			});=0A=
			=0A=
			=
element.eliminate('tip:enter').eliminate('tip:leave').eliminate('tip:move=
');=0A=
			=0A=
			if ($type(this.options.title) =3D=3D 'string' && this.options.title =
=3D=3D 'title'){=0A=
				var original =3D element.retrieve('tip:native');=0A=
				if (original) element.set('title', original);=0A=
			}=0A=
		}, this);=0A=
		=0A=
		return this;=0A=
	},=0A=
=0A=
	elementEnter: function(event, element){=0A=
		$A(this.container.childNodes).each(Element.dispose);=0A=
		=0A=
		['title', 'text'].each(function(value){=0A=
			var content =3D element.retrieve('tip:' + value);=0A=
			if (!content) return;=0A=
			=0A=
			this[value + 'Element'] =3D new Element('div', {'class': 'tip-' + =
value}).inject(this.container);=0A=
			this.fill(this[value + 'Element'], content);=0A=
		}, this);=0A=
		=0A=
		this.timer =3D $clear(this.timer);=0A=
		this.timer =3D this.show.delay(this.options.showDelay, this, element);=0A=
		this.tip.setStyle('display', 'block');=0A=
		this.position((!this.options.fixed) ? event : {page: =
element.getPosition()});=0A=
	},=0A=
=0A=
	elementLeave: function(event, element){=0A=
		$clear(this.timer);=0A=
		this.tip.setStyle('display', 'none');=0A=
		this.timer =3D this.hide.delay(this.options.hideDelay, this, element);=0A=
	},=0A=
=0A=
	elementMove: function(event){=0A=
		this.position(event);=0A=
	},=0A=
=0A=
	position: function(event){=0A=
		var size =3D window.getSize(), scroll =3D window.getScroll(),=0A=
			tip =3D {x: this.tip.offsetWidth, y: this.tip.offsetHeight},=0A=
			props =3D {x: 'left', y: 'top'},=0A=
			obj =3D {};=0A=
		=0A=
		for (var z in props){=0A=
			obj[props[z]] =3D event.page[z] + this.options.offset[z];=0A=
			if ((obj[props[z]] + tip[z] - scroll[z]) > size[z]) obj[props[z]] =3D =
event.page[z] - this.options.offset[z] - tip[z];=0A=
		}=0A=
		=0A=
		this.tip.setStyles(obj);=0A=
	},=0A=
=0A=
	fill: function(element, contents){=0A=
		if(typeof contents =3D=3D 'string') element.set('html', contents);=0A=
		else element.adopt(contents);=0A=
	},=0A=
=0A=
	show: function(el){=0A=
		this.fireEvent('show', [this.tip, el]);=0A=
	},=0A=
=0A=
	hide: function(el){=0A=
		this.fireEvent('hide', [this.tip, el]);=0A=
	}=0A=
=0A=
});/*=0A=
Script: Clientcide.js=0A=
	The Clientcide namespace.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
var Clientcide =3D {=0A=
	version: '2.0.1',=0A=
	setAssetLocation: function(baseHref) {=0A=
		if (window.StickyWin && StickyWin.ui) {=0A=
			StickyWin.UI.implement({=0A=
				options: {=0A=
					baseHref: baseHref + '/stickyWinHTML/'=0A=
				}=0A=
			});=0A=
			if (StickyWin.alert) {=0A=
				var CGFsimpleErrorPopup =3D StickyWin.alert.bind(window);=0A=
				StickyWin.alert =3D function(msghdr, msg, base) {=0A=
				    return CGFsimpleErrorPopup(msghdr, msg, base||baseHref + =
"/simple.error.popup");=0A=
				};=0A=
			}=0A=
		}=0A=
		if (window.TagMaker) {=0A=
			TagMaker.implement({=0A=
			    options: {=0A=
			        baseHref: baseHref + '/tips/'=0A=
			    }=0A=
			});=0A=
		}=0A=
		if (window.ProductPicker) {=0A=
			ProductPicker.implement({=0A=
			    options:{=0A=
			        baseHref: baseHref + '/Picker'=0A=
			    }=0A=
			});=0A=
		}=0A=
=0A=
		if (window.Autocompleter) {=0A=
			Autocompleter.Base.implement({=0A=
					options: {=0A=
						baseHref: baseHref + '/autocompleter/'=0A=
					}=0A=
			});=0A=
		}=0A=
=0A=
		if (window.Lightbox) {=0A=
			Lightbox.implement({=0A=
			    options: {=0A=
			        assetBaseUrl: baseHref + '/slimbox/'=0A=
			    }=0A=
			});=0A=
		}=0A=
=0A=
		if (window.Waiter) {=0A=
			Waiter.implement({=0A=
				options: {=0A=
					baseHref: baseHref + '/waiter/'=0A=
				}=0A=
			});=0A=
		}=0A=
	},=0A=
	preLoadCss: function(){=0A=
		if (window.StickyWin && StickyWin.ui) StickyWin.ui();=0A=
		if (window.StickyWin && StickyWin.pointy) StickyWin.pointy();=0A=
		Clientcide.preloaded =3D true;=0A=
		return true;=0A=
	},=0A=
	preloaded: false=0A=
};=0A=
(function(){=0A=
	if (!window.addEvent) return;=0A=
	var preload =3D function(){=0A=
		if (window.dbug) dbug.log('preloading clientcide css');=0A=
		if (!Clientcide.preloaded) Clientcide.preLoadCss();=0A=
	};=0A=
	window.addEvent('domready', preload);=0A=
	window.addEvent('load', preload);=0A=
})();=0A=
setCNETAssetBaseHref =3D Clientcide.setAssetLocation;=0A=
=0A=
/*=0A=
Script: dbug.js=0A=
	A wrapper for Firebug console.* statements.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
var dbug =3D {=0A=
	logged: [],	=0A=
	timers: {},=0A=
	firebug: false, =0A=
	enabled: false, =0A=
	log: function() {=0A=
		dbug.logged.push(arguments);=0A=
	},=0A=
	nolog: function(msg) {=0A=
		dbug.logged.push(arguments);=0A=
	},=0A=
	time: function(name){=0A=
		dbug.timers[name] =3D new Date().getTime();=0A=
	},=0A=
	timeEnd: function(name){=0A=
		if (dbug.timers[name]) {=0A=
			var end =3D new Date().getTime() - dbug.timers[name];=0A=
			dbug.timers[name] =3D false;=0A=
			dbug.log('%s: %s', name, end);=0A=
		} else dbug.log('no such timer: %s', name);=0A=
	},=0A=
	enable: function(silent) { =0A=
		var con =3D window.firebug ? firebug.d.console.cmd : window.console;=0A=
=0A=
		if((!!window.console && !!window.console.warn) || window.firebug) {=0A=
			try {=0A=
				dbug.enabled =3D true;=0A=
				dbug.log =3D function(){=0A=
						(con.debug || con.log).apply(con, arguments);=0A=
				};=0A=
				dbug.time =3D function(){=0A=
					con.time.apply(con, arguments);=0A=
				};=0A=
				dbug.timeEnd =3D function(){=0A=
					con.timeEnd.apply(con, arguments);=0A=
				};=0A=
				if(!silent) dbug.log('enabling dbug');=0A=
				for(var i=3D0;i<dbug.logged.length;i++){ dbug.log.apply(con, =
dbug.logged[i]); }=0A=
				dbug.logged=3D[];=0A=
			} catch(e) {=0A=
				dbug.enable.delay(400);=0A=
			}=0A=
		}=0A=
	},=0A=
	disable: function(){ =0A=
		if(dbug.firebug) dbug.enabled =3D false;=0A=
		dbug.log =3D dbug.nolog;=0A=
		dbug.time =3D function(){};=0A=
		dbug.timeEnd =3D function(){};=0A=
	},=0A=
	cookie: function(set){=0A=
		var value =3D document.cookie.match('(?:^|;)\\s*jsdebug=3D([^;]*)');=0A=
		var debugCookie =3D value ? unescape(value[1]) : false;=0A=
		if((!$defined(set) && debugCookie !=3D 'true') || ($defined(set) && =
set)) {=0A=
			dbug.enable();=0A=
			dbug.log('setting debugging cookie');=0A=
			var date =3D new Date();=0A=
			date.setTime(date.getTime()+(24*60*60*1000));=0A=
			document.cookie =3D =
'jsdebug=3Dtrue;expires=3D'+date.toGMTString()+';path=3D/;';=0A=
		} else dbug.disableCookie();=0A=
	},=0A=
	disableCookie: function(){=0A=
		dbug.log('disabling debugging cookie');=0A=
		document.cookie =3D 'jsdebug=3Dfalse;path=3D/;';=0A=
	}=0A=
};=0A=
=0A=
(function(){=0A=
	var fb =3D !!window.console || !!window.firebug;=0A=
	var con =3D window.firebug ? window.firebug.d.console.cmd : =
window.console;=0A=
	var debugMethods =3D =
['debug','info','warn','error','assert','dir','dirxml'];=0A=
	var otherMethods =3D =
['trace','group','groupEnd','profile','profileEnd','count'];=0A=
	function set(methodList, defaultFunction) {=0A=
		for(var i =3D 0; i < methodList.length; i++){=0A=
			dbug[methodList[i]] =3D (fb && =
con[methodList[i]])?con[methodList[i]]:defaultFunction;=0A=
		}=0A=
	};=0A=
	set(debugMethods, dbug.log);=0A=
	set(otherMethods, function(){});=0A=
})();=0A=
if ((!!window.console && !!window.console.warn) || window.firebug){=0A=
	dbug.firebug =3D true;=0A=
	var value =3D document.cookie.match('(?:^|;)\\s*jsdebug=3D([^;]*)');=0A=
	var debugCookie =3D value ? unescape(value[1]) : false;=0A=
	if(window.location.href.indexOf("jsdebug=3Dtrue")>0 || =
debugCookie=3D=3D'true') dbug.enable();=0A=
	if(debugCookie=3D=3D'true')dbug.log('debugging cookie enabled');=0A=
	if(window.location.href.indexOf("jsdebugCookie=3Dtrue")>0){=0A=
		dbug.cookie();=0A=
		if(!dbug.enabled)dbug.enable();=0A=
	}=0A=
	=
if(window.location.href.indexOf("jsdebugCookie=3Dfalse")>0)dbug.disableCo=
okie();=0A=
}=0A=
=0A=
/*=0A=
Script: ToElement.js=0A=
	Defines the toElement method for a class.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
Class.ToElement =3D new Class({=0A=
	toElement: function(){=0A=
		return this.element;=0A=
	}=0A=
});=0A=
var ToElement =3D Class.ToElement;=0A=
=0A=
/*=0A=
Script: modalizer.js=0A=
	Defines Modalizer: functionality to overlay the window contents with a =
semi-transparent layer that prevents interaction with page content until =
it is removed=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
var Modalizer =3D new Class({=0A=
	defaultModalStyle: {=0A=
		display:'block',=0A=
		position:'absolute',=0A=
		top:0,=0A=
		left:0,	=0A=
		'z-index':5000,=0A=
		'background-color':'#333',=0A=
		opacity:0.8=0A=
	},=0A=
	setModalOptions: function(options){=0A=
		this.modalOptions =3D $merge({=0A=
			width:(window.getScrollSize().x),=0A=
			height:(window.getScrollSize().y),=0A=
			elementsToHide: 'select, embed' + (Browser.Engine.trident ? '': ', =
object'),=0A=
			hideOnClick: true,=0A=
			modalStyle: {},=0A=
			updateOnResize: true,=0A=
			layerId: 'modalOverlay',=0A=
			onModalHide: $empty,=0A=
			onModalShow: $empty=0A=
		}, this.modalOptions, options);=0A=
		return this;=0A=
	},=0A=
	layer: function(){=0A=
		if (!this.modalOptions.layerId) this.setModalOptions();=0A=
		return $(this.modalOptions.layerId) || new Element('div', {id: =
this.modalOptions.layerId}).inject(document.body);=0A=
	},=0A=
	resize: function(){=0A=
		if (this.layer()) {=0A=
			this.layer().setStyles({=0A=
				width:(window.getScrollSize().x),=0A=
				height:(window.getScrollSize().y)=0A=
			});=0A=
		}=0A=
	},=0A=
	setModalStyle: function (styleObject){=0A=
		this.modalOptions.modalStyle =3D styleObject;=0A=
		this.modalStyle =3D $merge(this.defaultModalStyle, {=0A=
			width:this.modalOptions.width,=0A=
			height:this.modalOptions.height=0A=
		}, styleObject);=0A=
		if (this.layer()) this.layer().setStyles(this.modalStyle);=0A=
		return(this.modalStyle);=0A=
	},=0A=
	modalShow: function(options){=0A=
		this.setModalOptions(options);=0A=
		=
this.layer().setStyles(this.setModalStyle(this.modalOptions.modalStyle));=0A=
		if (Browser.Engine.trident4) =
this.layer().setStyle('position','absolute');=0A=
		this.layer().removeEvents('click').addEvent('click', function(){=0A=
			this.modalHide(this.modalOptions.hideOnClick);=0A=
		}.bind(this));=0A=
		this.bound =3D this.bound||{};=0A=
		if (!this.bound.resize && this.modalOptions.updateOnResize) {=0A=
			this.bound.resize =3D this.resize.bind(this);=0A=
			window.addEvent('resize', this.bound.resize);=0A=
		}=0A=
		if ($type(this.modalOptions.onModalShow)  =3D=3D "function") =
this.modalOptions.onModalShow();=0A=
		this.togglePopThroughElements(0);=0A=
		this.layer().setStyle('display','block');=0A=
		return this;=0A=
	},=0A=
	modalHide: function(override, force){=0A=
		if (override =3D=3D=3D false) return false; //this is internal, you =
don't need to pass in an argument=0A=
		this.togglePopThroughElements(1);=0A=
		if ($type(this.modalOptions.onModalHide) =3D=3D "function") =
this.modalOptions.onModalHide();=0A=
		this.layer().setStyle('display','none');=0A=
		if (this.modalOptions.updateOnResize) {=0A=
			this.bound =3D this.bound||{};=0A=
			if (!this.bound.resize) this.bound.resize =3D this.resize.bind(this);=0A=
			window.removeEvent('resize', this.bound.resize);=0A=
		}=0A=
		return this;=0A=
	},=0A=
	togglePopThroughElements: function(opacity){=0A=
		if (Browser.Engine.trident4 || (Browser.Engine.gecko && =
Browser.Platform.mac)) {=0A=
			$$(this.modalOptions.elementsToHide).each(function(sel){=0A=
				sel.setStyle('opacity', opacity);=0A=
			});=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
/*=0A=
Script: StyleWriter.js=0A=
=0A=
Provides a simple method for injecting a css style element into the DOM =
if it's not already present.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
=0A=
var StyleWriter =3D new Class({=0A=
	createStyle: function(css, id) {=0A=
		window.addEvent('domready', function(){=0A=
			try {=0A=
				if ($(id) && id) return;=0A=
				var style =3D new Element('style', {id: =
id||''}).inject($$('head')[0]);=0A=
				if (Browser.Engine.trident) style.styleSheet.cssText =3D css;=0A=
				else style.set('text', css);=0A=
			}catch(e){dbug.log('error: %s',e);}=0A=
		}.bind(this));=0A=
	}=0A=
});=0A=
=0A=
/*=0A=
Script: StickyWin.js=0A=
=0A=
Creates a div within the page with the specified contents at the =
location relative to the element you specify; basically an in-page popup =
maker.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
=0A=
var StickyWin =3D new Class({=0A=
	Binds: ['destroy', 'hide', 'togglepin'],=0A=
	Implements: [Options, Events, StyleWriter, Class.ToElement],=0A=
	options: {=0A=
//		onDisplay: $empty,=0A=
//		onClose: $empty,=0A=
		closeClassName: 'closeSticky',=0A=
		pinClassName: 'pinSticky',=0A=
		content: '',=0A=
		zIndex: 10000,=0A=
		className: '',=0A=
//		id: ... set above in initialize function=0A=
/*  	these are the defaults for Element.position anyway=0A=
		************************************************=0A=
		edge: false, //see Element.position=0A=
		position: 'center', //center, corner =3D=3D upperLeft, upperRight, =
bottomLeft, bottomRight=0A=
		offset: {x:0,y:0},=0A=
		relativeTo: document.body, */=0A=
		width: false,=0A=
		height: false,=0A=
		timeout: -1,=0A=
		allowMultipleByClass: false,=0A=
		allowMultiple: true,=0A=
		showNow: true,=0A=
		useIframeShim: true,=0A=
		iframeShimSelector: '',=0A=
		destroyOnClose: false=0A=
	},=0A=
=0A=
	css: '.SWclearfix:after {content: "."; display: block; height: 0; =
clear: both; visibility: hidden;}'+=0A=
		 '.SWclearfix {display: inline-table;} * html .SWclearfix {height: =
1%;} .SWclearfix {display: block;}',=0A=
	=0A=
	initialize: function(options){=0A=
		this.options.inject =3D this.options.inject || {=0A=
			target: document.body,=0A=
			where: 'bottom' =0A=
		};=0A=
		this.setOptions(options);=0A=
		this.id =3D this.options.id || 'StickyWin_'+new Date().getTime();=0A=
		this.makeWindow();=0A=
=0A=
		if (this.options.content) this.setContent(this.options.content);=0A=
		if (this.options.timeout > 0) {=0A=
			this.addEvent('onDisplay', function(){=0A=
				this.hide.delay(this.options.timeout, this)=0A=
			}.bind(this));=0A=
		}=0A=
		if (this.options.showNow) this.show();=0A=
		//add css for clearfix=0A=
		this.createStyle(this.css, 'StickyWinClearFix');=0A=
		if (this.options.destroyOnClose) this.addEvent('close', this.destroy)=0A=
	},=0A=
	makeWindow: function(){=0A=
		this.destroyOthers();=0A=
		if (!$(this.id)) {=0A=
			this.win =3D new Element('div', {=0A=
				id:		this.id=0A=
			=
}).addClass(this.options.className).addClass('StickyWinInstance').addClas=
s('SWclearfix').setStyles({=0A=
			 	display:'none',=0A=
				position:'absolute',=0A=
				zIndex:this.options.zIndex=0A=
			}).inject(this.options.inject.target, =
this.options.inject.where).store('StickyWin', this);			=0A=
		} else this.win =3D $(this.id);=0A=
		this.element =3D this.win;=0A=
		if (this.options.width && =
$type(this.options.width.toInt())=3D=3D"number") =
this.win.setStyle('width', this.options.width.toInt());=0A=
		if (this.options.height && =
$type(this.options.height.toInt())=3D=3D"number") =
this.win.setStyle('height', this.options.height.toInt());=0A=
		return this;=0A=
	},=0A=
	show: function(suppressEvent){=0A=
		this.showWin();=0A=
		if (!suppressEvent) this.fireEvent('onDisplay');=0A=
		if (this.options.useIframeShim) this.showIframeShim();=0A=
		this.visible =3D true;=0A=
		return this;=0A=
	},=0A=
	showWin: function(){=0A=
		if (!this.positioned) this.position();=0A=
		this.win.show();=0A=
	},=0A=
	hide: function(suppressEvent){=0A=
		if ($type(suppressEvent) =3D=3D "event" || !suppressEvent) =
this.fireEvent('onClose');=0A=
		this.hideWin();=0A=
		if (this.options.useIframeShim) this.hideIframeShim();=0A=
		this.visible =3D false;=0A=
		return this;=0A=
	},=0A=
	hideWin: function(){=0A=
		this.win.setStyle('display','none');=0A=
	},=0A=
	destroyOthers: function() {=0A=
		if (!this.options.allowMultipleByClass || !this.options.allowMultiple) =
{=0A=
			$$('div.StickyWinInstance').each(function(sw) {=0A=
				if (!this.options.allowMultiple || =
(!this.options.allowMultipleByClass && =
sw.hasClass(this.options.className))) =0A=
					sw.retrieve('StickyWin').destroy();=0A=
			}, this);=0A=
		}=0A=
	},=0A=
	setContent: function(html) {=0A=
		if (this.win.getChildren().length>0) this.win.empty();=0A=
		if ($type(html) =3D=3D "string") this.win.set('html', html);=0A=
		else if ($(html)) this.win.adopt(html);=0A=
		=
this.win.getElements('.'+this.options.closeClassName).each(function(el){=0A=
			el.addEvent('click', this.hide);=0A=
		}, this);=0A=
		this.win.getElements('.'+this.options.pinClassName).each(function(el){=0A=
			el.addEvent('click', this.togglepin);=0A=
		}, this);=0A=
		return this;=0A=
	},=0A=
	position: function(options){=0A=
		this.positioned =3D true;=0A=
		this.setOptions(options);=0A=
		this.win.position({=0A=
			allowNegative: $pick(this.options.allowNegative, =
this.options.relativeTo !=3D document.body),=0A=
			relativeTo: this.options.relativeTo,=0A=
			position: this.options.position,=0A=
			offset: this.options.offset,=0A=
			edge: this.options.edge=0A=
		});=0A=
		if (this.shim) this.shim.position();=0A=
		return this;=0A=
	},=0A=
	pin: function(pin) {=0A=
		if (!this.win.pin) {=0A=
			dbug.log('you must include element.pin.js!');=0A=
			return this;=0A=
		}=0A=
		this.pinned =3D $pick(pin, true);=0A=
		this.win.pin(pin);=0A=
		return this;=0A=
	},=0A=
	unpin: function(){=0A=
		return this.pin(false);=0A=
	},=0A=
	togglepin: function(){=0A=
		return this.pin(!this.pinned);=0A=
	},=0A=
	makeIframeShim: function(){=0A=
		if (!this.shim){=0A=
			var el =3D =
(this.options.iframeShimSelector)?this.win.getElement(this.options.iframe=
ShimSelector):this.win;=0A=
			this.shim =3D new IframeShim(el, {=0A=
				display: false,=0A=
				name: 'StickyWinShim'=0A=
			});=0A=
		}=0A=
	},=0A=
	showIframeShim: function(){=0A=
		if (this.options.useIframeShim) {=0A=
			this.makeIframeShim();=0A=
			this.shim.show();=0A=
		}=0A=
	},=0A=
	hideIframeShim: function(){=0A=
		if (this.shim) this.shim.hide();=0A=
	},=0A=
	destroy: function(){=0A=
		if (this.win) this.win.destroy();=0A=
		if (this.options.useIframeShim && this.shim) this.shim.destroy();=0A=
		if ($('modalOverlay'))$('modalOverlay').destroy();=0A=
	}=0A=
});=0A=
=0A=
=0A=
/*=0A=
Script: StickyWin.Modal.js=0A=
=0A=
This script extends StickyWin and StickyWin.Fx classes to add Modalizer =
functionality.=0A=
=0A=
License:=0A=
	http://www.clientcide.com/wiki/cnet-libraries#license=0A=
*/=0A=
StickyWin.Modal =3D new Class({=0A=
=0A=
	Extends: StickyWin,=0A=
=0A=
	Implements: Modalizer,=0A=
=0A=
	initialize: function(options){=0A=
		options =3D options||{};=0A=
		this.setModalOptions($merge(options.modalOptions||{}, {=0A=
			onModalHide: function(){=0A=
					this.hide(false);=0A=
				}.bind(this)=0A=
			}));=0A=
		this.parent(options);=0A=
	},=0A=
=0A=
	show: function(showModal){=0A=
		if ($pick(showModal, true)) {=0A=
			this.modalShow();=0A=
			if (this.modalOptions.elementsToHide) =
this.win.getElements(this.modalOptions.elementsToHide).setStyle('opacity'=
, 1);=0A=
		}=0A=
		this.parent();=0A=
	},=0A=
=0A=
	hide: function(hideModal){=0A=
		if ($pick(hideModal, true)) this.modalHide();=0A=
		else this.parent();=0A=
	}=0A=
=0A=
});=0A=
if (StickyWin.Fx) StickyWin.Fx.Modal =3D StickyWin.Modal;
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Roal/Roar.js

/**
 * Roar - Notifications
 *
 * Inspired by Growl
 *
 * @version		1.0.1
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

var Roar =3D new Class({

	Implements: [Options, Events, Chain],

	options: {
		duration: 4000,
		position: 'upperLeft',
		container: null,
		bodyFx: null,
		itemFx: null,
		margin: {x: 10, y: 10},
		offset: 5,
		className: 'roar',
		onShow: $empty,
		onHide: $empty,
		onRender: $empty,
		style: 'notice'
	},

	initialize: function(options) {
		this.setOptions(options);
		this.items =3D [];
		this.container =3D $(this.options.container) || document;
	},

	alert: function(title, message, options) {
		var params =3D Array.link(arguments, {title: String.type, message: =
String.type, options: Object.type});
		var items =3D [new Element('h3', {'html': $pick(params.title, '')})];
		if (params.message) items.push(new Element('p', {'html': =
params.message}));
		return this.inject(items, params.options);
	},

	inject: function(elements, options) {
		if (!this.body) this.render();
		options =3D options || {};

		var offset =3D [-this.options.offset, 0];
		var last =3D this.items.getLast();
		if (last) {
			offset[0] =3D last.retrieve('roar:offset');
			offset[1] =3D offset[0] + last.offsetHeight + this.options.offset;
		}
		var to =3D {'opacity': 1};
		to[this.align.y] =3D offset;

		var item =3D new Element('div', {
			'class': this.options.className,
			'opacity': 0
		}).adopt(
			new Element('div', {
				'class': this.options.className+'-bg',
				'opacity': 0.7
			}),
			elements
		);

		item.setStyle(this.align.x, 0).store('roar:offset', =
offset[1]).set('morph', $merge({
			unit: 'px',
			link: 'cancel',
			onStart: Chain.prototype.clearChain,
			transition: Fx.Transitions.Back.easeOut
		}, this.options.itemFx));

		var remove =3D this.remove.create({
			bind: this,
			arguments: [item],
			delay: 10
		});
		this.items.push(item.addEvent('click', remove));

		if (this.options.duration) {
			var over =3D false;
			var trigger =3D (function() {
				trigger =3D null;
				if (!over) remove();
			}).delay(this.options.duration);
			item.addEvents({
				mouseover: function() {
					over =3D true;
				},
				mouseout: function() {
					over =3D false;
					if (!trigger) remove();
				}
			});
		}
		item.inject(this.body).morph(to);
		return this.fireEvent('onShow', [item, this.items.length]);
	},

	remove: function(item) {
		var index =3D this.items.indexOf(item);
		if (index =3D=3D -1) return this;
		this.items.splice(index, 1);
		item.removeEvents();
		var to =3D {opacity: 0};
		to[this.align.y] =3D item.getStyle(this.align.y).toInt() - =
item.offsetHeight - this.options.offset;
		item.morph(to).get('morph').chain(item.destroy.bind(item));
		return this.fireEvent('onHide', [item, =
this.items.length]).callChain(item);
	},

	empty: function() {
		while (this.items.length) this.remove(this.items[0]);
		return this;
	},

	render: function() {
		this.position =3D this.options.position;
		if ($type(this.position) =3D=3D 'string') {
			var position =3D {x: 'center', y: 'center'};
			this.align =3D {x: 'left', y: 'top'};
			if ((/left|west/i).test(this.position)) position.x =3D 'left';
			else if ((/right|east/i).test(this.position)) this.align.x =3D =
position.x =3D 'right';
			if ((/upper|top|north/i).test(this.position)) position.y =3D 'top';
			else if ((/bottom|lower|south/i).test(this.position)) this.align.y =
=3D position.y =3D 'bottom';
			this.position =3D position;
		}
		this.body =3D new Element('div', {'class': =
this.options.className+'-body'}).inject(document.body);
		if (Browser.Engine.trident4) =
this.body.addClass(this.options.className+'-body-ugly');
		this.moveTo =3D this.body.setStyles.bind(this.body);
		this.reposition();
		if (this.options.bodyFx) {
			var morph =3D new Fx.Morph(this.body, $merge({
				unit: 'px',
				chain: 'cancel',
				transition: Fx.Transitions.Circ.easeOut
			}, this.options.bodyFx));
			this.moveTo =3D morph.start.bind(morph);
		}
		var repos =3D this.reposition.bind(this);
		window.addEvents({
			scroll: repos,
			resize: repos
		});
		this.fireEvent('onRender', this.body);
	},

	reposition: function() {
		var max =3D document.getCoordinates(), scroll =3D =
document.getScroll(), margin =3D this.options.margin;
		max.left +=3D scroll.x;
		max.right +=3D scroll.x;
		max.top +=3D scroll.y;
		max.bottom +=3D scroll.y;
		var rel =3D ($type(this.container) =3D=3D 'element') ? =
this.container.getCoordinates() : max;
		this.moveTo({
			left: (this.position.x =3D=3D 'right')
				? (Math.min(rel.right, max.right) - margin.x)
				: (Math.max(rel.left, max.left) + margin.x),
			top: (this.position.y =3D=3D 'bottom')
				? (Math.min(rel.bottom, max.bottom) - margin.y)
				: (Math.max(rel.top, max.top) + margin.y)
		});
	}

});
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Autocompleter/Observer.js

/**
 * Observer - Observe formelements for changes
 *
 * - Additional code from clientside.cnet.com
 *
 * @version		1.1
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */
var Observer =3D new Class({

	Implements: [Options, Events],

	options: {
		periodical: false,
		delay: 1000
	},

	initialize: function(el, onFired, options){
		this.element =3D $(el) || $$(el);
		this.addEvent('onFired', onFired);
		this.setOptions(options);
		this.bound =3D this.changed.bind(this);
		this.resume();
	},

	changed: function() {
		var value =3D this.element.get('value');
		if ($equals(this.value, value)) return;
		this.clear();
		this.value =3D value;
		this.timeout =3D this.onFired.delay(this.options.delay, this);
	},

	setValue: function(value) {
		this.value =3D value;
		this.element.set('value', value);
		return this.clear();
	},

	onFired: function() {
		this.fireEvent('onFired', [this.value, this.element]);
	},

	clear: function() {
		$clear(this.timeout || null);
		return this;
	},

	pause: function(){
		if (this.timer) $clear(this.timer);
		else this.element.removeEvent('keyup', this.bound);
		return this.clear();
	},

	resume: function(){
		this.value =3D this.element.get('value');
		if (this.options.periodical) this.timer =3D =
this.changed.periodical(this.options.periodical, this);
		else this.element.addEvent('keyup', this.bound);
		return this;
	}

});

var $equals =3D function(obj1, obj2) {
	return (obj1 =3D=3D obj2 || JSON.encode(obj1) =3D=3D =
JSON.encode(obj2));
};
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Autocompleter/Autocompleter.js

/**
 * Autocompleter
 *
 * http://digitarald.de/project/autocompleter/
 *
 * @version		1.1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

var Autocompleter =3D new Class({

	Implements: [Options, Events],

	options: {/*
		onOver: $empty,
		onSelect: $empty,
		onSelection: $empty,
		onShow: $empty,
		onHide: $empty,
		onBlur: $empty,
		onFocus: $empty,*/
		minLength: 1,
		markQuery: true,
		width: 'inherit',
		maxChoices: 10,
		injectChoice: null,
		customChoices: null,
		emptyChoices: null,
		visibleChoices: true,
		className: 'autocompleter-choices',
		zIndex: 42,
		delay: 400,
		observerOptions: {},
		fxOptions: {},

		autoSubmit: false,
		overflow: false,
		overflowMargin: 25,
		selectFirst: false,
		filter: null,
		filterCase: false,
		filterSubset: false,
		forceSelect: false,
		selectMode: true,
		choicesMatch: null,

		multiple: false,
		separator: ', ',
		separatorSplit: /\s*[,;]\s*/,
		autoTrim: false,
		allowDupes: false,

		cache: true,
		relative: false
	},

	initialize: function(element, options) {
		this.element =3D $(element);
		this.setOptions(options);
		this.build();
		this.observer =3D new Observer(this.element, this.prefetch.bind(this), =
$merge({
			'delay': this.options.delay
		}, this.options.observerOptions));
		this.queryValue =3D null;
		if (this.options.filter) this.filter =3D =
this.options.filter.bind(this);
		var mode =3D this.options.selectMode;
		this.typeAhead =3D (mode =3D=3D 'type-ahead');
		this.selectMode =3D (mode =3D=3D=3D true) ? 'selection' : mode;
		this.cached =3D [];
	},

	/**
	 * build - Initialize DOM
	 *
	 * Builds the html structure for choices and appends the events to the =
element.
	 * Override this function to modify the html generation.
	 */
	build: function() {
		if ($(this.options.customChoices)) {
			this.choices =3D this.options.customChoices;
		} else {
			this.choices =3D new Element('ul', {
				'class': this.options.className,
				'styles': {
					'zIndex': this.options.zIndex
				}
			}).inject(document.body);
			this.relative =3D false;
			if (this.options.relative) {
				this.choices.inject(this.element, 'after');
				this.relative =3D this.element.getOffsetParent();
			}
			this.fix =3D new OverlayFix(this.choices);
		}
		if (!this.options.separator.test(this.options.separatorSplit)) {
			this.options.separatorSplit =3D this.options.separator;
		}
		this.fx =3D (!this.options.fxOptions) ? null : new =
Fx.Tween(this.choices, $merge({
			'property': 'opacity',
			'link': 'cancel',
			'duration': 200
		}, this.options.fxOptions)).addEvent('onStart', =
Chain.prototype.clearChain).set(0);
		this.element.setProperty('autocomplete', 'off')
			.addEvent((Browser.Engine.trident || Browser.Engine.webkit) ? =
'keydown' : 'keypress', this.onCommand.bind(this))
			.addEvent('click', this.onCommand.bind(this, [false]))
			.addEvent('focus', this.toggleFocus.create({bind: this, arguments: =
true, delay: 100}))
			.addEvent('blur', this.toggleFocus.create({bind: this, arguments: =
false, delay: 100}));
	},

	destroy: function() {
		if (this.fix) this.fix.destroy();
		this.choices =3D this.selected =3D this.choices.destroy();
	},

	toggleFocus: function(state) {
		this.focussed =3D state;
		if (!state) this.hideChoices(true);
		this.fireEvent((state) ? 'onFocus' : 'onBlur', [this.element]);
	},

	onCommand: function(e) {
		if (!e && this.focussed) return this.prefetch();
		if (e && e.key && !e.shift) {
			switch (e.key) {
				case 'enter':
					if (this.element.value !=3D this.opted) return true;
					if (this.selected && this.visible) {
						this.choiceSelect(this.selected);
						return !!(this.options.autoSubmit);
					}
					break;
				case 'up': case 'down':
					if (!this.prefetch() && this.queryValue !=3D=3D null) {
						var up =3D (e.key =3D=3D 'up');
						this.choiceOver((this.selected || this.choices)[
							(this.selected) ? ((up) ? 'getPrevious' : 'getNext') : ((up) ? =
'getLast' : 'getFirst')
						](this.options.choicesMatch), true);
					}
					return false;
				case 'esc': case 'tab':
					this.hideChoices(true);
					break;
			}
		}
		return true;
	},

	setSelection: function(finish) {
		var input =3D this.selected.inputValue, value =3D input;
		var start =3D this.queryValue.length, end =3D input.length;
		if (input.substr(0, start).toLowerCase() !=3D =
this.queryValue.toLowerCase()) start =3D 0;
		if (this.options.multiple) {
			var split =3D this.options.separatorSplit;
			value =3D this.element.value;
			start +=3D this.queryIndex;
			end +=3D this.queryIndex;
			var old =3D value.substr(this.queryIndex).split(split, 1)[0];
			value =3D value.substr(0, this.queryIndex) + input + =
value.substr(this.queryIndex + old.length);
			if (finish) {
				var tokens =3D =
value.split(this.options.separatorSplit).filter(function(entry) {
					return this.test(entry);
				}, /[^\s,]+/);
				if (!this.options.allowDupes) tokens =3D [].combine(tokens);
				var sep =3D this.options.separator;
				value =3D tokens.join(sep) + sep;
				end =3D value.length;
			}
		}
		this.observer.setValue(value);
		this.opted =3D value;
		if (finish || this.selectMode =3D=3D 'pick') start =3D end;
		this.element.selectRange(start, end);
		this.fireEvent('onSelection', [this.element, this.selected, value, =
input]);
	},

	showChoices: function() {
		var match =3D this.options.choicesMatch, first =3D =
this.choices.getFirst(match);
		this.selected =3D this.selectedValue =3D null;
		if (this.fix) {
			var pos =3D this.element.getCoordinates(this.relative), width =3D =
this.options.width || 'auto';
			this.choices.setStyles({
				'left': pos.left,
				'top': pos.bottom,
				'width': (width =3D=3D=3D true || width =3D=3D 'inherit') ? =
pos.width : width
			});
		}
		if (!first) return;
		if (!this.visible) {
			this.visible =3D true;
			this.choices.setStyle('display', '');
			if (this.fx) this.fx.start(1);
			this.fireEvent('onShow', [this.element, this.choices]);
		}
		if (this.options.selectFirst || this.typeAhead || first.inputValue =
=3D=3D this.queryValue) this.choiceOver(first, this.typeAhead);
		var items =3D this.choices.getChildren(match), max =3D =
this.options.maxChoices;
		var styles =3D {'overflowY': 'hidden', 'height': ''};
		this.overflown =3D false;
		if (items.length > max) {
			var item =3D items[max - 1];
			styles.overflowY =3D 'scroll';
			styles.height =3D item.getCoordinates(this.choices).bottom;
			this.overflown =3D true;
		};
		this.choices.setStyles(styles);
		this.fix.show();
		if (this.options.visibleChoices) {
			var scroll =3D document.getScroll(),
			size =3D document.getSize(),
			coords =3D this.choices.getCoordinates();
			if (coords.right > scroll.x + size.x) scroll.x =3D coords.right - =
size.x;
			if (coords.bottom > scroll.y + size.y) scroll.y =3D coords.bottom - =
size.y;
			window.scrollTo(Math.min(scroll.x, coords.left), Math.min(scroll.y, =
coords.top));
		}
	},

	hideChoices: function(clear) {
		if (clear) {
			var value =3D this.element.value;
			if (this.options.forceSelect) value =3D this.opted;
			if (this.options.autoTrim) {
				value =3D =
value.split(this.options.separatorSplit).filter($arguments(0)).join(this.=
options.separator);
			}
			this.observer.setValue(value);
		}
		if (!this.visible) return;
		this.visible =3D false;
		if (this.selected) =
this.selected.removeClass('autocompleter-selected');
		this.observer.clear();
		var hide =3D function(){
			this.choices.setStyle('display', 'none');
			this.fix.hide();
		}.bind(this);
		if (this.fx) this.fx.start(0).chain(hide);
		else hide();
		this.fireEvent('onHide', [this.element, this.choices]);
	},

	prefetch: function() {
		var value =3D this.element.value, query =3D value;
		if (this.options.multiple) {
			var split =3D this.options.separatorSplit;
			var values =3D value.split(split);
			var index =3D this.element.getSelectedRange().start;
			var toIndex =3D value.substr(0, index).split(split);
			var last =3D toIndex.length - 1;
			index -=3D toIndex[last].length;
			query =3D values[last];
		}
		if (query.length < this.options.minLength) {
			this.hideChoices();
		} else {
			if (query =3D=3D=3D this.queryValue || (this.visible && query =3D=3D =
this.selectedValue)) {
				if (this.visible) return false;
				this.showChoices();
			} else {
				this.queryValue =3D query;
				this.queryIndex =3D index;
				if (!this.fetchCached()) this.query();
			}
		}
		return true;
	},

	fetchCached: function() {
		return false;
		if (!this.options.cache
			|| !this.cached
			|| !this.cached.length
			|| this.cached.length >=3D this.options.maxChoices
			|| this.queryValue) return false;
		this.update(this.filter(this.cached));
		return true;
	},

	update: function(tokens) {
		this.choices.empty();
		this.cached =3D tokens;
		var type =3D tokens && $type(tokens);
		if (!type || (type =3D=3D 'array' && !tokens.length) || (type =3D=3D =
'hash' && !tokens.getLength())) {
			(this.options.emptyChoices || this.hideChoices).call(this);
		} else {
			if (this.options.maxChoices < tokens.length && =
!this.options.overflow) tokens.length =3D this.options.maxChoices;
			tokens.each(this.options.injectChoice || function(token){
				var choice =3D new Element('li', {'html': =
this.markQueryValue(token)});
				choice.inputValue =3D token;
				this.addChoiceEvents(choice).inject(this.choices);
			}, this);
			this.showChoices();
		}
	},

	choiceOver: function(choice, selection) {
		if (!choice || choice =3D=3D this.selected) return;
		if (this.selected) =
this.selected.removeClass('autocompleter-selected');
		this.selected =3D choice.addClass('autocompleter-selected');
		this.fireEvent('onSelect', [this.element, this.selected, selection]);
		if (!this.selectMode) this.opted =3D this.element.value;
		if (!selection) return;
		this.selectedValue =3D this.selected.inputValue;
		if (this.overflown) {
			var coords =3D this.selected.getCoordinates(this.choices), margin =3D =
this.options.overflowMargin,
				top =3D this.choices.scrollTop, height =3D =
this.choices.offsetHeight, bottom =3D top + height;
			if (coords.top - margin < top && top) this.choices.scrollTop =3D =
Math.max(coords.top - margin, 0);
			else if (coords.bottom + margin > bottom) this.choices.scrollTop =3D =
Math.min(coords.bottom - height + margin, bottom);
		}
		if (this.selectMode) this.setSelection();
	},

	choiceSelect: function(choice) {
		if (choice) this.choiceOver(choice);
		this.setSelection(true);
		this.queryValue =3D false;
		this.hideChoices();
	},

	filter: function(tokens) {
		return (tokens || this.tokens).filter(function(token) {
			return this.test(token);
		}, new RegExp(((this.options.filterSubset) ? '' : '^') + =
this.queryValue.escapeRegExp(), (this.options.filterCase) ? '' : 'i'));
	},

	/**
	 * markQueryValue
	 *
	 * Marks the queried word in the given string with <span =
class=3D"autocompleter-queried">*</span>
	 * Call this i.e. from your custom parseChoices, same for =
addChoiceEvents
	 *
	 * @param		{String} Text
	 * @return		{String} Text
	 */
	markQueryValue: function(str) {
		return (!this.options.markQuery || !this.queryValue) ? str
			: str.replace(new RegExp('(' + ((this.options.filterSubset) ? '' : =
'^') + this.queryValue.escapeRegExp() + ')', (this.options.filterCase) ? =
'' : 'i'), '<span class=3D"autocompleter-queried">$1</span>');
	},

	/**
	 * addChoiceEvents
	 *
	 * Appends the needed event handlers for a choice-entry to the given =
element.
	 *
	 * @param		{Element} Choice entry
	 * @return		{Element} Choice entry
	 */
	addChoiceEvents: function(el) {
		return el.addEvents({
			'mouseover': this.choiceOver.bind(this, [el]),
			'click': this.choiceSelect.bind(this, [el])
		});
	}
});

var OverlayFix =3D new Class({

	initialize: function(el) {
		if (Browser.Engine.trident) {
			this.element =3D $(el);
			this.relative =3D this.element.getOffsetParent();
			this.fix =3D new Element('iframe', {
				'frameborder': '0',
				'scrolling': 'no',
				'src': 'javascript:false;',
				'styles': {
					'position': 'absolute',
					'border': 'none',
					'display': 'none',
					'filter': 'progid:DXImageTransform.Microsoft.Alpha(opacity=3D0)'
				}
			}).inject(this.element, 'after');
		}
	},

	show: function() {
		if (this.fix) {
			var coords =3D this.element.getCoordinates(this.relative);
			delete coords.right;
			delete coords.bottom;
			this.fix.setStyles($extend(coords, {
				'display': '',
				'zIndex': (this.element.getStyle('zIndex') || 1) - 1
			}));
		}
		return this;
	},

	hide: function() {
		if (this.fix) this.fix.setStyle('display', 'none');
		return this;
	},

	destroy: function() {
		if (this.fix) this.fix =3D this.fix.destroy();
	}

});

Element.implement({

	getSelectedRange: function() {
		if (!Browser.Engine.trident) return {start: this.selectionStart, end: =
this.selectionEnd};
		var pos =3D {start: 0, end: 0};
		var range =3D this.getDocument().selection.createRange();
		if (!range || range.parentElement() !=3D this) return pos;
		var dup =3D range.duplicate();
		if (this.type =3D=3D 'text') {
			pos.start =3D 0 - dup.moveStart('character', -100000);
			pos.end =3D pos.start + range.text.length;
		} else {
			var value =3D this.value;
			var offset =3D value.length - value.match(/[\n\r]*$/)[0].length;
			dup.moveToElementText(this);
			dup.setEndPoint('StartToEnd', range);
			pos.end =3D offset - dup.text.length;
			dup.setEndPoint('StartToStart', range);
			pos.start =3D offset - dup.text.length;
		}
		return pos;
	},

	selectRange: function(start, end) {
		if (Browser.Engine.trident) {
			var diff =3D this.value.substr(start, end - start).replace(/\r/g, =
'').length;
			start =3D this.value.substr(0, start).replace(/\r/g, '').length;
			var range =3D this.createTextRange();
			range.collapse(true);
			range.moveEnd('character', start + diff);
			range.moveStart('character', start);
			range.select();
		} else {
			this.focus();
			this.setSelectionRange(start, end);
		}
		return this;
	}

});

/* compatibility */

Autocompleter.Base =3D Autocompleter;
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Autocompleter/Autocompleter.Request.js

/**
 * Autocompleter.Request
 *
 * http://digitarald.de/project/autocompleter/
 *
 * @version		1.1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

Autocompleter.Request =3D new Class({

	Extends: Autocompleter,

	options: {/*
		indicator: null,
		indicatorClass: null,
		onRequest: $empty,
		onComplete: $empty,*/
		postData: {},
		ajaxOptions: {},
		postVar: 'value'

	},

	query: function(){
		var data =3D $unlink(this.options.postData) || {};
		data[this.options.postVar] =3D this.queryValue;
		var indicator =3D $(this.options.indicator);
		if (indicator) indicator.setStyle('display', '');
		var cls =3D this.options.indicatorClass;
		if (cls) this.element.addClass(cls);
		this.fireEvent('onRequest', [this.element, this.request, data, =
this.queryValue]);
		this.request.send({'data': data});
	},

	/**
	 * queryResponse - abstract
	 *
	 * Inherated classes have to extend this function and use this.parent()
	 */
	queryResponse: function() {
		var indicator =3D $(this.options.indicator);
		if (indicator) indicator.setStyle('display', 'none');
		var cls =3D this.options.indicatorClass;
		if (cls) this.element.removeClass(cls);
		return this.fireEvent('onComplete', [this.element, this.request]);
	}

});

Autocompleter.Request.JSON =3D new Class({

	Extends: Autocompleter.Request,

	initialize: function(el, url, options) {
		this.parent(el, options);
		this.request =3D new Request.JSON($merge({
			'url': url,
			'link': 'cancel'
		}, this.options.ajaxOptions)).addEvent('onComplete', =
this.queryResponse.bind(this));
	},

	queryResponse: function(response) {
		this.parent();
		this.update(response);
	}

});

Autocompleter.Request.HTML =3D new Class({

	Extends: Autocompleter.Request,

	initialize: function(el, url, options) {
		this.parent(el, options);
		this.request =3D new Request.HTML($merge({
			'url': url,
			'link': 'cancel',
			'update': this.choices
		}, this.options.ajaxOptions)).addEvent('onComplete', =
this.queryResponse.bind(this));
	},

	queryResponse: function(tree, elements) {
		this.parent();
		if (!elements || !elements.length) {
			this.hideChoices();
		} else {
			=
this.choices.getChildren(this.options.choicesMatch).each(this.options.inj=
ectChoice || function(choice) {
				var value =3D choice.get('text');
				choice.inputValue =3D value;
				this.addChoiceEvents(choice.set('html', =
this.markQueryValue(value)));
			}, this);
			this.showChoices();
		}

	}

});

/* compatibility */

Autocompleter.Ajax =3D {
	Base: Autocompleter.Request,
	Json: Autocompleter.Request.JSON,
	Xhtml: Autocompleter.Request.HTML
};

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Piechart/moocanvas.js

//MooCanvas, My Object Oriented Canvas Element. Copyright (c) 2008 Olmo =
Maldonado, <http://ibolmo.com/>, MIT Style License.
eval(function(p,a,c,k,e,d){e=3Dfunction(c){return(c<a?'':e(parseInt(c/a))=
)+((c=3Dc%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace=
(/^/,String)){while(c--){d[e(c)]=3Dk[c]||e(c)}k=3D[function(e){return =
d[e]}];e=3Dfunction(){return'\\w+'};c=3D1};while(c--){if(k[c]){p=3Dp.repl=
ace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return =
p}('f(3r.3B.3t){2F.3u.12=3D6(O){k J 2m(O)};2r.3s().3x=3D\'12 =
{3y-3z:3c;3i:3f-3o;}\'+\'12 1o, 12 1o * {3V:3Z;43:41;}\'+\'12 1o * =
{t:2n;r:2n;}\'+\'v\\\\:*, o\\\\:*{3X:3N(#3M#3O)}\'}7 2m=3DJ 1z({1q:6(){7 =
1Z=3D3Q.3L(1F,{2o:3K.1b,W:$3G});7 O=3D$2O({t:3F,r:3H},1Z.2o);7 =
u=3D(1Z.W||2r.3I(\'12\')).3J(O);f(u.1Y)k =
u;u.2h(\'3R\',5.2g);u.2h(\'3S\',5.2t);u.1Y=3D6(){k 5.2j=3D5.2j||J =
L(u)};k u.2E({t:O.t,r:O.r})},2g:6(e){7 =
1f=3De.42;f(1f=3D=3D\'t\'||1f=3D=3D\'r\'){e=3De.2K;e.19[1f]=3De[1f];e.1Y(=
).2w()}},2t:6(e){e=3De.2K;7 =
1i=3De.3Y;f(1i){1i.19.t=3De.t;1i.19.r=3De.r}}});7 L=3DJ =
1z({1q:6(u){5.W=3DJ =
2F(\'1o\').2E({t:u.3W,r:u.3E}).45(u);5.m=3D[[1,0,0],[0,1,0],[0,0,1]];5.l=3D=
0;5.1x=3D0;5.3l=3D[];5.z=3D[];5.Z=3D10;5.q=3D5.Z/2;5.1J=3D1;5.1I=3D1;5.1a=
=3D0;5.17=3D0;5.2Z=3D5.Z*1},25:1,1P:\'#2G\',2a:\'#3n\',1l:1,35:\'3p-3k\',=
1k:\'2p\',1U:\'3j\',31:0,32:\'#2G\',2Y:0,2X:0,1E:6(x,y){7 =
m=3D5.m,Z=3D5.Z,q=3D5.q;k[Z*(x*m[0][0]+y*m[1][0]+m[2][0])-q,Z*(x*m[0][1]+=
y*m[1][1]+m[2][1])-q]}});L.U({2D:6(){5.l=3D0;5.z.V=3D0},2J:6(x,y){5.z[5.l=
++]=3D\'m\';5.z[5.l++]=3D5.S(x,y);5.1a=3Dx;5.17=3Dy},2f:6(){5.z[5.l++]=3D=
\'x\'},T:6(x,y){5.z[5.l++]=3D\'l\';5.z[5.l++]=3D5.S(x,y);5.1a=3Dx;5.17=3D=
y},3g:6(2H,2I,x,y){7 =
1R=3D2*2H,26=3D2*2I;5.2C((1R+5.1a)/3,(26+5.17)/3,(1R+x)/3,(26+y)/3,x,y)},=
2C:6(2v,2y,2z,2B,x,y){5.z[5.l++]=3D\' c =
\'+[5.S(2v,2y),5.S(2z,2B),5.S(x,y)].M(\',\');5.1a=3Dx;5.17=3Dy},3v:13.14,=
3w:6(x,y,D,P,11,18){f(5.1x=3D=3D=3D0)D*=3D5.Z;7 =
B=3DP.1j()*D,H=3DP.1s()*D,F=3D11.1j()*D,G=3D11.1s()*D;f(5.1x!=3D=3D0){7 =
15=3D2A.15,1V=3D15/24,n=3D(18)?-1:1;f(n*11<P)(18)?P+=3D2*15:11+=3D2*15;5.=
T(B+x,H+y);3D(n*P+1V<11)5.T(x+(P+=3Dn*1V).1j()*D,y+P.1s()*D);5.T(F+x,G+y)=
;k}f(B=3D=3DF&&!18)B+=3D0.3m;7 =
q=3D5.q,c=3D5.1E(x,y),2b=3D5.1J*D,29=3D5.1I*D;5.z[5.l++]=3D[18?\'46 =
\':\'4M \',(c[0]-2b).Q()+\',\'+(c[1]-29).Q()+\' =
\',(c[0]+2b).Q()+\',\'+(c[1]+29).Q()+\' \',5.S(B+x-q,H+y-q)+\' =
\',5.S(F+x-q,G+y-q),].M(\'\')},1N:6(x,y,w,h){5.2J(x,y);5.T(x+w,y);5.T(x+w=
,y+h);5.T(x,y+h);5.2f()},N:6(){5.1w(4Q)},1w:6(N){f(!5.z.V)k;7 =
1B=3D5.Z*10,1d=3D5.2a,1g=3D4L.1b(1d),p=3D5.1n(N&&1g?1d:5.1P),a=3D(N)?[\'4=
K=3D\',[\'<v:N \',!1g?5.2x(1d):\'p=3D\'+p.p+\' =
K=3D"\'+p.K,\'"></v:N>\']]:[\'4G=3D\'+0.8*5.25*5.m[0][0]+\' =
4F=3D\',[\'<v:1w\',\'4S=3D\',(5.1k=3D=3D\'2p\')?\'4H\':5.1k,\'4I=3D\',5.1=
U,\'p=3D\',p.p,\'K=3D"\',p.K,\'" />\']];5.W.37(\'2U\',[\'<v:2i =
z=3D"\',5.z.M(\'\'),\'e" 2N=3D"\'+1B+\',\'+1B+\'" =
\',a[0],\'2u">\',a[1].M(\' =
\'),\'</v:2i>\'].M(\'\'));f(N&&1d.R)5.W.4Y().N.4W=3D2u;5.2D()},4T:13.14,4=
X:13.14,1n:6(g){7 =
a=3D5.1l;f(g.2R(0,3)=3D=3D\'1g\'){f(g.2T(3)=3D=3D"a")a*=3Dg.2S(/([\\d.]*)=
\\)$/)[1];g=3Dg.36()}k{p:g,K:a}},2x:6(A){7 1M=3D\'\';f(A.2Q){7 =
1O=3DA.4U,1K=3DA.4V,E=3D\'\';f(A.E)2l(7 =
i=3D0,j=3DA.E.V;i<j;i++)E+=3D(1L*A.E[i][0]).Q()+\'% =
\'+A.E[i][1];1M+=3D((A.1v)?\'1b=3D4D 4h=3D"0.2,0.2" =
4g=3D"0.2,0.2"\':\'1b=3D4i 4j=3D4l 4E=3D0 21=3D\'+4k*(1+A.21/2A.15)+\' =
\')+[\'p=3D"\'+1O.p,\'K=3D"\'+1O.K*1L+\'%\',\'4e=3D"\'+1K.p,\'o:49=3D"\'+=
1K.K*1L+\'%\',\'4a=3D"\'+E].M(\'" \')}k(A.R)?\'1b=3D"4d" =
1r=3D"\'+A.R.1r:1M},S:6(x,y){7 =
m=3D5.m,Z=3D5.Z,q=3D5.q;k(Z*(x*m[0][0]+y*m[1][0]+m[2][0])-q).Q()+\',\'+(Z=
*(x*m[0][1]+y*m[1][1]+m[2][1])-q).Q()}});L.U({2w:6(x,y,w,h){5.W.4z=3D\'\'=
;5.m=3D[[1,0,0],[0,1,0],[0,0,1]]},4A:6(x,y,w,h){5.1N(x,y,w,h);5.N()},4B:6=
(x,y,w,h){5.1N(x,y,w,h);5.1w()}});L.U({4v:6(x,y){5.1J*=3Dx;5.1I*=3Dy;5.1e=
([[x,0,0],[0,y,0],[0,0,1]])},4p:6(1h){5.1x+=3D1h;7 =
c=3D1h.1j(),s=3D1h.1s();5.1e([[c,s,0],[-s,c,0],[0,0,1]])},4o:6(x,y){5.1e(=
[[1,0,0],[0,1,0],[x,y,1]])},2s:6(2L,2k,2e,2q,1u,1A){5.1e([[2L,2e,1u],[2k,=
2q,1A],[0,0,1]])},4u:6(){5.m=3D[[1,0,0],[0,1,0],[0,0,1]];5.2s.4t(5,1F)},1=
e:6(b){7 m=3D5.m,o=3D[[0,0,0],[0,0,0],[0,0,0]];2l(7 i=3D3;i--;){7 =
2d=3Db[0][i],1H=3Db[1][i],1G=3Db[2][i];f(2d)5.1p(o[0],5.1y(2d,m[i]));f(1H=
)5.1p(o[1],5.1y(1H,m[i]));f(1G)5.1p(o[2],5.1y(1G,m[i]))}5.m=3Do},1y:6(x,y=
){k y.3a(6(1t){k =
x*1t})},1p:6(o,v){o[0]+=3Dv[0];o[1]+=3Dv[1];o[2]+=3Dv[2]}});L.U({4s:6(Y){=
7 I=3D1F,V=3DI.V,C=3D(V=3D=3D9)?4:0;7 =
X=3DY.4r,38=3DX.t,3b=3DX.r;X.t=3D\'39\';X.r=3D\'39\';7 =
w=3DY.t,h=3DY.r;X.t=3D38;X.r=3D3b;7 =
1D=3D0,1C=3D0,1Q=3Dw,27=3Dh,1u=3DI[++C],1A=3DI[++C],2P=3DI[++C]||w,2V=3DI=
[++C]||h;f(V=3D=3D9){1D=3DI[1];1C=3DI[2];1Q=3DI[3];27=3DI[4]}7 =
2c=3D1C/h,28=3D1D/w,m=3D5.m,Z=3D5.Z,d=3D5.1E(1u,1A).3a(6(1t){k(1t/Z).Q()}=
);7 =
O=3D(!m[0][1]&&m[0][0]=3D=3D1)?\'4q:\'+d[1]+\';3c:\'+d[0]:[\'4w:4C:4x.4y.=
4n(\',\'4m=3D\',m[0][0],\'4c=3D\',m[1][0],\'4b=3D\',m[0][1],\'47=3D\',m[1=
][1],\'48=3D\',d[0],\'4f=3D\',d[1],\')\'].M(\' =
\');5.W.37(\'2U\',[\'<v:30 19=3D"\',O,\'" =
2N=3D"\',Z*10,\',\',Z*10,\'">\',[\'<v:Y\',\'1r=3D\',Y.1r,\'19=3Dt:\'+Z*2P=
+\';r:\'+Z*2V,\'4R=3D\',2c,\'4J=3D\',1-28-1Q/w,\'4P=3D\',1-2c-27/h,\'4O=3D=
\',28,\'/>\'].M(\' \'),\'</v:30>\'].M(\' =
\'))},4N:13.14,40:13.14,3q:13.14});L.U({1S:[\'1P\',\'2a\',\'1l\',\'25\',\=
'1k\',\'1U\',\'2Z\',\'2Y\',\'2X\',\'31\',\'32\',\'35\'],3C:6(){7 =
1T=3D{};5.1S.34(6(16){1T[16]=3D5[16]},5);5.1X.20(1T);5.1W.20(5.m)},3A:6()=
{7 =
33=3D5.1X.2W();5.1S.34(6(16){5[16]=3D33[16]},5);5.m=3D5.1W.2W()},1W:[],1X=
:[]});L.U({3h:6(B,H,F,G){k J 23(B,H,F,G,5)},3e:6(B,H,1v,F,G,22){k $2O(J =
23(B,H,F,G,5),{1v:1v,22:22})}});7 23=3DJ =
1z({1q:6(B,H,F,G,1m){5.21=3D((G-H)/((F-B).2M(2)+(G-H).2M(2)).3T()).3U();5=
.1m=3D1m},2Q:6(C,g){g=3D5.1n(g);f(C=3D=3D1||C=3D=3D0){5[\'g\'+C]=3Dg}44{f=
(!5.E)5.E=3D[];5.E.20([C,g.p])}},1n:6(g){7 =
a=3D5.1m.1l||1;f(g.2R(0,3)=3D=3D\'1g\'){f(g.2T(3)=3D=3D"a")a*=3Dg.2S(/([\=
\d.]*)\\)$/)[1];g=3Dg.36()}k{p:g,K:a}}});L.U({3P:6(R,1c){k J =
3d(R,1c)}});7 3d=3DJ =
1z({1q:6(R,1c){5.R=3DR;5.1c=3D1c}});',62,309,'|||||this|function|var|||||=
|||if|col||||return|||||color|Z2|height||width|el|||||path|obj|x0|off|rad=
|stops|x1|y1|y0|args|new|opacity|CanvasRenderingContext2D|join|fill|props=
|a0|round|img|coord|lineTo|implement|length|element|irS|image|||a1|canvas=
|Function|empty|PI|prop|currentY|cw|style|currentX|type|rep|fS|matMult|pr=
operty|rgb|ang|efC|cos|lineCap|globalAlpha|ctx|processColor|div|sum|initi=
alize|src|sin|val|dx|r0|stroke|rot|dotmult|Class|dy|size|sy|sx|getCoords|=
arguments|b2|b1|arcScaleY|arcScaleX|oc1|100|ret|rect|oc0|strokeStyle|sw|c=
x|states|copy|lineJoin|da|mStack|dStack|getContext|params|push|angle|r1|C=
anvasGradient||lineWidth|cy|sh|sxw|aSYr|fillStyle|aSXr|syh|b0|m21|closePa=
th|changeproperty|attachEvent|shape|context|m12|for|Canvas|10px|propertie=
s|butt|m22|document|transform|resize|false|cp0x|clearRect|processColorObj=
ect|cp0y|cp1x|Math|cp1y|bezierCurveTo|beginPath|setStyles|Element|000|cpx=
|cpy|moveTo|srcElement|m11|pow|coordsize|extend|dw|addColorStop|substr|ma=
tch|charAt|beforeEnd|dh|pop|shadowOffsetY|shadowOffsetX|miterLimit|group|=
shadowBlur|shadowColor|saved|each|globalCompositeOperation|rgbToHex|inser=
tAdjacentHTML|w0|auto|map|h0|left|CanvasPattern|createRadialGradient|inli=
ne|quadraticCurveTo|createLinearGradient|display|miter|over|state|125|fff=
|block|source|putImageData|Browser|createStyleSheet|trident|Constructors|=
arcTo|arc|cssText|text|align|restore|Engine|save|while|clientHeight|300|d=
efined|150|newElement|set|Object|link|default|url|VML|createPattern|Array=
|onpropertychange|onresize|sqrt|acos|position|clientWidth|behavior|firstC=
hild|absolute|getImageData|hidden|propertyName|overflow|else|inject|at|M2=
2|Dx|opacity2|colors|M21|M12|tile|color2|Dy|focussize|focusposition|gradi=
ent|method|180|linear|M11|Matrix|translate|rotate|top|runtimeStyle|drawIm=
age|apply|setTransform|scale|filter|DXImageTransform|Microsoft|innerHTML|=
fillRect|strokeRect|progid|gradientradial|focus|filled|strokeweight|flat|=
joinstyle|cropright|stroked|String|wa|drawImageFromRect|cropleft|cropbott=
om|true|croptop|endcap|clip|col0|col1|alignshape|isPointInPath|getLast'.s=
plit('|'),0,{}))=0A=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/MooTools_1.2/plugs/Piechart/piechart.js

/*
Script: piechart.js

Dependencies:
	mootools-beta-1.2b2.js
	moocanvas.js

Author:
	Greg Houston, <http://greghoustondesign.com/>

Credits:
	Based on Stoyan Stefanov's Canvas Pie:< =
http://www.phpied.com/canvas-pie/>
	Color algorithm inspired by Jim =
Bumgardner:<http://www.krazydad.com/makecolors.php>

License:
	MIT License, <http://en.wikipedia.org/wiki/MIT_License>=09
=09
Example Usage:
=09
<table class=3D"pieChart">
    <tr><th>Browser</th> <th>Value</th></tr>
    <tr><td>Safari </td> <td>180  </td></tr>
    <tr><td>Firefox</td> <td>210  </td></tr>
    <tr><td>IE     </td> <td>30   </td></tr>
    <tr><td>Opera  </td> <td>120  </td></tr>
</table>

*/


var PieChart =3D new Class({
	options: {
		pieChartRadius: 60,  // Half the width of your pie chart
    	td_label_index: 0,    // which TD contains the label		=09
    	td_index: 1,           // which TD contains the data=09
    	index: 1=09
	},
	initialize: function(elData,el,options){
		this.setOptions(options);
	=09
		// Initialize variables
		this.pieChartRadius =3D this.options.pieChartRadius;=09
		this.pieChartDiameter =3D this.pieChartRadius * 2;
		this.pieVertices =3D 12; // Does not include the center vertex
		this.arcIncrementMultiplier =3D 1 / this.pieVertices;
		this.index =3D 0;
		this.tableIndex =3D this.options.index;
		this.areaIndex =3D 1;
		this.canvas =3D '';
		this.container =3D '';
		this.data_table =3D '';
	=09
	=09
		this.insertElements(el);	=09
    	aData=3Dthis.makeData(elData);	=09
		this.makePieChart(aData);	=09
		this.addToolTips();	=09
	},
	insertElements: function(el){
	=09
    	///// STEP 1 - Insert HTML Elements
=09
		// Insert a div that will contain both the pie chart and it's legend
		this.container =3D new Element('div', {
			id: 'pieChartContainer' + this.tableIndex
		}).injectBefore($(el)).addClass('pieChartContainer');

		// Pull the table out of the page and put it in the pie chart =
container
		this.data_table =3D el.clone().injectBottom(this.container);
		el.dispose();
	=09
		// Insert a div that will contain both the pie chart canvas and it's =
image map overlay	=09
		new Element('div', {
			id: 'pieChartWrapper' + this.tableIndex
		}).injectTop(this.container).addClass('pieChartWrapper');
	=09
		// Insert the canvas to draw the pie on
		this.canvas =3D new Element('canvas', {
			id: 'canvas' + this.tableIndex,
			width: this.pieChartDiameter,
			height: this.pieChartDiameter
		=
}).injectInside(this.container.getElement('.pieChartWrapper')).addClass('=
pieChartCanvas');
	=09
		// Insert the map element. The area elements will be added later
		new Element('map', {	=09
			id: 'pieChartMap' + this.tableIndex,
			name: 'pieChartMap' + this.tableIndex
		}).injectBottom(this.container).addClass('pieChartMap');
	=09
		// Insert the blank transparent gif that is used for the image map
		new Asset.image(DIR_STATIC_SKIN+'/images/spacer.gif', {
			alt: '',
			usemap: '#pieChartMap' + this.tableIndex,
			width: this.pieChartDiameter,
			height: this.pieChartDiameter
		=
}).injectInside(this.container.getElement('.pieChartWrapper')).setStyles(=
{
				'width': this.pieChartDiameter,
				'height': this.pieChartDiameter
			});

		// Insert a div to insure layout integrity
		new Element('div').injectBottom(this.container).addClass('clear');
=09
	},
	makeData: function(elData) {
		var aData=3D[];
		elData.getChildren().each(function(el) {
			var data=3Del.getChildren();
			if ($(data[0])) {
				var color =3D data[0].getStyle('background').match(/#\w+/i);
				aData.extend([{
					'label': el.get('text'),
    				'value': data[1].get('text'),
    				'color': data[0].getStyle('background').match(/#\w+/i)[0]
				}]);		=09
			}
		});
		return aData;
	},=09
	makePieChart: function(aData){

    	///// STEP 2 - Get the data    =09
    	var  data =3D [], color, colors =3D [], labels =3D [], values =3D =
[], total =3D 0, value=3D0; =09
    	aData.each(function(item, index){    	=09
			labels[colors.length] =3D item.label;       =09
			value=3DparseFloat(item.value);
			values[colors.length] =3D value;
        	total +=3D value;       =09
        	colors[colors.length] =3D item.color.hexToRgb();           =09
		},this);	=09
    =09
    	///// STEP 3 - Draw pie on canvas

    	// get canvas context, determine radius and center
    	var ctx =3D this.canvas.getContext('2d');

		var tableLength =3D colors.length;
    	for (piece=3D0; piece < tableLength; piece++) {

        	var thisvalue =3D values[piece] / total;	=09
			var arcStartAngle =3D Math.PI * (- 0.5 + 2 * this.index); // -0.5 =
sets set the start to be top
			var arcEndAngle =3D Math.PI * (- 0.5 + 2 * (this.index + thisvalue));	=
=09

			ctx.beginPath();
			ctx.moveTo(this.pieChartRadius, this.pieChartRadius); // Center of =
the pie
			ctx.arc(  // draw next arc
            	this.pieChartRadius,
            	this.pieChartRadius,
            	this.pieChartRadius,
            	arcStartAngle,
            	arcEndAngle,
            	false
        	);
        	ctx.closePath();	=09
        	ctx.fillStyle =3D colors[piece]; // Color
        	ctx.fill();
	=09
			// Draw the same thing again to draw stroke properly in IE
			ctx.lineWidth =3D 1;
        	ctx.beginPath();
        	ctx.moveTo(this.pieChartRadius, this.pieChartRadius);

        	ctx.arc(  // draw next arc
            	this.pieChartRadius,
            	this.pieChartRadius,
            	this.pieChartRadius,
            	arcStartAngle,=20
            	arcEndAngle,
            	false
        	);
        	ctx.closePath();	=09
			ctx.strokeStyle =3D "#FFF";
			ctx.stroke();

    		///// STEP 4 - Draw pie on image map
	=09
			var arcIncrement =3D (arcEndAngle - arcStartAngle) * =
this.arcIncrementMultiplier;
	=09
			var xx =3D this.pieChartRadius + Math.round(Math.cos(arcStartAngle) * =
this.pieChartRadius);
			var yy =3D this.pieChartRadius + Math.round(Math.sin(arcStartAngle) * =
this.pieChartRadius);
		=09
			var coord =3D [];
			var coordIndex =3D 1;
					=09
			for (i =3D 0; i < ((this.pieVertices * 2) - 2); i =3D i+2) {			=09
				var arcAngle =3D arcStartAngle + arcIncrement * coordIndex;
				coord[i] =3D this.pieChartRadius + Math.round(Math.cos(arcAngle) * =
this.pieChartRadius);			=09
				coord[i+1] =3D this.pieChartRadius + Math.round(Math.sin(arcAngle) * =
this.pieChartRadius);
				coordIndex++;		=09
			}
	=09
			var xxEnd =3D this.pieChartRadius + Math.round(Math.cos(arcEndAngle) =
* this.pieChartRadius);
			var yyEnd =3D this.pieChartRadius + Math.round(Math.sin(arcEndAngle) =
* this.pieChartRadius);		=09

			var myArea =3D 'area' + this.tableIndex + '-' + piece;
	=09
			new Element('area', {
				'id': myArea ,
				'shape': 'poly',
				'coords': this.pieChartRadius + ',' + this.pieChartRadius + ',' + xx =
+ ',' + yy + ',' + coord.join(',') +  ',' + xxEnd + ',' + yyEnd,
				'title': labels[piece]
			}).injectInside(this.container.getElement('.pieChartMap'));

        	this.index +=3D thisvalue; // increment progress tracker
    	}

	this.tableIndex++;
    =09
	},
	addToolTips: function(){   =20

    		///// STEP 5 - Add Tooltips

			new Tips($$(document.getElementsByTagName('area')), {
				showDelay: 10,
				hideDelay: 10
			});=09
		=09
	},
	getColor: function(i, totalSteps){
		var colori =3D i * 100 / totalSteps;	=09
		var frequency =3D Math.PI*2 / totalSteps;
		var center =3D 190;
		var amplitude =3D 60;
        var rgb =3D [];=09
		rgb[0]   =3D Math.round(Math.sin(frequency * i + 0) * amplitude + =
center);
		rgb[1] =3D Math.round(Math.sin(frequency * i + 2) * amplitude + =
center);
		rgb[2]  =3D Math.round(Math.sin(frequency * i + 4) * amplitude + =
center);=09
		return 'rgb(' + rgb.join(',') + ')';
	}=09
});
PieChart.implement(new Options);
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/classes/lib/external/prettify/prettify.js

function H(){var x=3Dnavigator&&navigator.userAgent&&/\bMSIE =
6\./.test(navigator.userAgent);H=3Dfunction(){return x};return =
x}(function(){function x(b){b=3Db.split(/ /g);var a=3D{};for(var =
c=3Db.length;--c>=3D0;){var d=3Db[c];if(d)a[d]=3Dnull}return a}var =
y=3D"break continue do else for if return while ",U=3Dy+"auto case char =
const default double enum extern float goto int long register short =
signed sizeof static struct switch typedef union unsigned void volatile =
",D=3DU+"catch class delete false import new operator private protected =
public this throw true try ",=0A=
I=3DD+"alignof align_union asm axiom bool concept concept_map const_cast =
constexpr decltype dynamic_cast explicit export friend inline late_check =
mutable namespace nullptr reinterpret_cast static_assert static_cast =
template typeid typename typeof using virtual wchar_t where =
",J=3DD+"boolean byte extends final finally implements import instanceof =
null native package strictfp super synchronized throws transient =
",V=3DJ+"as base by checked decimal delegate descending event fixed =
foreach from group implicit in interface internal into is lock object =
out override orderby params readonly ref sbyte sealed stackalloc string =
select uint ulong unchecked unsafe ushort var ",=0A=
K=3DD+"debugger eval export function get null set undefined var with =
Infinity NaN ",L=3D"caller delete die do dump elsif eval exit foreach =
for goto if import last local my next no our print package redo require =
sub undef unless until use wantarray while BEGIN END ",M=3Dy+"and as =
assert class def del elif except exec finally from global import in is =
lambda nonlocal not or pass print raise try with yield False True None =
",N=3Dy+"alias and begin case class def defined elsif end ensure false =
in module next nil not or redo rescue retry self super then true undef =
unless until when yield BEGIN END ",=0A=
O=3Dy+"case done elif esac eval fi function in local set then until =
",W=3DI+V+K+L+M+N+O;function X(b){return =
b>=3D"a"&&b<=3D"z"||b>=3D"A"&&b<=3D"Z"}function =
u(b,a,c,d){b.unshift(c,d||0);try{a.splice.apply(a,b)}finally{b.splice(0,2=
)}}var Y=3D(function(){var =
b=3D["!","!=3D","!=3D=3D","#","%","%=3D","&","&&","&&=3D","&=3D","(","*",=
"*=3D","+=3D",",","-=3D","->","/","/=3D",":","::",";","<","<<","<<=3D","<=
=3D","=3D","=3D=3D","=3D=3D=3D",">",">=3D",">>",">>=3D",">>>",">>>=3D","?=
","@","[","^","^=3D","^^","^^=3D","{","|","|=3D","||","||=3D","~","break"=
,"case","continue",=0A=
"delete","do","else","finally","instanceof","return","throw","try","typeo=
f"],a=3D"(?:(?:(?:^|[^0-9.])\\.{1,3})|(?:(?:^|[^\\+])\\+)|(?:(?:^|[^\\-])=
-)";for(var c=3D0;c<b.length;++c){var =
d=3Db[c];a+=3DX(d.charAt(0))?"|\\b"+d:"|"+d.replace(/([^=3D<>:&])/g,"\\$1=
")}a+=3D"|^)\\s*$";return new =
RegExp(a)})(),P=3D/&/g,Q=3D/</g,R=3D/>/g,Z=3D/\"/g;function $(b){return =
b.replace(P,"&amp;").replace(Q,"&lt;").replace(R,"&gt;").replace(Z,"&quot=
;")}function E(b){return =
b.replace(P,"&amp;").replace(Q,"&lt;").replace(R,"&gt;")}var aa=3D=0A=
/&lt;/g,ba=3D/&gt;/g,ca=3D/&apos;/g,da=3D/&quot;/g,ea=3D/&amp;/g,fa=3D/&n=
bsp;/g;function ga(b){var a=3Db.indexOf("&");if(a<0)return =
b;for(--a;(a=3Db.indexOf("&#",a+1))>=3D0;){var =
c=3Db.indexOf(";",a);if(c>=3D0){var =
d=3Db.substring(a+3,c),g=3D10;if(d&&d.charAt(0)=3D=3D=3D"x"){d=3Dd.substr=
ing(1);g=3D16}var =
e=3DparseInt(d,g);if(!isNaN(e))b=3Db.substring(0,a)+String.fromCharCode(e=
)+b.substring(c+1)}}return =
b.replace(aa,"<").replace(ba,">").replace(ca,"'").replace(da,'"').replace=
(ea,"&").replace(fa," ")}function S(b){return"XMP"=3D=3D=3Db.tagName}=0A=
function z(b,a){switch(b.nodeType){case 1:var =
c=3Db.tagName.toLowerCase();a.push("<",c);for(var =
d=3D0;d<b.attributes.length;++d){var =
g=3Db.attributes[d];if(!g.specified)continue;a.push(" =
");z(g,a)}a.push(">");for(var =
e=3Db.firstChild;e;e=3De.nextSibling)z(e,a);if(b.firstChild||!/^(?:br|lin=
k|img)$/.test(c))a.push("</",c,">");break;case =
2:a.push(b.name.toLowerCase(),'=3D"',$(b.value),'"');break;case 3:case =
4:a.push(E(b.nodeValue));break}}var F=3Dnull;function =
ha(b){if(null=3D=3D=3DF){var a=3Ddocument.createElement("PRE");=0A=
a.appendChild(document.createTextNode('<!DOCTYPE foo PUBLIC "foo =
bar">\n<foo />'));F=3D!/</.test(a.innerHTML)}if(F){var =
c=3Db.innerHTML;if(S(b))c=3DE(c);return c}var d=3D[];for(var =
g=3Db.firstChild;g;g=3Dg.nextSibling)z(g,d);return d.join("")}function =
ia(b){var a=3D0;return function(c){var d=3Dnull,g=3D0;for(var =
e=3D0,h=3Dc.length;e<h;++e){var f=3Dc.charAt(e);switch(f){case =
"\t":if(!d)d=3D[];d.push(c.substring(g,e));var =
i=3Db-a%b;a+=3Di;for(;i>=3D0;i-=3D"                ".length)d.push("     =
           ".substring(0,i));g=3De+1;break;=0A=
case "\n":a=3D0;break;default:++a}}if(!d)return =
c;d.push(c.substring(g));return d.join("")}}var =
ja=3D/(?:[^<]+|<!--[\s\S]*?--\>|<!\[CDATA\[([\s\S]*?)\]\]>|<\/?[a-zA-Z][^=
>]*>|<)/g,ka=3D/^<!--/,la=3D/^<\[CDATA\[/,ma=3D/^<br\b/i;function =
na(b){var a=3Db.match(ja),c=3D[],d=3D0,g=3D[];if(a)for(var =
e=3D0,h=3Da.length;e<h;++e){var =
f=3Da[e];if(f.length>1&&f.charAt(0)=3D=3D=3D"<"){if(ka.test(f))continue;i=
f(la.test(f)){c.push(f.substring(9,f.length-3));d+=3Df.length-12}else =
if(ma.test(f)){c.push("\n");++d}else g.push(d,f)}else{var i=3Dga(f);=0A=
c.push(i);d+=3Di.length}}return{source:c.join(""),tags:g}}function =
v(b,a){var c=3D{};(function(){var g=3Db.concat(a);for(var =
e=3Dg.length;--e>=3D0;){var h=3Dg[e],f=3Dh[3];if(f)for(var =
i=3Df.length;--i>=3D0;)c[f.charAt(i)]=3Dh}})();var d=3Da.length;return =
function(g,e){e=3De||0;var =
h=3D[e,"pln"],f=3D"",i=3D0,j=3Dg;while(j.length){var =
o,m=3Dnull,k,l=3Dc[j.charAt(0)];if(l){k=3Dj.match(l[1]);m=3Dk[0];o=3Dl[0]=
}else{for(var n=3D0;n<d;++n){l=3Da[n];var =
p=3Dl[2];if(p&&!p.test(f))continue;k=3Dj.match(l[1]);if(k){m=3Dk[0];o=3Dl=
[0];break}}if(!m){o=3D"pln";m=3Dj.substring(0,=0A=
1)}}h.push(e+i,o);i+=3Dm.length;j=3Dj.substring(m.length);if(o!=3D=3D"com=
"&&/\S/.test(m))f=3Dm}return h}}var =
oa=3Dv([],[["pln",/^[^<]+/,null],["dec",/^<!\w[^>]*(?:>|$)/,null],["com",=
/^<!--[\s\S]*?(?:--\>|$)/,null],["src",/^<\?[\s\S]*?(?:\?>|$)/,null],["sr=
c",/^<%[\s\S]*?(?:%>|$)/,null],["src",/^<(script|style|xmp)\b[^>]*>[\s\S]=
*?<\/\1\b[^>]*>/i,null],["tag",/^<\/?\w[^<>]*>/,null]]);function =
pa(b){var a=3Doa(b);for(var =
c=3D0;c<a.length;c+=3D2)if(a[c+1]=3D=3D=3D"src"){var =
d,g;d=3Da[c];g=3Dc+2<a.length?a[c+2]:b.length;var e=3Db.substring(d,=0A=
g),h=3De.match(/^(<[^>]*>)([\s\S]*)(<\/[^>]*>)$/);if(h)a.splice(c,2,d,"ta=
g",d+h[1].length,"src",d+h[1].length+(h[2]||"").length,"tag")}return =
a}var =
qa=3Dv([["atv",/^\'[^\']*(?:\'|$)/,null,"'"],["atv",/^\"[^\"]*(?:\"|$)/,n=
ull,'"'],["pun",/^[<>\/=3D]+/,null,"<>/=3D"]],[["tag",/^[\w:\-]+/,/^</],[=
"atv",/^[\w\-]+/,/^=3D/],["atn",/^[\w:\-]+/,null],["pln",/^\s+/,null," =
\t\r\n"]]);function ra(b,a){for(var c=3D0;c<a.length;c+=3D2){var =
d=3Da[c+1];if(d=3D=3D=3D"tag"){var =
g,e;g=3Da[c];e=3Dc+2<a.length?a[c+2]:b.length;var h=3Db.substring(g,=0A=
e),f=3Dqa(h,g);u(f,a,c,2);c+=3Df.length-2}}return a}function r(b){var =
a=3D[],c=3D[];if(b.tripleQuotedStrings)a.push(["str",/^(?:\'\'\'(?:[^\'\\=
]|\\[\s\S]|\'{1,2}(?=3D[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{=
1,2}(?=3D[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"=
]|\\[\s\S])*(?:\"|$))/,null,"'\""]);else =
if(b.multiLineStrings)a.push(["str",/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|=
\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'=
\"`"]);else =
a.push(["str",/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(=
?:\"|$))/,=0A=
null,"\"'"]);c.push(["pln",/^(?:[^\'\"\`\/\#]+)/,null," =
\r\n"]);if(b.hashComments)a.push(["com",/^#[^\r\n]*/,null,"#"]);if(b.cSty=
leComments)c.push(["com",/^\/\/[^\r\n]*/,null]);if(b.regexLiterals)c.push=
(["str",/^\/(?:[^\\\*\/\[]|\\[\s\S]|\[(?:[^\]\\]|\\.)*(?:\]|$))+(?:\/|$)/=
,Y]);if(b.cStyleComments)c.push(["com",/^\/\*[\s\S]*?(?:\*\/|$)/,null]);v=
ar d=3Dx(b.keywords);b=3Dnull;var =
g=3Dv(a,c),e=3Dv([],[["pln",/^\s+/,null," =
\r\n"],["pln",/^[a-z_$@][a-z_$@0-9]*/i,null],["lit",/^0x[a-f0-9]+[a-z]/i,=
null],["lit",=0A=
/^(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d+)(?:e[+\-]?\d+)?[a-z]*/i,null,"1234567=
89"],["pun",/^[^\s\w\.$@]+/,null]]);function h(f,i){for(var =
j=3D0;j<i.length;j+=3D2){var o=3Di[j+1];if(o=3D=3D=3D"pln"){var =
m,k,l,n;m=3Di[j];k=3Dj+2<i.length?i[j+2]:f.length;l=3Df.substring(m,k);n=3D=
e(l,m);for(var p=3D0,t=3Dn.length;p<t;p+=3D2){var =
w=3Dn[p+1];if(w=3D=3D=3D"pln"){var =
A=3Dn[p],B=3Dp+2<t?n[p+2]:l.length,s=3Df.substring(A,B);if(s=3D=3D=3D".")=
n[p+1]=3D"pun";else if(s in d)n[p+1]=3D"kwd";else =
if(/^@?[A-Z][A-Z$]*[a-z][A-Za-z$]*$/.test(s))n[p+1]=3Ds.charAt(0)=3D=3D=3D=
"@"?"lit":=0A=
"typ"}}u(n,i,j,2);j+=3Dn.length-2}}return i}return function(f){var =
i=3Dg(f);i=3Dh(f,i);return i}}var =
G=3Dr({keywords:W,hashComments:true,cStyleComments:true,multiLineStrings:=
true,regexLiterals:true});function sa(b,a){for(var =
c=3D0;c<a.length;c+=3D2){var d=3Da[c+1];if(d=3D=3D=3D"src"){var =
g,e;g=3Da[c];e=3Dc+2<a.length?a[c+2]:b.length;var =
h=3DG(b.substring(g,e));for(var =
f=3D0,i=3Dh.length;f<i;f+=3D2)h[f]+=3Dg;u(h,a,c,2);c+=3Dh.length-2}}retur=
n a}function ta(b,a){var c=3Dfalse;for(var d=3D0;d<a.length;d+=3D2){var =
g=3Da[d+1],e,h;if(g=3D=3D=3D"atn"){e=3D=0A=
a[d];h=3Dd+2<a.length?a[d+2]:b.length;c=3D/^on|^style$/i.test(b.substring=
(e,h))}else =
if(g=3D=3D=3D"atv"){if(c){e=3Da[d];h=3Dd+2<a.length?a[d+2]:b.length;var =
f=3Db.substring(e,h),i=3Df.length,j=3Di>=3D2&&/^[\"\']/.test(f)&&f.charAt=
(0)=3D=3D=3Df.charAt(i-1),o,m,k;if(j){m=3De+1;k=3Dh-1;o=3Df}else{m=3De+1;=
k=3Dh-1;o=3Df.substring(1,f.length-1)}var l=3DG(o);for(var =
n=3D0,p=3Dl.length;n<p;n+=3D2)l[n]+=3Dm;if(j){l.push(k,"atv");u(l,a,d+2,0=
)}else u(l,a,d,2)}c=3Dfalse}}return a}function ua(b){var =
a=3Dpa(b);a=3Dra(b,a);a=3Dsa(b,a);a=3Dta(b,a);return a}function va(b,=0A=
a,c){var d=3D[],g=3D0,e=3Dnull,h=3Dnull,f=3D0,i=3D0,j=3Dia(8);function =
o(k){if(k>g){if(e&&e!=3D=3Dh){d.push("</span>");e=3Dnull}if(!e&&h){e=3Dh;=
d.push('<span class=3D"',e,'">')}var =
l=3DE(j(b.substring(g,k))).replace(/(\r\n?|\n| ) =
/g,"$1&nbsp;").replace(/\r\n?|\n/g,"<br =
/>");d.push(l);g=3Dk}}while(true){var =
m;m=3Df<a.length?(i<c.length?a[f]<=3Dc[i]:true):false;if(m){o(a[f]);if(e)=
{d.push("</span>");e=3Dnull}d.push(a[f+1]);f+=3D2}else =
if(i<c.length){o(c[i]);h=3Dc[i+1];i+=3D2}else =
break}o(b.length);if(e)d.push("</span>");return d.join("")}=0A=
var C=3D{};function q(b,a){for(var c=3Da.length;--c>=3D0;){var =
d=3Da[c];if(!C.hasOwnProperty(d))C[d]=3Db;else if("console"in =
window)console.log("cannot override language handler =
%s",d)}}q(G,["default-code"]);q(ua,["default-markup","html","htm","xhtml"=
,"xml","xsl"]);q(r({keywords:I,hashComments:true,cStyleComments:true}),["=
c","cc","cpp","cs","cxx","cyc"]);q(r({keywords:J,cStyleComments:true}),["=
java"]);q(r({keywords:O,hashComments:true,multiLineStrings:true}),["bsh",=
"csh","sh"]);q(r({keywords:M,hashComments:true,=0A=
multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);q(r({keywor=
ds:L,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl"=
,"pl","pm"]);q(r({keywords:N,hashComments:true,multiLineStrings:true,rege=
xLiterals:true}),["rb"]);q(r({keywords:K,cStyleComments:true,regexLiteral=
s:true}),["js"]);function T(b,a){try{var =
c=3Dna(b),d=3Dc.source,g=3Dc.tags;if(!C.hasOwnProperty(a))a=3D/^\s*</.tes=
t(d)?"default-markup":"default-code";var e=3DC[a].call({},d);return =
va(d,g,e)}catch(h){if("console"in window){console.log(h);=0A=
console.trace()}return b}}function wa(b){var =
a=3DH(),c=3D[document.getElementsByTagName("pre"),document.getElementsByT=
agName("code"),document.getElementsByTagName("xmp")],d=3D[];for(var =
g=3D0;g<c.length;++g)for(var =
e=3D0;e<c[g].length;++e)d.push(c[g][e]);c=3Dnull;var h=3D0;function =
f(){var i=3D(new Date).getTime()+250;for(;h<d.length&&(new =
Date).getTime()<i;h++){var =
j=3Dd[h];if(j.className&&j.className.indexOf("prettyprint")>=3D0){var =
o=3Dj.className.match(/\blang-(\w+)\b/);if(o)o=3Do[1];var =
m=3Dfalse;for(var k=3Dj.parentNode;k;k=3D=0A=
k.parentNode)if((k.tagName=3D=3D=3D"pre"||k.tagName=3D=3D=3D"code"||k.tag=
Name=3D=3D=3D"xmp")&&k.className&&k.className.indexOf("prettyprint")>=3D0=
){m=3Dtrue;break}if(!m){var =
l=3Dha(j);l=3Dl.replace(/(?:\r\n?|\n)$/,"");var =
n=3DT(l,o);if(!S(j))j.innerHTML=3Dn;else{var =
p=3Ddocument.createElement("PRE");for(var =
t=3D0;t<j.attributes.length;++t){var =
w=3Dj.attributes[t];if(w.specified)p.setAttribute(w.name,w.value)}p.inner=
HTML=3Dn;j.parentNode.replaceChild(p,j);p=3Dj}if(a&&j.tagName=3D=3D=3D"PR=
E"){var A=3Dj.getElementsByTagName("br");for(var B=3DA.length;--B>=3D=0A=
0;){var =
s=3DA[B];s.parentNode.replaceChild(document.createTextNode("\r\n"),s)}}}}=
}if(h<d.length)setTimeout(f,250);else =
if(b)b()}f()}window.PR_normalizedHtml=3Dz;window.prettyPrintOne=3DT;windo=
w.prettyPrint=3Dwa;window.PR=3D{createSimpleLexer:v,registerLangHandler:q=
,sourceDecorator:r,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:=
"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_PLAIN:"pl=
n",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_T=
YPE:"typ"}})();=0A=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/vote.js

var lsVote;=0A=
=0A=
var lsVoteClass =3D new Class({=0A=
                                           =0A=
        Implements: Options,=0A=
=0A=
        options: {=0A=
                classes_action: {=0A=
                        voted:          'voted',                       =0A=
                        plus:           'plus',=0A=
                        minus:          'minus',=0A=
                        positive:       'positive',=0A=
                        negative:       'negative',=0A=
                        quest:          'quest'=0A=
                },=0A=
                classes_element: {=0A=
                        voting:         'voting',=0A=
                        count:          'count',                       =0A=
                        total:          'total',                       =0A=
                        plus:           'plus',=0A=
                        minus:          'minus'=0A=
                }              =0A=
        },=0A=
       =0A=
        typeVote: {=0A=
                topic_comment: {=0A=
                        url: =
DIR_WEB_ROOT+'/include/ajax/voteComment.php',=0A=
                        targetName: 'idComment'=0A=
                },=0A=
                topic: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/voteTopic.php',=0A=
                        targetName: 'idTopic'=0A=
                },=0A=
                blog: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/voteBlog.php',=0A=
                        targetName: 'idBlog'=0A=
                },=0A=
                user: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/voteUser.php',=0A=
                        targetName: 'idUser'=0A=
                }=0A=
        },=0A=
=0A=
        initialize: function(options){         =0A=
                this.setOptions(options);                      =0A=
        },=0A=
       =0A=
        vote: function(idTarget,objVote,value,type) {          =0A=
                if (!this.typeVote[type]) {=0A=
                        return false;=0A=
                }=0A=
               =0A=
                this.idTarget=3DidTarget;=0A=
                this.objVote=3D$(objVote);=0A=
                this.value=3Dvalue;=0A=
                this.type=3Dtype;        =0A=
                thisObj=3Dthis;=0A=
                        =0A=
                var params =3D new Hash();=0A=
                params['value']=3Dvalue;=0A=
                params[this.typeVote[type].targetName]=3DidTarget;=0A=
                =0A=
                JsHttpRequest.query(=0A=
                        this.typeVote[type].url,                       =0A=
                        params,=0A=
                        function(result, errors) {     =0A=
                                thisObj.onVote(result, errors, thisObj); =
                              =0A=
                        },=0A=
                        true=0A=
                );             =0A=
        },=0A=
       =0A=
        onVote: function(result, errors, thisObj) {            =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}      =0A=
        	if (result.bStateError) {=0A=
                msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
        	} else {=0A=
                msgNoticeBox.alert(result.sMsgTitle,result.sMsg);=0A=
               =0A=
                var =
divVoting=3DthisObj.objVote.getParent('.'+thisObj.options.classes_element=
.voting);                =0A=
                divVoting.addClass(thisObj.options.classes_action.voted);=0A=
               =0A=
                if (this.value>0) {=0A=
                        =
divVoting.addClass(thisObj.options.classes_action.plus);=0A=
                }=0A=
                if(this.value<0) {=0A=
                        =
divVoting.addClass(thisObj.options.classes_action.minus);=0A=
                }              =0A=
                var =
divCount=3DdivVoting.getChildren('.'+thisObj.options.classes_element.coun=
t);=0A=
                if (divCount && divCount[0]) {=0A=
                	divCount.set('text',result.iCountVote);=0A=
                }=0A=
               =0A=
                var =
divTotal=3DdivVoting.getChildren('.'+thisObj.options.classes_element.tota=
l);              =0A=
                result.iRating=3DparseFloat(result.iRating);  =0A=
                =
divVoting.removeClass(thisObj.options.classes_action.negative);    =0A=
                =
divVoting.removeClass(thisObj.options.classes_action.positive);         =0A=
                if (result.iRating>0) {                        =0A=
                        =
divVoting.addClass(thisObj.options.classes_action.positive);=0A=
                        divTotal.set('text','+'+result.iRating);=0A=
                }=0A=
                if (result.iRating<0) {                        =0A=
                        =
divVoting.addClass(thisObj.options.classes_action.negative);=0A=
                        divTotal.set('text',result.iRating);=0A=
                }=0A=
                if (result.iRating=3D=3D0) {=0A=
                        divTotal.set('text','0');=0A=
                }=0A=
                =0A=
                if (thisObj.type=3D=3D'user' && =
$('user_skill_'+thisObj.idTarget)) {=0A=
                	=
$('user_skill_'+thisObj.idTarget).set('text',result.iSkill);=0A=
                }=0A=
        	}      =0A=
        }=0A=
       =0A=
});=0A=
=0A=
window.addEvent('domready', function() {       =0A=
      lsVote=3Dnew lsVoteClass();=0A=
});
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/favourites.js

var lsFavourite;=0A=
=0A=
var lsFavouriteClass =3D new Class({=0A=
                                           =0A=
        Implements: Options,=0A=
=0A=
        options: {=0A=
                classes_action: {                        =0A=
                        active:    'active',=0A=
                        quest:     'quest'=0A=
                },=0A=
                classes_element: {=0A=
                        favorite:  'favorite'                        =0A=
                }              =0A=
        },=0A=
       =0A=
        typeFavourite: {                =0A=
                topic: {=0A=
                        url: =
DIR_WEB_ROOT+'/include/ajax/topicFavourite.php',=0A=
                        targetName: 'idTopic'=0A=
                }=0A=
        },=0A=
=0A=
        initialize: function(options){         =0A=
                this.setOptions(options);                      =0A=
        },=0A=
       =0A=
        toggle: function(idTarget,objFavourite,type) {          =0A=
                if (!this.typeFavourite[type]) {=0A=
                        return false;=0A=
                }=0A=
                               =0A=
                this.idTarget=3DidTarget;=0A=
                this.objFavourite=3D$(objFavourite);=0A=
                this.value=3Dvalue;=0A=
                this.type=3Dtype;        =0A=
                thisObj=3Dthis;=0A=
                  =0A=
                var value=3D1;      =0A=
                if =
(this.objFavourite.getParent('.'+this.options.classes_element.favorite).h=
asClass(this.options.classes_action.active)) {=0A=
                	value=3D0;=0A=
                } =0A=
                =0A=
                var params =3D new Hash();=0A=
                params['type']=3Dvalue;=0A=
                params[this.typeFavourite[type].targetName]=3DidTarget;=0A=
                =0A=
                JsHttpRequest.query(=0A=
                        this.typeFavourite[type].url,                    =
   =0A=
                        params,=0A=
                        function(result, errors) {     =0A=
                                thisObj.onToggle(result, errors, =
thisObj);                               =0A=
                        },=0A=
                        true=0A=
                );             =0A=
        },=0A=
       =0A=
        onToggle: function(result, errors, thisObj) {            =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}      =0A=
        	if (result.bStateError) {=0A=
                msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
        	} else {=0A=
                msgNoticeBox.alert(result.sMsgTitle,result.sMsg);=0A=
               =0A=
                var =
divFavourite=3DthisObj.objFavourite.getParent('.'+thisObj.options.classes=
_element.favorite);=0A=
                =
divFavourite.removeClass(thisObj.options.classes_action.active);=0A=
                if (result.bState) {=0A=
                	=
divFavourite.addClass(thisObj.options.classes_action.active);=0A=
                }=0A=
        	}      =0A=
        }=0A=
       =0A=
});=0A=
=0A=
window.addEvent('domready', function() {       =0A=
      lsFavourite=3Dnew lsFavouriteClass();=0A=
});
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/questions.js

function ajaxQuestionVote(idTopic,idAnswer) {	=0A=
	JsHttpRequest.query(=0A=
    	DIR_WEB_ROOT+'/include/ajax/questionVote.php',                      =
 =0A=
        { idTopic: idTopic, idAnswer: idAnswer },=0A=
        function(result, errors) {  =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
            if (result.bStateError) {=0A=
            	msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
            } else {            	=0A=
            	msgNoticeBox.alert(result.sMsgTitle,result.sMsg);=0A=
            	if ($('topic_question_area_'+idTopic)) {=0A=
            		$('topic_question_area_'+idTopic).set('html',result.sText);=0A=
            	}  =0A=
            }                               =0A=
        },=0A=
        true=0A=
    );	=0A=
}
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/block_loader.js

var lsBlockLoaderClass =3D new Class({=0A=
                                           =0A=
        Implements: Options,=0A=
=0A=
        options: {    =0A=
        		classes_nav: {=0A=
        				nav: 	 'block-nav',=0A=
        				content: 'block-content',=0A=
                        active:  'active'                        =0A=
                }                           =0A=
        },=0A=
       =0A=
        type: {=0A=
                comment_stream: {=0A=
                        url: =
DIR_WEB_ROOT+'/include/ajax/stream_comment.php'                       =0A=
                },=0A=
                topic_stream: {=0A=
                        url: =
DIR_WEB_ROOT+'/include/ajax/stream_topic.php'                        =0A=
                },=0A=
                blogs_top: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/blogs_top.php'  =
                      =0A=
                },=0A=
                blogs_join: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/blogs_join.php' =
                       =0A=
                },=0A=
                blogs_self: {=0A=
                        url: DIR_WEB_ROOT+'/include/ajax/blogs_self.php' =
                       =0A=
                }=0A=
        },=0A=
=0A=
        initialize: function(options){         =0A=
                this.setOptions(options);                      =0A=
        },=0A=
        =0A=
        toggle: function(obj,type,params) {=0A=
        	if (!this.type[type]) {=0A=
            	return false;=0A=
            }=0A=
            thisObj=3Dthis;=0A=
            this.obj=3D$(obj);=0A=
            =0A=
            var liCurrent=3DthisObj.obj.getParent('li');=0A=
            var =
blockNav=3DliCurrent.getParent('ul.'+thisObj.options.classes_nav.nav);=0A=
            var liList=3DblockNav.getChildren('li');=0A=
            =0A=
            liList.each(function(li,index) {   =0A=
            	li.removeClass(thisObj.options.classes_nav.active);        	=0A=
        	});=0A=
        	=0A=
        	liCurrent.addClass(this.options.classes_nav.active);=0A=
            =0A=
        	var =
blockContent=3DblockNav.getParent('div').getChildren('div.'+this.options.=
classes_nav.content)[0].set('html','');=0A=
        	this.showStatus(blockContent);=0A=
        	        	=0A=
            =0A=
            JsHttpRequest.query(=0A=
            	this.type[type].url,                       =0A=
                params,=0A=
                function(result, errors) {     =0A=
                	thisObj.onLoad(result, errors, blockContent);           =
                    =0A=
                },=0A=
                true=0A=
            );=0A=
            =0A=
		},=0A=
		=0A=
		onLoad: function(result, errors, blockContent) {=0A=
			blockContent.set('html','');=0A=
			if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
        	if (result.bStateError) {=0A=
                //msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
        	} else {=0A=
        		blockContent.set('html',result.sText);=0A=
        	}=0A=
		},=0A=
		=0A=
		showStatus: function(obj) {=0A=
			var newDiv =3D new Element('div');=0A=
			newDiv.setStyle('text-align','center');=0A=
			newDiv.set('html','<img src=3D"'+DIR_STATIC_SKIN+'/images/loader.gif" =
>');=0A=
			=0A=
			newDiv.inject(obj);=0A=
		}=0A=
});=0A=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/friend.js

function ajaxToggleUserFrend(obj,idUser) {   =0A=
	obj=3D$(obj);=0A=
	JsHttpRequest.query(=0A=
    	DIR_WEB_ROOT+'/include/ajax/userFriend.php',                       =0A=
        { idUser: idUser },=0A=
        function(result, errors) {  =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
            if (result.bStateError) {=0A=
            	msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
            } else {            	=0A=
            	msgNoticeBox.alert(result.sMsgTitle,result.sMsg);=0A=
            	if (obj)  {=0A=
            		obj.set('text',result.sToggleText);=0A=
            		if (result.bState) {=0A=
            			obj.getParent('li').removeClass('add');=0A=
            			obj.getParent('li').addClass('del');=0A=
            		} else {=0A=
            			obj.getParent('li').removeClass('del');=0A=
            			obj.getParent('li').addClass('add');=0A=
            		}=0A=
            	}=0A=
            }                               =0A=
        },=0A=
        true=0A=
    );=0A=
}
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/blog.js

function ajaxJoinLeaveBlog(obj,idBlog) {   =0A=
	obj=3D$(obj);=0A=
	JsHttpRequest.query(=0A=
    	DIR_WEB_ROOT+'/include/ajax/joinLeaveBlog.php',                     =
  =0A=
        { idBlog: idBlog },=0A=
        function(result, errors) {  =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
            if (result.bStateError) {=0A=
            	msgErrorBox.alert(result.sMsgTitle,result.sMsg);=0A=
            } else {            	=0A=
            	msgNoticeBox.alert(result.sMsgTitle,result.sMsg);=0A=
            	if (obj)  {     =0A=
            		obj.getParent().removeClass('active');       		=0A=
            		if (result.bState) {            			=0A=
            			obj.getParent().addClass('active');=0A=
            		}=0A=
            		divCount=3D$('blog_user_count_'+idBlog);=0A=
            		if (divCount) {=0A=
            			divCount.set('text',result.iCountUser);=0A=
            		}=0A=
            	}=0A=
            }                               =0A=
        },=0A=
        true=0A=
    );=0A=
}=0A=
=0A=
=0A=
function ajaxBlogInfo(idBlog) { 	=0A=
	JsHttpRequest.query(=0A=
    	DIR_WEB_ROOT+'/include/ajax/blogInfo.php',                       =0A=
        { idBlog: idBlog },=0A=
        function(result, errors) {  =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
            if (result.bStateError) {=0A=
            	=0A=
            } else {            	=0A=
            	if ($('block_blog_info')) {=0A=
            		$('block_blog_info').set('html',result.sText);            	=
	=0A=
            	}=0A=
            }                               =0A=
        },=0A=
        true=0A=
    );=0A=
}
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/other.js

function ajaxTextPreview(textId,save,divPreview) { =0A=
	var text;    =0A=
	if (BLOG_USE_TINYMCE && tinyMCE && (ed=3DtinyMCE.get(textId))) {=0A=
		text =3D ed.getContent();=0A=
	} else {=0A=
		text =3D $(textId).value;	=0A=
	}	=0A=
	JsHttpRequest.query(=0A=
    	DIR_WEB_ROOT+'/include/ajax/textPreview.php',                       =0A=
        { text: text, save: save },=0A=
        function(result, errors) {  =0A=
        	if (!result) {=0A=
                msgErrorBox.alert('Error','Please try again later');     =
      =0A=
        	}=0A=
            if (result.bStateError) {=0A=
            	msgErrorBox.alert('Error','Please try again later');=0A=
            } else {    	=0A=
            	if (!divPreview) {=0A=
            		divPreview=3D'text_preview';=0A=
            	}            	=0A=
            	if ($(divPreview)) {=0A=
            		=
$(divPreview).set('html',result.sText).setStyle('display','block');=0A=
            	}=0A=
            }                               =0A=
        },=0A=
        true=0A=
    );=0A=
}=0A=
=0A=
=0A=
// =D0=B4=D0=BB=D1=8F =D0=BE=D0=BF=D1=80=D0=BE=D1=81=D0=B0=0A=
function addField(btn){=0A=
        tr =3D btn;=0A=
        while (tr.tagName !=3D 'TR') tr =3D tr.parentNode;=0A=
        var newTr =3D =
tr.parentNode.insertBefore(tr.cloneNode(true),tr.nextSibling);=0A=
        checkFieldForLast();=0A=
}=0A=
function checkFieldForLast(){	=0A=
        btns =3D document.getElementsByName('drop_answer');      =0A=
        for (i =3D 0; i < btns.length; i++){=0A=
        	btns[i].disabled =3D false;            =0A=
        }=0A=
        if (btns.length<=3D2) {=0A=
        	btns[0].disabled =3D true;=0A=
        	btns[1].disabled =3D true;=0A=
        }=0A=
}=0A=
function dropField(btn){	=0A=
        tr =3D btn;=0A=
        while (tr.tagName !=3D 'TR') tr =3D tr.parentNode;=0A=
        tr.parentNode.removeChild(tr);=0A=
        checkFieldForLast();=0A=
}=0A=
=0A=
=0A=
=0A=
function checkAllTalk(checkbox) {=0A=
	$$('.form_talks_checkbox').each(function(chk){=0A=
		if (checkbox.checked) {=0A=
			chk.checked=3Dtrue;=0A=
		} else {=0A=
			chk.checked=3Dfalse;=0A=
		}		=0A=
	});	=0A=
}=0A=
=0A=
=0A=
function showImgUploadForm() {	=0A=
	if (Browser.Engine.trident) {=0A=
		//return true;=0A=
	}	=0A=
	if (!winFormImgUpload) {		=0A=
		winFormImgUpload=3Dnew StickyWin.Modal({content: $('window_load_img'), =
closeClassName: 'close-block', useIframeShim: false});=0A=
	}=0A=
	winFormImgUpload.show();=0A=
	winFormImgUpload.pin(true);=0A=
	return false;=0A=
}=0A=
=0A=
function hideImgUploadForm() {=0A=
	winFormImgUpload.hide();=0A=
}=0A=
=0A=
var winFormImgUpload;=0A=
=0A=
=0A=
function ajaxUploadImg(value,sToLoad) {=0A=
	sToLoad=3D$(sToLoad);=0A=
	var req =3D new JsHttpRequest();=0A=
	req.onreadystatechange =3D function() {=0A=
		if (req.readyState =3D=3D 4) {=0A=
			if (req.responseJS.bStateError) {=0A=
				msgErrorBox.alert(req.responseJS.sMsgTitle,req.responseJS.sMsg);				=0A=
			} else {				=0A=
				sToLoad.insertAtCursor(req.responseJS.sText);=0A=
				hideImgUploadForm();=0A=
			}=0A=
		}=0A=
	}=0A=
	req.open(null, DIR_WEB_ROOT+'/include/ajax/uploadImg.php', true);=0A=
	req.send( { value: value } );=0A=
}
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/login.js

function showLoginForm() {	=0A=
	if (Browser.Engine.trident) {=0A=
		return true;=0A=
	}	=0A=
	if (!winFormLogin) {		=0A=
		winFormLogin=3Dnew StickyWin.Modal({content: $('login-form'), =
closeClassName: 'close-block', useIframeShim: false});=0A=
	}=0A=
	winFormLogin.show();=0A=
	winFormLogin.pin(true);=0A=
	return false;=0A=
}=0A=
=0A=
function hideLoginForm() {=0A=
	winFormLogin.hide();=0A=
}=0A=
=0A=
var winFormLogin=3Dfalse;
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/panel.js

var lsPanelClass =3D new Class({	=0A=
	initialize: function(){=0A=
		=0A=
	},=0A=
	=0A=
	putText: function(obj,text) {=0A=
		obj=3D$(obj);=0A=
		var scrollLeft=3Dobj.scrollLeft;=0A=
		var scrollTop=3Dobj.scrollTop;		=0A=
		if (Browser.Engine.trident && document.selection) {=0A=
			obj.focus();=0A=
			sel=3Ddocument.selection.createRange();=0A=
			sel.text=3Dtext;=0A=
		} else {=0A=
			obj.insertAtCursor(text);=0A=
		}		=0A=
		obj.scrollLeft=3DscrollLeft;=0A=
		obj.scrollTop=3DscrollTop;=0A=
	}, =0A=
	=0A=
	putTag: function(obj,tag) {=0A=
		this.putText(obj,'<'+tag+'/>');=0A=
	},=0A=
	=0A=
	putTextAround: function(obj,textStart,textEnd) {=0A=
		obj=3D$(obj);=0A=
		var scrollLeft=3Dobj.scrollLeft;=0A=
		var scrollTop=3Dobj.scrollTop;	=0A=
		if (Browser.Engine.trident && document.selection) {=0A=
			obj.focus();=0A=
			sel=3Ddocument.selection.createRange();=0A=
			sel.text =3D textStart+sel.text+textEnd;=0A=
		} else {=0A=
			obj.insertAroundCursor({=0A=
				before: textStart,=0A=
				defaultMiddle: '',=0A=
				after: textEnd=0A=
			});=0A=
		}=0A=
		obj.scrollLeft=3DscrollLeft;=0A=
		obj.scrollTop=3DscrollTop;=0A=
	},=0A=
	=0A=
	putTagAround: function(obj,tagStart,tagEnd) {=0A=
		if (!tagEnd) {=0A=
			tagEnd=3DtagStart;=0A=
		}=0A=
		this.putTextAround(obj,'<'+tagStart+'>','</'+tagEnd+'>');=0A=
	},=0A=
	=0A=
	putTagUrl: function(obj,sPromt) {=0A=
		obj=3D$(obj);=0A=
		if (url=3Dprompt(sPromt,'http://')) {=0A=
			var sel=3Dobj.getSelectedText();=0A=
        	this.putText(obj,'<a href=3D"'+url+'">'+sel+'</a>');=0A=
        }=0A=
	},=0A=
	=0A=
	putQuote: function(obj) {=0A=
		obj=3D$(obj);=0A=
		if (selText=3Dthis.getSelectedText()) {			=0A=
			this.putText(obj,'<blockquote>'+selText+'</blockquote>');=0A=
		} else {=0A=
			this.putTagAround(obj,'blockquote');=0A=
		}=0A=
	},=0A=
	=0A=
	getSelectedText: function(){=0A=
		if (Browser.Engine.trident) return =
document.selection.createRange().text;=0A=
		//if (window.khtml) return window.getSelection();=0A=
		return document.getSelection();=0A=
	}=0A=
});=0A=
=0A=
var lsPanel;=0A=
=0A=
window.addEvent('domready', function() {=0A=
    lsPanel =3D new lsPanelClass();   =0A=
});
------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://robocraft.ru/templates/skin/new/js/comments.js

var lsCmtTreeClass =3D new Class({
					  =20
	Implements: Options,=09
=09
	options: {
		img: {
			path: 		'images/',		=09
			openName:  	'open.gif',=20
			closeName: 	'close.gif'
		},
		classes: {
			visible: 	'lsCmtTree_visible',
			hidden:  	'lsCmtTree_hidden',		=09
			openImg:  	'lsCmtTree_open',		=09
			closeImg:  	'lsCmtTree_close'		=09
		}	=09
	},

	initialize: function(options){	=09
		this.setOptions(options);	=09
		this.make();	=09
		this.aCommentNew=3D[];
		this.iCurrentShowFormComment=3D0;=09
		this.iCommentIdLastView=3Dnull;=09
		this.countNewComment=3D0;
		this.docScroller =3D new Fx.Scroll(document.getDocument());=09
		this.hideCommentForm(this.iCurrentShowFormComment);
	},

	make: function(){
		var thisObj =3D this;
		var aImgFolding=3D$$('img.folding');
		aImgFolding.each(function(img, i){
			var divComment =3D =
img.getParent('div').getChildren('div.comment-children')[0];		=09
			if (divComment && divComment.getChildren('div.comment')[0]) {
				thisObj.makeImg(img);
			} else {
				img.setStyle('display','none');
			}
		});	=09
	},
=09
	makeImg: function(img) {
		var thisObj =3D this;
		img.setStyle('cursor', 'pointer');
		img.setStyle('display','inline');
		img.addClass(this.options.classes.closeImg);
		img.removeEvents('click');
		img.addEvent('click',function(){
			thisObj.toggleNode(img);	=09
		});
	},
=09
	toggleNode: function(img) {=09
		var b =3D img.hasClass(this.options.classes.closeImg);	=09
		if (b) {			=09
			this.collapseNode(img);
		} else {				=09
			this.expandNode(img);
		}
	},
=09
	expandNode: function(img) {			=09
		var thisObj =3D this;
		img.setProperties({'src': this.options.img.path + =
this.options.img.closeName});
		img.removeClass(this.options.classes.openImg);
		img.addClass(this.options.classes.closeImg);		 =20
		var divComment =3D =
img.getParent('div').getChildren('div.comment-children')[0];	=09
	=09
		divComment.removeClass(thisObj.options.classes.hidden);
		divComment.addClass(thisObj.options.classes.visible);	=09
	},
=09
	collapseNode: function(img) {
		var thisObj =3D this;
		img.setProperties({'src': this.options.img.path + =
this.options.img.openName});
		img.removeClass(this.options.classes.closeImg);
		img.addClass(this.options.classes.openImg);		   =20
		var divComment =3D =
img.getParent('div').getChildren('div.comment-children')[0];	=09
	=09
		divComment.removeClass(thisObj.options.classes.visible);
		divComment.addClass(thisObj.options.classes.hidden);	=09
	},
=09
	expandNodeAll: function() {
		var thisObj =3D this;
		var aImgFolding=3D$$('img.'+this.options.classes.openImg);	=09
		aImgFolding.each(function(img, i){		=09
			thisObj.expandNode(img);
		});
	},
=09
	collapseNodeAll: function() {
		var thisObj =3D this;
		var aImgFolding=3D$$('img.'+this.options.classes.closeImg);	=09
		aImgFolding.each(function(img, i){		=09
			thisObj.collapseNode(img);
		});
	},
=09
	injectComment: function(idCommentParent,idComment,sHtml) {	=09
		var newComment =3D new Element('div',{'class':'comment', 'id': =
'comment_id_'+idComment});
		newComment.set('html',sHtml);	=09
		if (idCommentParent) {
			this.expandNodeAll();=09
			var divChildren =3D $('comment-children-'+idCommentParent);	=09
			var imgParent =3D =
divChildren.getParent('div').getChildren('img.folding')[0];	=09
			this.makeImg(imgParent);
			divChildren.appendChild(newComment);
		} else {
			var divChildren =3D $('comment-children-0');
			newComment.inject(divChildren,'before');
		}=09
	},=09
=09
	responseNewComment: function(idTopic,objImg,selfIdComment,bNotFlushNew) =
{
		var thisObj=3Dthis;	=09
	=09
		if (!bNotFlushNew) {
			var aDivComments=3D$$('.comment');
			aDivComments.each(function(item,index){
				var divContent=3Ditem.getChildren('div.content')[0];
				if (divContent) {
					divContent.removeClass('new');
					divContent.removeClass('view');
				}
			});
		}
	=09
		var idCommentLast=3Dthis.idCommentLast;
		objImg=3D$(objImg);
		objImg.setProperty('src',DIR_STATIC_SKIN+'/images/update_act.gif');=09
		(function(){	=09
		JsHttpRequest.query(
        	DIR_WEB_ROOT+'/include/ajax/commentResponse.php',
        	{ idCommentLast: idCommentLast, idTopic: idTopic },
        	function(result, errors) {        	=09
        		=
objImg.setProperty('src',DIR_STATIC_SKIN+'/images/update.gif');=20
            	if (!result) {
                	msgErrorBox.alert('Error','Please try again later');    =
      =20
        		}     =20
        		if (result.bStateError) {
                	msgErrorBox.alert(result.sMsgTitle,result.sMsg);
        		} else {  =20
        			var aCmt=3Dresult.aComments;         		=09
        			if (aCmt.length>0 && result.iMaxIdComment) {
        				thisObj.setIdCommentLast(result.iMaxIdComment);
        				var countComments=3D$('count-comments');
        				=
countComments.set('text',parseInt(countComments.get('text'))+aCmt.length)=
;
        				if ($('block_stream_comment') && lsBlockStream) {
        					=
lsBlockStream.toggle($('block_stream_comment'),'comment_stream');
        				}
        			}        =09
        			var iCountOld=3D0;
        			if (bNotFlushNew) {		      	       			       		=09
        				iCountOld=3DthisObj.countNewComment;        			=09
        			} else {
        				thisObj.aCommentNew=3D[];
        			}
        			if (selfIdComment) {
        				thisObj.setCountNewComment(aCmt.length-1+iCountOld);
        				thisObj.hideCommentForm(thisObj.iCurrentShowFormComment);=20
        			} else {
        				thisObj.setCountNewComment(aCmt.length+iCountOld);
        			}        		=09
        			aCmt.each(function(item,index) {  =20
        				if (!(selfIdComment && selfIdComment=3D=3Ditem.id)) {
        					thisObj.aCommentNew.extend([item.id]);
        				}        				 			=09
        				thisObj.injectComment(item.idParent,item.id,item.html);
        			});=20
        		=09
        			if (selfIdComment && $('comment_id_'+selfIdComment)) {
						thisObj.scrollToComment(selfIdComment);
					}
        		}                          =20
	        },
        	true
       );
       }).delay(1000);
	},
=09
	setIdCommentLast: function(id) {
		this.idCommentLast=3Did;
	},
=09
	setCountNewComment: function(count) {
		this.countNewComment=3Dcount;	=09
		var divCountNew=3D$('new-comments');
        if (this.countNewComment>0) {
        	divCountNew.set('text',this.countNewComment);=20
        	divCountNew.setStyle('display','block');        =09
        } else {
        	this.countNewComment=3D0;
        	divCountNew.set('text',0);         =09
        	divCountNew.setStyle('display','none');
        }
	},
=09
	goNextComment: function() {	=09
		if (this.aCommentNew[0]) {
			if ($('comment_id_'+this.aCommentNew[0])) {
				this.scrollToComment(this.aCommentNew[0]);
			}		=09
			this.aCommentNew.erase(this.aCommentNew[0]);
		}	=09
		this.setCountNewComment(this.countNewComment-1);
	},
=09
	scrollToComment: function(idComment) {
		this.docScroller.setOptions({=20
			duration:500,=20
			offset: {
        		'x': 0,
        		'y': 0
   			}
 		}); 	=09
 		var cmt=3D$('comment_content_id_'+idComment);
 		var deltaY=3Dcmt.getDimensions().height/2-window.getSize().y/2;
 		if (deltaY>0) {
 			deltaY=3D0;
 		}
		this.docScroller.start(0,cmt.getPosition().y+deltaY);
		if (this.iCommentIdLastView) {
			$('comment_content_id_'+this.iCommentIdLastView).removeClass('view');
		}			=09
		$('comment_content_id_'+idComment).addClass('view');
		this.iCommentIdLastView=3DidComment;
	},
=09
	addComment: function(formObj,topicId) {
		var thisObj=3Dthis;
		formObj=3D$(formObj);		=09
		JsHttpRequest.query(
        	DIR_WEB_ROOT+'/include/ajax/commentAdd.php',
        	{ params: formObj },
        	function(result, errors) {         		=20
            	if (!result) {
            		thisObj.enableFormComment();
                	msgErrorBox.alert('Error','Please try again later');    =
      =20
        		}     =20
        		if (result.bStateError) {        		=09
					thisObj.enableFormComment();        		=09
                	msgErrorBox.alert(result.sMsgTitle,result.sMsg);
        		} else {      =20
        			$('form_comment_text').disabled=3Dtrue; 		=09
        			=
thisObj.responseNewComment(topicId,$('update-comments'),result.sCommentId=
,true);        			   							=09
        		}                          =20
	        },
        	true
      	);
      	$('form_comment_text').addClass('loader');	=09
	},
=09
	enableFormComment: function() {
		$('form_comment_text').removeClass('loader');
		$('form_comment_text').disabled=3Dfalse;=20
	},
=09
	addCommentScroll: function(commentId) {
		this.aCommentNew.extend([commentId]);
		this.setCountNewComment(this.countNewComment+1);
	},
=09
	toggleComment: function(obj,commentId) {
		var divContent=3D$('comment_content_id_'+commentId);
		if (!divContent) {
			return false;
		}
	=09
		var thisObj=3Dthis;		=09
		JsHttpRequest.query(
        	DIR_WEB_ROOT+'/include/ajax/commentToggle.php',
        	{ idComment: commentId },
        	function(result, errors) {         		=20
            	if (!result) {
                	msgErrorBox.alert('Error','Please try again later');    =
      =20
        		}     =20
        		if (result.bStateError) {        		=09
                	msgErrorBox.alert(result.sMsgTitle,result.sMsg);
        		} else {  =20
        			msgNoticeBox.alert(result.sMsgTitle,result.sMsg);     		=09
        			=
divContent.removeClass('old').removeClass('self').removeClass('new').remo=
veClass('del');
        			obj.removeClass('delete').removeClass('repair');
        			if (result.bState) {
        				divContent.addClass('del');
        				obj.addClass('repair');
        			} else {
        				obj.addClass('delete');
        			}
					obj.set('text',result.sTextToggle);        			        							=09
        		}                          =20
	        },
        	true
       );
	},
=09
	toggleCommentForm: function(idComment) {
		if (!$('reply_'+this.iCurrentShowFormComment) || =
!$('reply_'+idComment)) {
			return;
		}=20
		divCurrentForm=3D$('reply_'+this.iCurrentShowFormComment);
		divNextForm=3D$('reply_'+idComment);
			=09
		var slideCurrentForm =3D new Fx.Slide(divCurrentForm);
		var slideNextForm =3D new Fx.Slide(divNextForm);
	=09
		=
$('comment_preview_'+this.iCurrentShowFormComment).set('html','').setStyl=
e('display','none');
		if (this.iCurrentShowFormComment=3D=3DidComment) {
			slideCurrentForm.toggle();
			//$('form_comment_text').focus();
			return;
		}
	=09
		slideCurrentForm.slideOut();
		divNextForm.set('html',divCurrentForm.get('html'));
		divCurrentForm.set('html','');	=09
		divNextForm.setStyle('display','block');
		slideNextForm.hide();
	=09
		slideNextForm.slideIn();
			=09
		//$('form_comment_text').focus();
		$('form_comment_text').setProperty('value','');
		$('form_comment_reply').setProperty('value',idComment);
		this.iCurrentShowFormComment=3DidComment;
	},
=09
	hideCommentForm: function(idComment) {
		if ($('reply_'+idComment)) {
			this.enableFormComment();
			=
$('comment_preview_'+this.iCurrentShowFormComment).set('html','').setStyl=
e('display','none');
			var slideForm =3D new Fx.Slide('reply_'+idComment);						=09
			slideForm.hide();
		}
	},
=09
	preview: function() {
		=
ajaxTextPreview('form_comment_text',false,'comment_preview_'+this.iCurren=
tShowFormComment);	=09
	},
=09
	goToParentComment: function(obj) {
		var idCmt =3D obj.href.substr(obj.href.indexOf('#')+8);
		var objCmtParent=3D$('comment_id_'+idCmt);
		var objCmt=3Dobj.getParent('div.comment');
		objCmtParent.getElement('.goto-comment-child').removeClass('hidden');
		objCmtParent.getElement('.goto-comment-child a').href =3D '#comment' + =
objCmt.id.substr(11);
		this.docScroller.setOptions({ 		=09
			offset: {'y': 0}
 		});
		this.docScroller.toElement(objCmtParent);
		return false;
	},
=09
	goToChildComment: function(obj) {
		var idCmt =3D obj.href.substr(obj.href.indexOf('#')+8);
		var objCmtChild=3D$('comment_id_'+idCmt);
		var objCmt=3Dobj.getParent('div.comment');
		objCmt.getElement('.goto-comment-child').addClass('hidden');
		this.docScroller.setOptions({ 		=09
			offset: {'y': 0}
 		});
		this.docScroller.toElement(objCmtChild);
		return false;
	}
});


var lsCmtTree;
var formCommentSlide;

window.addEvent('domready', function() {  =09
    lsCmtTree =3D new lsCmtTreeClass({
    	img: {
    		path: DIR_STATIC_SKIN+'/images/'
    	},
    	classes: {
    		openImg: 'folding-open',
    		closeImg: 'folding'
    	}
    });
});


------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pagead2.googlesyndication.com/pagead/show_ads.js

(function(){var f=3D!0,g=3Dnull,h=3D!1,aa=3Dfunction(a,b,c){return =
a.call.apply(a.bind,arguments)},ba=3Dfunction(a,b,c){if(!a)throw =
Error();if(2<arguments.length){var =
e=3DArray.prototype.slice.call(arguments,2);return function(){var =
c=3DArray.prototype.slice.call(arguments);Array.prototype.unshift.apply(c=
,e);return a.apply(b,c)}}return function(){return =
a.apply(b,arguments)}},l=3Dfunction(a,b,c){l=3DFunction.prototype.bind&&-=
1!=3DFunction.prototype.bind.toString().indexOf("native =
code")?aa:ba;return l.apply(g,arguments)};var m=3D(new =
Date).getTime();var p=3Dfunction(a){a=3DparseFloat(a);return =
isNaN(a)||1<a||0>a?0:a},ca=3D/^([\w-]+\.)*([\w-]{2,})(\:[0-9]+)?$/,da=3Df=
unction(a,b){if(!a)return b;var c=3Da.match(ca);return c?c[0]:b};var =
ea=3Dp("0.01"),fa=3Dp("0.001"),ia=3Dp("0.01");var =
t=3Dfunction(){return"r20130304"},ja=3D/^true$/.test("false")?f:h,ka=3D/^=
true$/.test("false")?f:h;var la=3Dfunction(){return =
da("","pagead2.googlesyndication.com")};var =
ma=3D/&/g,na=3D/</g,oa=3D/>/g,pa=3D/\"/g,v=3D{"\x00":"\\0","\b":"\\b","\f=
":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\=
\\\"},w=3D{"'":"\\'"};var =
x=3Dwindow,y,qa=3Dg,z=3Ddocument.getElementsByTagName("script");z&&z.leng=
th&&(qa=3Dz[z.length-1].parentNode);y=3Dqa;la();var ra=3Dfunction(a){var =
b=3DA,c;for(c in =
b)Object.prototype.hasOwnProperty.call(b,c)&&a.call(g,b[c],c,b)},B=3Dfunc=
tion(a){return!!a&&"function"=3D=3Dtypeof =
a&&!!a.call},sa=3Dfunction(a,b){if(!(2>arguments.length))for(var =
c=3D1,e=3Darguments.length;c<e;++c)a.push(arguments[c])};function =
ta(a,b){a.addEventListener?a.addEventListener("load",b,h):a.attachEvent&&=
a.attachEvent("onload",b)}=0A=
var ua=3Dfunction(a,b){if(!(1E-4>Math.random())){var =
c=3DMath.random();if(c<b)return a[Math.floor(c/b*a.length)]}return =
g},C=3Dfunction(a){try{return!!a.location.href||""=3D=3D=3Da.location.hre=
f}catch(b){return h}};var va=3Dg,wa=3Dfunction(){if(!va){for(var =
a=3Dwindow,b=3Da,c=3D0;a!=3Da.parent;)if(a=3Da.parent,c++,C(a))b=3Da;else=
 break;va=3Db}return va};var =
D,E=3Dfunction(a){this.c=3D[];this.b=3Da||window;this.a=3D0;this.d=3Dg},x=
a=3Dfunction(a,b){this.l=3Da;this.i=3Db};E.prototype.n=3Dfunction(a,b){0=3D=
=3Dthis.a&&0=3D=3Dthis.c.length&&(!b||b=3D=3Dwindow)?(this.a=3D2,this.f(n=
ew =
xa(a,window))):this.g(a,b)};E.prototype.g=3Dfunction(a,b){this.c.push(new=
 =
xa(a,b||this.b));ya(this)};E.prototype.o=3Dfunction(a){this.a=3D1;a&&(thi=
s.d=3Dthis.b.setTimeout(l(this.e,this),a))};E.prototype.e=3Dfunction(){1=3D=
=3Dthis.a&&(this.d!=3Dg&&(this.b.clearTimeout(this.d),this.d=3Dg),this.a=3D=
0);ya(this)};E.prototype.p=3Dfunction(){return f};=0A=
E.prototype.nq=3DE.prototype.n;E.prototype.nqa=3DE.prototype.g;E.prototyp=
e.al=3DE.prototype.o;E.prototype.rl=3DE.prototype.e;E.prototype.sz=3DE.pr=
ototype.p;var =
ya=3Dfunction(a){a.b.setTimeout(l(a.m,a),0)};E.prototype.m=3Dfunction(){i=
f(0=3D=3Dthis.a&&this.c.length){var =
a=3Dthis.c.shift();this.a=3D2;a.i.setTimeout(l(this.f,this,a),0);ya(this)=
}};E.prototype.f=3Dfunction(a){this.a=3D0;a.l()};=0A=
var za=3Dfunction(a){try{return a.sz()}catch(b){return =
h}},Aa=3Dfunction(a){return!!a&&("object"=3D=3Dtypeof =
a||"function"=3D=3Dtypeof =
a)&&za(a)&&B(a.nq)&&B(a.nqa)&&B(a.al)&&B(a.rl)},Ba=3Dfunction(){if(D&&za(=
D))return D;var a=3Dwa(),b=3Da.google_jobrunner;return =
Aa(b)?D=3Db:a.google_jobrunner=3DD=3Dnew =
E(a)},Ca=3Dfunction(a,b){Ba().nq(a,b)},Da=3Dfunction(a,b){Ba().nqa(a,b)};=
var Ea=3D/MSIE =
[2-7]|PlayStation|Gecko\/20090226/i,Fa=3D/Android|Opera/,Ga=3Dfunction(){=
var =
a=3DG,b=3DH.google_ad_width,c=3DH.google_ad_height,e=3D["<iframe"],d;for(=
d in =
a)a.hasOwnProperty(d)&&sa(e,d+"=3D"+a[d]);e.push('style=3D"left:0;positio=
n:absolute;top:0;"');e.push("></iframe>");b=3D"border:none;height:"+c+"px=
;margin:0;padding:0;position:relative;visibility:visible;width:"+b+"px";r=
eturn['<ins style=3D"display:inline-table;',b,'"><ins =
id=3D"',a.id+"_anchor",'" style=3D"display:block;',b,'">',e.join(" =
"),"</ins></ins>"].join("")};var =
Ha=3Dfunction(a,b,c){c||(c=3Dka?"https":"http");return[c,"://",a,b].join(=
"")};var Ia=3Dfunction(){},Ka=3Dfunction(a,b,c){switch(typeof b){case =
"string":Ja(b,c);break;case =
"number":c.push(isFinite(b)&&!isNaN(b)?b:"null");break;case =
"boolean":c.push(b);break;case "undefined":c.push("null");break;case =
"object":if(b=3D=3Dg){c.push("null");break}if(b instanceof Array){var =
e=3Db.length;c.push("[");for(var =
d=3D"",k=3D0;k<e;k++)c.push(d),Ka(a,b[k],c),d=3D",";c.push("]");break}c.p=
ush("{");e=3D"";for(d in =
b)b.hasOwnProperty(d)&&(k=3Db[d],"function"!=3Dtypeof =
k&&(c.push(e),Ja(d,c),c.push(":"),Ka(a,k,c),e=3D=0A=
","));c.push("}");break;case "function":break;default:throw =
Error("Unknown type: "+typeof =
b);}},Ma=3D{'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\=
\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},Na=3D/\uffff/.test("\uffff")?=
/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,Ja=3Dfunction(a=
,b){b.push('"');b.push(a.replace(Na,function(a){if(a in Ma)return =
Ma[a];var =
b=3Da.charCodeAt(0),d=3D"\\u";16>b?d+=3D"000":256>b?d+=3D"00":4096>b&&(d+=
=3D"0");return Ma[a]=3Dd+b.toString(16)}));b.push('"')};var =
I=3D"google_ad_block google_ad_channel google_ad_client google_ad_format =
google_ad_height google_ad_host google_ad_host_channel =
google_ad_host_tier_id google_ad_output google_ad_override =
google_ad_region google_ad_section google_ad_slot google_ad_type =
google_ad_width google_adtest google_allow_expandable_ads =
google_alternate_ad_url google_alternate_color =
google_analytics_domain_name google_analytics_uacct google_bid =
google_city google_color_bg google_color_border google_color_line =
google_color_link google_color_text google_color_url google_container_id =
google_contents google_country google_cpm google_ctr_threshold =
google_cust_age google_cust_ch google_cust_gender google_cust_id =
google_cust_interests google_cust_job google_cust_l google_cust_lh =
google_cust_u_url google_disable_video_autoplay google_ed google_eids =
google_enable_ose google_encoding google_font_face google_font_size =
google_frame_id google_gl google_hints google_image_size google_kw =
google_kw_type google_lact google_language google_loeid =
google_max_num_ads google_max_radlink_len google_mtl google_num_radlinks =
google_num_radlinks_per_unit google_num_slots_to_rotate =
google_only_ads_with_video google_only_pyv_ads =
google_only_userchoice_ads google_override_format google_page_url =
google_previous_watch google_previous_searches google_referrer_url =
google_region google_reuse_colors google_rl_dest_url google_rl_filtering =
google_rl_mode google_rt google_safe google_sc_id google_scs google_sui =
google_skip google_tag_info google_targeting google_tdsma google_tfs =
google_tl google_ui_features google_ui_version google_video_doc_id =
google_video_product_type google_with_pyv_ads google_yt_pt =
google_yt_up".split(" ");var =
Oa=3D/\.((google(|groups|mail|images|print))|gmail)\./,Pa=3Dfunction(){va=
r =
a=3DJ,b=3DOa.test(a.location.host);return!(!a.postMessage||!a.localStorag=
e||!a.JSON||b)};var =
Qa=3Dfunction(a){this.b=3Da;a.google_iframe_oncopy||(a.google_iframe_onco=
py=3D{handlers:{}});this.j=3Da.google_iframe_oncopy},Ra;var K=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&&s.handlers,h=3DH&&H[i]=
,w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&&d&&(!d.body|=
|!d.body.firstChild)){if(h.call){setTimeout(h,0)}else =
if(h.match){w.location.replace(h)}}";=0A=
/[&<>\"]/.test(K)&&(-1!=3DK.indexOf("&")&&(K=3DK.replace(ma,"&amp;")),-1!=
=3DK.indexOf("<")&&(K=3DK.replace(na,"&lt;")),-1!=3DK.indexOf(">")&&(K=3D=
K.replace(oa,"&gt;")),-1!=3DK.indexOf('"')&&(K=3DK.replace(pa,"&quot;")))=
;Ra=3DK;Qa.prototype.set=3Dfunction(a,b){this.j.handlers[a]=3Db;this.b.ad=
dEventListener&&!/MSIE/.test(navigator.userAgent)&&this.b.addEventListene=
r("load",l(this.k,this,a),h)};Qa.prototype.k=3Dfunction(a){a=3Dthis.b.doc=
ument.getElementById(a);var =
b=3Da.contentWindow.document;if(a.onload&&b&&(!b.body||!b.body.firstChild=
))a.onload()};function Sa(){var =
a=3DJ,b=3DJ.document,c=3Da.google_ad_width,e=3Da.google_ad_height,d;a:{tr=
y{d=3Da.top.document=3D=3Db;break a}catch(k){}d=3Dh}if(d)return =
h;d=3Db.documentElement;if(c&&e){var =
n=3D1,r=3D1;a.innerHeight?(n=3Da.innerWidth,r=3Da.innerHeight):d&&d.clien=
tHeight?(n=3Dd.clientWidth,r=3Dd.clientHeight):b.body&&(n=3Db.body.client=
Width,r=3Db.body.clientHeight);if(r>2*e||n>2*c)return h}return f};var =
Ta=3Dfunction(){var a=3D"script";return["<",a,' =
src=3D"',Ha(la(),["/pagead/js/",t(),"/r20130206/show_ads_impl.js"].join("=
"),""),'"></',a,">"].join("")},Ua=3Dfunction(a,b,c,e){return =
function(){var =
d=3Dh;e&&Ba().al(3E4);try{if(C(a.document.getElementById(b).contentWindow=
)){var =
k=3Da.document.getElementById(b).contentWindow,n=3Dk.document;if(!n.body|=
|!n.body.firstChild)n.open(),=0A=
k.google_async_iframe_close=3Df,n.write(c)}else{var =
r=3Da.document.getElementById(b).contentWindow,ga;k=3Dc;k=3DString(k);if(=
k.quote)ga=3Dk.quote();else{for(var n=3D['"'],S=3D0;S<k.length;S++){var =
T=3Dk.charAt(S),La=3DT.charCodeAt(0),Db=3Dn,Eb=3DS+1,ha;if(!(ha=3Dv[T])){=
var F;if(31<La&&127>La)F=3DT;else{var s=3DT;if(s in w)F=3Dw[s];else if(s =
in v)F=3Dw[s]=3Dv[s];else{var =
q=3Ds,u=3Ds.charCodeAt(0);if(31<u&&127>u)q=3Ds;else{if(256>u){if(q=3D"\\x=
",16>u||256<u)q+=3D"0"}else =
q=3D"\\u",4096>u&&(q+=3D"0");q+=3Du.toString(16).toUpperCase()}F=3Dw[s]=3D=
q}}ha=3DF}Db[Eb]=3D=0A=
ha}n.push('"');ga=3Dn.join("")}r.location.replace("javascript:"+ga)}d=3Df=
}catch(Qb){r=3Dwa().google_jobrunner,Aa(r)&&r.rl()}d&&(new =
Qa(a)).set(b,Ua(a,b,c,h))}},Va=3Dfunction(){var =
a=3D["<iframe"];ra(function(b,c){a.push(" =
"+c+'=3D"'+(b=3D=3Dg?"":b)+'"')});a.push("></iframe>");return =
a.join("")},Wa=3Dfunction(a,b){var =
c=3DJ.google_ad_height,e=3Db?'"':"",d=3De+"0"+e;a.width=3De+J.google_ad_w=
idth+e;a.height=3De+c+e;a.frameborder=3Dd;a.marginwidth=3Dd;a.marginheigh=
t=3Dd;a.vspace=3Dd;a.hspace=3Dd;a.allowtransparency=3De+"true"+e;a.scroll=
ing=3D=0A=
e+"no"+e},Xa=3DMath.floor(1E6*Math.random()),Ya=3Dfunction(a){for(var =
b=3Da.data.split("\n"),c=3D{},e=3D0;e<b.length;e++){var =
d=3Db[e].indexOf("=3D");-1!=3Dd&&(c[b[e].substr(0,d)]=3Db[e].substr(d+1))=
}b=3Dc[3];if(c[1]=3D=3DXa&&(window.google_top_js_status=3D4,a.source=3D=3D=
top&&0=3D=3Db.indexOf(a.origin)&&(window.google_top_url=3Db,window.google=
_top_js_status=3D5),window.google_top_js_callbacks)){for(a=3D0;a<window.g=
oogle_top_js_callbacks.length;a++)window.google_top_js_callbacks[a]();win=
dow.google_top_js_callbacks.length=3D0}};window.google_loader_used=3Df;(f=
unction(a){"google_onload_fired"in =
a||(a.google_onload_fired=3Dh,ta(a,function(){a.google_onload_fired=3Df})=
)})(window);=0A=
if(!window.google_top_experiment&&(window.google_top_experiment=3Dua(["jp=
_c","jp_zl","jp_wfpmr"],ea),"jp_zl"=3D=3D=3Dwindow.google_top_experiment|=
|"jp_wfpmr"=3D=3D=3Dwindow.google_top_experiment)){var =
Za=3Dwindow,$a=3D2;try{Za.top.document=3D=3DZa.document?$a=3D0:C(Za.top)&=
&($a=3D1)}catch(ab){}if(2!=3D=3D$a)window.google_top_js_status=3D0;else =
if(top.postMessage){var =
bb;try{bb=3Dtop.frames.google_top_static_frame?f:h}catch(cb){bb=3Dh}if(bb=
){var =
L=3Dwindow;L.addEventListener?L.addEventListener("message",Ya,h):L.attach=
Event&&L.attachEvent("onmessage",=0A=
Ya);window.google_top_js_status=3D3;var =
db=3D{"0":"google_loc_request",1:Xa},eb=3D[],fb;for(fb in =
db)eb.push(fb+"=3D"+db[fb]);top.postMessage(eb.join("\n"),"*")}else =
window.google_top_js_status=3D2}else window.google_top_js_status=3D1}var =
gb;if(window.google_enable_async=3D=3D=3Dh)gb=3D0;else{var =
hb=3Dnavigator.userAgent;gb=3D(Ea.test(hb)||Fa.test(hb)?h:f)&&!window.goo=
gle_container_id&&(!window.google_ad_output||"html"=3D=3Dwindow.google_ad=
_output)}=0A=
if(gb){var =
ib=3Dwindow;ib.google_unique_id?++ib.google_unique_id:ib.google_unique_id=
=3D1;var J=3Dwindow,G=3D{};Wa(G,f);G.onload=3D'"'+Ra+'"';for(var =
M,H=3DJ,jb=3DH.document,N=3DG.id,kb=3D0;!N||H.document.getElementById(N);=
)N=3D"aswift_"+kb++;G.id=3DN;G.name=3DN;jb.write(Ga());M=3DN;var =
lb,O=3DJ;O.google_page_url&&(O.google_page_url=3DString(O.google_page_url=
));for(var mb=3D[],nb=3D0,ob=3DI.length;nb<ob;nb++){var =
pb=3DI[nb];if(O[pb]!=3Dg){var qb;try{var rb=3D[];Ka(new =
Ia,O[pb],rb);qb=3Drb.join("")}catch(sb){}qb&&sa(mb,pb,"=3D",qb,";")}}lb=3D=
mb.join("");=0A=
var =
P=3Dwindow,tb=3DP.google_ad_output,Q=3DP.google_ad_format;if(!Q&&("html"=3D=
=3Dtb||tb=3D=3Dg))Q=3DP.google_ad_width+"x"+P.google_ad_height;Q=3DQ&&(!P=
.google_ad_slot||P.google_override_format)?Q.toLowerCase():"";P.google_ad=
_format=3DQ;var =
R,ub=3D[x.google_ad_slot,x.google_ad_format,x.google_ad_type,x.google_ad_=
width,x.google_ad_height];if(y){var U;if(y){for(var =
vb=3D[],wb=3D0,V=3Dy;V&&25>wb;V=3DV.parentNode,++wb)vb.push(9!=3DV.nodeTy=
pe&&V.id||"");U=3Dvb.join()}else U=3D"";U&&ub.push(U)}var =
xb=3D0;if(ub){var yb=3Dub.join(":"),zb=3Dyb.length;=0A=
if(0=3D=3Dzb)xb=3D0;else{for(var =
W=3D305419896,Ab=3D0;Ab<zb;Ab++)W^=3D(W<<5)+(W>>2)+yb.charCodeAt(Ab)&4294=
967295;xb=3D0<W?W:4294967296+W}}R=3Dxb.toString();a:{var =
X=3Dwindow,Y=3DX.google_async_slots;Y||(Y=3DX.google_async_slots=3D{});va=
r Bb=3DX.google_unique_id,Z=3DString("number"=3D=3Dtypeof Bb?Bb:0);if(Z =
in Y&&(Z+=3D"b",Z in Y))break =
a;Y[Z]=3D{sent:h,w:X.google_ad_width||"",h:X.google_ad_height||"",adk:R,t=
ype:X.google_ad_type||"",slot:X.google_ad_slot||"",fmt:X.google_ad_format=
||"",cli:X.google_ad_client||"",saw:[]}}var =
Cb=3D/MSIE/.test(navigator.userAgent)?=0A=
0:ja&&"dev"!=3Dt()?ia:fa,Fb=3Dja&&"dev"!=3Dt()?["XN","PC"]:["X","XN","S",=
"SN","PC"],$=3DJ.google_ad_handling_experiment||(Pa()?ua(Fb,Cb):""),Gb=3D=
"";if(Pa()&&"S"!=3D$&&"SN"!=3D$&&"XN"!=3D$){var =
Hb;Hb=3D"zrt_ads_frame"+J.google_unique_id;var =
Ib=3DencodeURIComponent(J.google_page_url||Sa()?J.document.referrer:J.doc=
ument.URL),Jb=3Dg;"PC"=3D=3D$&&(Jb=3D"K-"+(Ib+"/"+R+"/"+J.google_unique_i=
d));var A=3D{};Wa(A,h);A.style=3D"display:none";var =
Kb=3DJb;A.id=3DHb;A.name=3DHb;var =
Lb=3DA,Mb;Mb=3DHa(da("","googleads.g.doubleclick.net"),=0A=
["/pagead/html/",t(),"/r20130206/zrt_lookup.html",Kb?"#"+encodeURICompone=
nt(Kb):""].join(""));Lb.src=3DMb;Gb=3DVa()}for(var =
Nb=3DJ,Ob=3D0,Pb=3DI.length;Ob<Pb;Ob++)Nb[I[Ob]]=3Dg;var Rb=3D(new =
Date).getTime(),Sb=3DJ.google_top_experiment,Tb=3D["<!doctype =
html><html><body>",Gb,"<script>",lb,"google_show_ads_impl=3Dtrue;google_u=
nique_id=3D",J.google_unique_id,';google_async_iframe_id=3D"',M,'";google=
_ad_unit_key=3D"',R,'";google_start_time=3D',m,";",Sb?'google_top_experim=
ent=3D"'+=0A=
Sb+'";':"",$?'google_ad_handling_experiment=3D"'+$+'";':"","google_bpp=3D=
",Rb>m?Rb-m:1,";\x3c/script>",Ta(),"</body></html>"].join("");(J.document=
.getElementById(M)?Ca:Da)(Ua(J,M,Tb,f))}else =
window.google_start_time=3Dm,document.write(Ta());})();=0A=

------=_NextPart_000_0000_01CE1B31.A44E5EB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://reformal.ru/tab6.js

function ref_ud(a){document.write(a);}=0A=
function ref_id(id){return document.getElementById(id);}=0A=
var isIE6 =3D /msie 6/.test(navigator.userAgent.toLowerCase());=0A=
=0A=
var dref_mode =3D (typeof reformal_wdg_mode !=3D "undefined") ? =
reformal_wdg_mode : 0 ;=0A=
var dref_title =3D (typeof reformal_wdg_title !=3D "undefined") ? =
reformal_wdg_title : "=CC=EE=E9 =EE=F2=E7=FB=E2" ;=0A=
var dref_ltitle =3D (typeof reformal_wdg_ltitle !=3D "undefined") ? =
reformal_wdg_ltitle : "=CE=F1=F2=E0=E2=E8=F2=FC =EE=F2=E7=FB=E2" ;=0A=
var dref_lfont =3D (typeof reformal_wdg_lfont !=3D "undefined") ? =
reformal_wdg_lfont : "" ;=0A=
var dref_lsize =3D (typeof reformal_wdg_lsize !=3D "undefined") ? =
reformal_wdg_lsize : "12px" ;=0A=
var dref_color =3D (typeof reformal_wdg_color !=3D "undefined" && =
reformal_wdg_color!=3D'#') ? reformal_wdg_color : "#FFA000" ;=0A=
var dref_align =3D (typeof reformal_wdg_align !=3D "undefined" && =
reformal_wdg_align!=3D'') ? reformal_wdg_align : "left" ;=0A=
var dref_charset =3D (typeof reformal_wdg_charset !=3D "undefined") ? =
reformal_wdg_charset : "" ;=0A=
var dref_waction =3D (typeof reformal_wdg_waction !=3D "undefined") ? =
reformal_wdg_waction : 0 ;=0A=
=0A=
/* Awesome crutch */=0A=
dref_waction =3D isIE6 ? true : dref_waction;=0A=
=0A=
var dref_ext_cms =3D ((typeof reformal_wdg_cms !=3D "undefined") ? =
reformal_wdg_cms : 'reformal') ;=0A=
=0A=
var dref_ext_img =3D (typeof reformal_wdg_bimage !=3D "undefined" && =
reformal_wdg_bimage!=3D'') ? 1 : 0 ;=0A=
var dref_ext_img_m =3D (dref_ext_img && reformal_wdg_bimage.substring(3, =
reformal_wdg_bimage).toLowerCase()=3D=3D'htt') ? 1 : 0;=0A=
if (dref_ext_img_m && reformal_wdg_bimage.indexOf( 'reformal.ru/files/', =
0 ) > 0) { dref_ext_img_m =3D 0; var v =3D =
reformal_wdg_bimage.toString().split ( '/' ); reformal_wdg_bimage =3D =
v[v.length-1]; }=0A=
=0A=
	=0A=
out_link =3D =
'http://'+reformal_wdg_domain+'.reformal.ru/proj/?mod=3Done';=0A=
=0A=
=0A=
if (dref_waction){=0A=
        if(typeof reformal_wdg_vlink !=3D "undefined") {=0A=
		var vlink =3D reformal_wdg_vlink;=0A=
    } else {=0A=
        if (!isIE6) {=0A=
            var vlink =3D =
'http://'+reformal_wdg_domain+'.reformal.ru/proj/?mod=3Done';=0A=
        } else {=0A=
            var vlink =3D =
'http://'+reformal_wdg_domain+'.reformal.ru/proj/';=0A=
        }=0A=
    }=0A=
} else {=0A=
    var vlink =3D 'javascript:MyOtziv.mo_show_box();'; }=0A=
=0A=
=0A=
var vsiteAdr =3D (typeof reformal_wdg_vlink !=3D "undefined")? 1 : 0;=0A=
=0A=
MyOtzivCl =3D function() {=0A=
    var siteAdr =3D 'http://reformal.ru/';=0A=
    =0A=
    this.checkLink =3D function() {=0A=
        if (navigator.userAgent.toLowerCase().indexOf('firefox') =3D=3D =
-1) return;=0A=
   =0A=
        var nos =3D document.getElementsByTagName('noscript');=0A=
        var pattern =3D (typeof reformal_wdg_vlink !=3D 'undefined' ) ?=0A=
                   '<\s*a[^>]*href[^>]*(reformal.ru|' + =
reformal_wdg_vlink + ')[^>]*>' : =0A=
                   '<\s*a[^>]*href[^>]*reformal.ru[^>]*>';=0A=
        var re =3D new RegExp(pattern, 'i');=0A=
        for(var i =3D 0, length =3D nos.length; i < length; i++) {=0A=
            if (re.test(nos[i].textContent)) return;=0A=
        }=0A=
=0A=
        var link,=0A=
            links =3D document.getElementsByTagName("a");=0A=
        var re =3D new RegExp((typeof reformal_wdg_vlink !=3D =
'undefined' ) ? 'reformal.ru|' + reformal_wdg_vlink : 'reformal.ru', =
'i');=0A=
        for(var i =3D 0, length =3D links.length; i < length; i++) {=0A=
            link =3D links[i];=0A=
            if (link.id && (link.id =3D=3D 'reformal_tab' || link.id =
=3D=3D 'reformal_logo')) continue;=0A=
            if (re.test(link.href)) return;=0A=
        }=0A=
=0A=
        var i =3D new Image();=0A=
        i.src =3D 'http://log.reformal.ru/bl.php?pid=3D' + =
reformal_wdg_domain + '&url=3D' + window.location.href;=0A=
    }=0A=
    =0A=
    this.mo_get_win_width =3D function() {=0A=
        var myWidth =3D 0;=0A=
        if( typeof( window.innerWidth ) =3D=3D 'number' )             =
myWidth =3D window.innerWidth;=0A=
        else if( document.documentElement && =
document.documentElement.clientWidth )             myWidth =3D =
document.documentElement.clientWidth;=0A=
        else if( document.body && document.body.clientWidth)             =
myWidth =3D document.body.clientWidth;=0A=
        return myWidth;=0A=
    }=0A=
	=0A=
    this.mo_get_win_height =3D function() {=0A=
        var myHeight =3D 0;=0A=
        if( typeof( window.innerHeight ) =3D=3D 'number' )             =
myHeight =3D window.innerHeight;=0A=
        else if( document.documentElement && =
document.documentElement.clientHeight )             myHeight =3D =
document.documentElement.clientHeight;=0A=
        else if( document.body && document.body.clientHeight)            =
 myHeight =3D document.body.clientHeight;=0A=
        return myHeight;=0A=
    }=0A=
=0A=
    this.mo_get_scrol =3D function() {=0A=
        var yPos =3D 0;=0A=
        if (self.pageYOffset) {=0A=
            yPos =3D self.pageYOffset;=0A=
        } else if (document.documentElement && =
document.documentElement.scrollTop){=0A=
            yPos =3D document.documentElement.scrollTop;=0A=
        } else if (document.body) {=0A=
            yPos =3D document.body.scrollTop;=0A=
        }=0A=
        return yPos;=0A=
    }=0A=
=0A=
    this.mo_show_box =3D function() {=0A=
	    if (document.getElementById("fthere").innerHTML =3D=3D "") {=0A=
		    document.getElementById("fthere").innerHTML =3D "<iframe =
src=3D\""+(vsiteAdr?'http://'+reformal_wdg_vlink+'/':siteAdr)+"wdg1v1.php=
?domain=3D"+reformal_wdg_domain+"\" width=3D\"627\" height=3D\"250\" =
align=3D\"left\" style=3D\"border: 0; position:relative;\" =
frameborder=3D\"0\" scrolling=3D\"no\">Frame error</iframe>";=0A=
		}=0A=
        var l =3D this.mo_get_win_width()/2 - 350;=0A=
        var t =3D this.mo_get_win_height()/2 - 200 + this.mo_get_scrol();=0A=
        document.getElementById('myotziv_box').style.top  =3D =
(dref_ext_cms=3D=3D'joomla') ? '35px' : t+'px';=0A=
        document.getElementById('myotziv_box').style.left =3D l+'px'; =0A=
        document.getElementById('myotziv_box').style.display=3D'block';=0A=
        try { this.checkLink(); } catch (err) {}=0A=
    }=0A=
=0A=
    this.mo_hide_box =3D function() {=0A=
        document.getElementById('myotziv_box').style.display=3D'none';=0A=
    }=0A=
    =0A=
    this.mo_showcss =3D function() {=0A=
        ref_ud("<style type=3D\"text/css\">");=0A=
        =0A=
        ref_ud(".tdsfh{background: url('"+(dref_ext_img ? =
(dref_ext_img_m ? reformal_wdg_bimage : =
siteAdr+'files/images/buttons/'+reformal_wdg_bimage) : =
siteAdr+'i/feedback_tab.png' )+"');} .widsnjx {margin:0 auto; =
"+((dref_ext_cms=3D=3D'joomla') ? 'position:static;' : =
'position:relative;')+" } .widsnjx fieldset {padding:0; border:none; =
border:0px solid #000; margin:0;} .furjbqy { position:fixed; left:0; =
top:0; z-index:5; width:22px; height:100%; } * html .furjbqy { =
position:absolute; } .furjbqy table {border-collapse: collapse;} =
.furjbqy td {padding: 0px; vertical-align: middle;} .furjbqy a { =
display:block; background:"+(dref_ext_img_m ? 'none' :dref_color)+"; } =
.furjbqy a:hover { background:"+(dref_ext_img_m ? 'none' :dref_color)+"; =
}.furjbqy img {border:0;}");=0A=
        ref_ud(".furrghtd { position:fixed; right:0px; top:0; z-index:5; =
width:22px; height:100%; } * html .furrghtd { position:absolute; } =
.furrghtd table {border-collapse: collapse;} .furrghtd td {padding: 0px; =
vertical-align: middle;} .furrghtd a { display:block; =
background:"+(dref_ext_img_m ? 'none' :dref_color)+"; } .furrghtd =
a:hover { background:"+(dref_ext_img_m ? 'none' :dref_color)+"; =
}.furrghtd img {border:0;} #poxupih {position:absolute; z-index:1001; =
width:689px;  top:0px; left:0px; font-size:11px; color:#3F4543; =
font-family: \"Segoe UI\", Arial, Tahoma, sans-serif;}.poxupih_top =
{width:689px; height:28px; background:transparent =
url("+siteAdr+"tmpl/images/popup_idea_top.png) 0 0 =
no-repeat;}.poxupih_bt {width:689px; height:28px; background:transparent =
url("+siteAdr+"tmpl/images/popup_idea_bt.png) 0 0 no-repeat;}");=0A=
        ref_ud(".poxupih_center {width:689px; background:transparent =
url("+siteAdr+"tmpl/images/popup_idea_bg.png) 0 0 repeat-y;}.poxupih1 =
{margin: 0 20px; overflow:hidden; background:#efefef; =
padding:0px;}.fdsrrel {float:right; margin:-2px 5px 0 0;}.bvnmrte =
{padding: 15px 20px 20px 12px; _padding-left:1px; font-family: \"Segoe =
UI\", Arial, Tahoma, sans-serif; font-size:11px; color:#3F4543; =
}.poxupih1 .bvnmrte {padding-bottom:10px; padding-top:0px; =
background:none;}.gertuik {padding:0 8px 0 20px;}");=0A=
        ref_ud("#poxupih #hretge {margin:8px 0px; height:96px; =
background: #fba11f url("+siteAdr+"tmpl/images/search_bg.gif) 0 0px =
no-repeat; position:relative;}#hretge form {padding: 10px 19px 0 18px =
!important; display:block !important;}#poxupih #bulbulh {width:462px; =
float:left;}#adihet {float:right;background: transparent =
url("+siteAdr+"tmpl/images/add_idea_go.gif) 0 0px no-repeat; border:none =
medium; width:132px; height:27px; float:right; margin-right:-3px; =
cursor:pointer;}");=0A=
        ref_ud("#adihet:hover {background-position: 0 -27px;}.drop_right =
{background: transparent url("+siteAdr+"tmpl/images/q_right1.gif) 0% 0px =
no-repeat; float:right; display:block; width:8px; height:11px; =
margin-top:1px; font-size:0;}.drop_left {background: transparent =
url("+siteAdr+"tmpl/images/q_left1.gif) 0% 0px no-repeat; float:right; =
display:block; width:8px; height:11px; margin-top:1px;}.status_right =
{left:15px !important;  text-align:left; float:right; margin:0 -15px 0 =
0;}");=0A=
        ref_ud("#poxupih  a {position:relative; z-index:10;}#poxupih =
.idea_green_top {height:1%;}");=0A=
        ref_ud("a.pokusijy {display:block; width:16px; height:16px; =
background: transparent url("+siteAdr+"tmpl/images/cancel.gif) 100% 0px =
no-repeat; float:right; position:relative; z-index:101;}a.pokusijy:hover =
{background-position: 100% 100%; cursor:pointer;}.i_prop =
{font-size:18px; color:#fff; padding: 0 0 5px 0;}#bulbulh {width:600px; =
padding: 2px 4px; color:#3F4543; font-family: \"Segoe UI\", Arial; =
font-size:16px; margin-bottom:5px;}#hdsfjfsr {background: transparent =
url("+siteAdr+"tmpl/images/search_go.gif) 0 0px no-repeat; border:none =
medium; width:97px; height:27px; float:right; margin-right:-3px; =
cursor:pointer;}#hdsfjfsr:hover {background-position: 0 -27px;} #poxupih =
.fdsrrel a {z-index:0;}</style>");=0A=
    }=0A=
    =0A=
    this.mo_showframe =3D function() {=0A=
        this.mo_showcss();=0A=
        =0A=
        if (!dref_mode) {=0A=
            if ('left' =3D=3D dref_align) {=0A=
                if (!dref_ext_img) {=0A=
                    ref_ud("<div class=3D\"furjbqy\"><table =
height=3D\"100%\"><tr><td valign=3D\"middle\"><a id=3D\"reformal_tab\" =
href=3D\""+vlink+"\""+((dref_waction)?' target=3D\"_blank\"':"")+"><img =
src=3D\""+siteAdr+"tmpl/images/transp.gif\" alt=3D\"\" style=3D\"border: =
0;\" class=3D\"tdsfh\" /></a></td></tr></table></div>");=0A=
                } else { =0A=
                    ref_ud("<div class=3D\"furjbqy\"><table =
height=3D\"100%\"><tr><td valign=3D\"middle\"><a id=3D\"reformal_tab\" =
href=3D\""+vlink+"\""+((dref_waction)?' target=3D\"_blank\"':"")+"><img =
src=3D\""+(dref_ext_img_m ?reformal_wdg_bimage : =
siteAdr+'files/images/buttons/'+reformal_wdg_bimage)+"\" alt=3D\"\" =
style=3D\"border: 0;\" class=3D\"tdsfh\" =
/></a></td></tr></table></div>");=0A=
                }=0A=
            } else {=0A=
                if (!dref_ext_img)=0A=
                {=0A=
                    ref_ud("<div class=3D\"furrghtd\"><table =
height=3D\"100%\"><tr><td valign=3D\"middle\"><a id=3D\"reformal_tab\" =
href=3D\""+vlink+"\""+((dref_waction)?' target=3D\"_blank\"':"")+"><img =
src=3D\""+siteAdr+"tmpl/images/transp.gif\" alt=3D\"\" style=3D\"border: =
0;\" class=3D\"tdsfh\" /></a></td></tr></table></div>");=0A=
                }=0A=
                else=0A=
                {=0A=
                    ref_ud("<div class=3D\"furrghtd\"><table =
height=3D\"100%\"><tr><td valign=3D\"middle\"><a id=3D\"reformal_tab\" =
href=3D\""+vlink+"\""+((dref_waction)?' target=3D\"_blank\"':"")+"><img =
src=3D\""+(dref_ext_img_m ?reformal_wdg_bimage : =
siteAdr+'files/images/buttons/'+reformal_wdg_bimage)+"\" alt=3D\"\" =
style=3D\"border: 0;\" class=3D\"tdsfh\" =
/></a></td></tr></table></div>");=0A=
                }=0A=
            }=0A=
       } else {=0A=
         ref_ud("<a id=3D\"reformal_tab\" href=3D\""+vlink+"\" =
style=3D\"color:"+dref_color+"; "+(dref_lfont ? =
'font-family:'+dref_lfont+';' : '')+" "+(dref_lsize ? =
'font-size:'+dref_lsize+';' : '')+"\""+((dref_waction)?' =
target=3D\"_blank\"':"")+">"+dref_ltitle+"</a>");=0A=
       }    =0A=
		=0A=
  	   ref_ud("<div style=3D\""+((dref_ext_cms=3D=3D'joomla') ? =
'position:fixed;' : 'position:absolute;')+" display: none; top: 0px; =
left: 0px;\" id=3D\"myotziv_box\">");=0A=
       ref_ud("<div class=3D\"widsnjx\"><div id=3D\"poxupih\"><div =
class=3D\"poxupih_top\"></div><div class=3D\"poxupih_center\"><div =
class=3D\"poxupih1\">");=0A=
       ref_ud("<div class=3D\"gertuik\"><a class=3D\"pokusijy\" =
title=3D\"=E7=E0=EA=F0=FB=F2=FC\" =
onClick=3D\"MyOtziv.mo_hide_box();\"></a>");=0A=
       ref_ud("<div class=3D\"fdsrrel\"><a id=3D\"reformal_logo\" =
href=3D\"http://reformal.ru\" target=3D\"_blank\"><img =
src=3D\""+siteAdr+"tmpl/images/widget_logo.jpg\" width=3D\"109\" =
height=3D\"23\" alt=3D\"\" border=3D\"0\" =
/></a></div>"+dref_title+"</div>");=0A=
       ref_ud("<div id=3D\"hretge\"><form target=3D\"_blank\" =
action=3D\""+(vsiteAdr?"http://"+reformal_wdg_vlink+"/proj/":"http://"+re=
formal_wdg_domain+".reformal.ru/proj/")+"\" method=3D\"get\"><input =
type=3D\"hidden\" name=3D\"charset\" value=3D\""+dref_charset+"\" =
/><fieldset><div class=3D\"i_prop\">=DF =EF=F0=E5=E4=EB=E0=E3=E0=FE =
=E2=E0=EC...</div><input id=3D\"bulbulh\" name=3D\"idea\" =
type=3D\"text\" /><input type=3D\"submit\" value=3D\"\" id=3D\"adihet\" =
/></fieldset></form></div>");=0A=
		=0A=
		ref_ud("<div class=3D\"bvnmrte\" style=3D\"height: 250px;\" =
id=3D\"fthere\"></div>");=0A=
		=0A=
		ref_ud("</div></div><div class=3D\"poxupih_bt\"></div></div></div>");  =
      =0A=
        =0A=
        ref_ud("</div>");=0A=
    }=0A=
}=0A=
var MyOtziv =3D new MyOtzivCl();=0A=
MyOtziv.mo_showframe();=0A=

------=_NextPart_000_0000_01CE1B31.A44E5EB0--
